
R version 3.1.0 (2014-04-10) -- "Spring Dance"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library( "micEconAids" )
Loading required package: systemfit
Loading required package: Matrix
Loading required package: car
Loading required package: lmtest
Loading required package: zoo

Attaching package: 'zoo'

The following objects are masked from 'package:base':

    as.Date, as.Date.numeric

Loading required package: miscTools
Loading required package: micEcon

If you have questions, suggestions, or comments regarding one of the 'micEcon' packages, please use a forum or 'tracker' at micEcon's R-Forge site:
https://r-forge.r-project.org/projects/micecon/
> data( Blanciforti86 )
> options( digits = 3 )
> 
> set <- !is.na( Blanciforti86$pFood1 )
> setWo1 <- set & rownames( Blanciforti86 ) != 1947
> pNames <- c( "pFood1", "pFood2", "pFood3", "pFood4" )
> wNames <- c( "wFood1", "wFood2", "wFood3", "wFood4" )
> wMeans <- colMeans( Blanciforti86[ set, wNames ] )
> pMeans <- colMeans( Blanciforti86[ set, pNames ] )
> xtMean <- mean( Blanciforti86[ set, "xFood" ] )
> 
> 
> ## estimations with different price indices
> # AIDS: translog
> estResultTl <- aidsEst( pNames, wNames, "xFood",
+    data = Blanciforti86[ set, ], method = "IL" )
> print( estResultTl )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: 'Iterated Linear Least Squares Estimator' (IL)
(starting with simplified Laspeyres Index, Ls)
Coefficients:
alpha_0
0 
alpha
wFood1 wFood2 wFood3 wFood4 
-0.259  0.124  0.273  0.862 
beta
 wFood1  wFood2  wFood3  wFood4 
 0.3306  0.0469 -0.0811 -0.2964 
gamma
        pFood1   pFood2   pFood3   pFood4
wFood1 -0.0855 -0.16994  0.03469  0.22072
wFood2 -0.1699  0.15613  0.01104  0.00277
wFood3  0.0347  0.01104  0.00134 -0.04707
wFood4  0.2207  0.00277 -0.04707 -0.17643
> print( summary( estResultTl ) )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: 'Iterated Linear Least Squares Estimator' (IL)
(starting with simplified Laspeyres Index, Ls)
Estimated Coefficients:
          Estimate Std. Error t value Pr(>|t|)    
alpha 1   -0.25917    0.07044   -3.68  0.00041 ***
alpha 2    0.12447    0.08302    1.50  0.13753    
alpha 3    0.27264    0.05387    5.06  2.4e-06 ***
alpha 4    0.86207    0.12819    6.73  2.0e-09 ***
beta 1     0.33056    0.04118    8.03  5.3e-12 ***
beta 2     0.04695    0.04806    0.98  0.33144    
beta 3    -0.08111    0.03113   -2.61  0.01085 *  
beta 4    -0.29641    0.07471   -3.97  0.00015 ***
gamma 1 1 -0.08547    0.04334   -1.97  0.05189 .  
gamma 1 2 -0.16994    0.02480   -6.85  1.1e-09 ***
gamma 1 3  0.03469    0.02104    1.65  0.10295    
gamma 1 4  0.22072    0.05696    3.87  0.00021 ***
gamma 2 1 -0.16994    0.02480   -6.85  1.1e-09 ***
gamma 2 2  0.15613    0.04110    3.80  0.00027 ***
gamma 2 3  0.01104    0.02562    0.43  0.66766    
gamma 2 4  0.00277    0.04850    0.06  0.95454    
gamma 3 1  0.03469    0.02104    1.65  0.10295    
gamma 3 2  0.01104    0.02562    0.43  0.66766    
gamma 3 3  0.00134    0.02182    0.06  0.95120    
gamma 3 4 -0.04707    0.02325   -2.02  0.04609 *  
gamma 4 1  0.22072    0.05696    3.87  0.00021 ***
gamma 4 2  0.00277    0.04850    0.06  0.95454    
gamma 4 3 -0.04707    0.02325   -2.02  0.04609 *  
gamma 4 4 -0.17643    0.09821   -1.80  0.07603 .  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
R-squared Values of expenditure shares:
wFood1 wFood2 wFood3 wFood4 
 0.636  0.830  0.415  0.651 
R-squared Values of quantities:
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   0.936    0.845    0.679    0.627 
> nobs( estResultTl )
[1] 96
> 
> # LA-AIDS: Stone
> estResultLaS <- aidsEst( pNames, wNames, "xFood",
+    data = Blanciforti86[ set, ], priceIndex = "S" )
> print( estResultLaS )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: Linear Approximation (LA) with Stone Index (S)
Coefficients:
alpha
wFood1 wFood2 wFood3 wFood4 
-0.247  0.109  0.268  0.870 
beta
 wFood1  wFood2  wFood3  wFood4 
 0.3240  0.0559 -0.0786 -0.3012 
gamma
        pFood1   pFood2   pFood3  pFood4
wFood1  0.1042 -0.13988 -0.01156  0.0473
wFood2 -0.1399  0.15691  0.00347 -0.0205
wFood3 -0.0116  0.00347  0.01249 -0.0044
wFood4  0.0473 -0.02050 -0.00440 -0.0224
> print( summary( estResultLaS ) )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: Linear Approximation (LA) with Stone Index (S)
Estimated Coefficients:
          Estimate Std. Error t value Pr(>|t|)    
alpha 1   -0.24730    0.07008   -3.53  0.00068 ***
alpha 2    0.10925    0.05787    1.89  0.06252 .  
alpha 3    0.26824    0.03441    7.79  1.6e-11 ***
alpha 4    0.86981    0.09058    9.60  3.6e-15 ***
beta 1     0.32399    0.04104    7.89  9.9e-12 ***
beta 2     0.05586    0.03360    1.66  0.10011    
beta 3    -0.07863    0.02003   -3.93  0.00018 ***
beta 4    -0.30123    0.05299   -5.68  1.8e-07 ***
gamma 1 1  0.10415    0.02080    5.01  3.0e-06 ***
gamma 1 2 -0.13988    0.01530   -9.14  3.1e-14 ***
gamma 1 3 -0.01156    0.00982   -1.18  0.24221    
gamma 1 4  0.04729    0.02398    1.97  0.05184 .  
gamma 2 1 -0.13988    0.01530   -9.14  3.1e-14 ***
gamma 2 2  0.15691    0.02863    5.48  4.4e-07 ***
gamma 2 3  0.00347    0.01755    0.20  0.84365    
gamma 2 4 -0.02050    0.02363   -0.87  0.38805    
gamma 3 1 -0.01156    0.00982   -1.18  0.24221    
gamma 3 2  0.00347    0.01755    0.20  0.84365    
gamma 3 3  0.01249    0.01624    0.77  0.44405    
gamma 3 4 -0.00440    0.01354   -0.32  0.74600    
gamma 4 1  0.04729    0.02398    1.97  0.05184 .  
gamma 4 2 -0.02050    0.02363   -0.87  0.38805    
gamma 4 3 -0.00440    0.01354   -0.32  0.74600    
gamma 4 4 -0.02239    0.03829   -0.58  0.56030    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
R-squared Values of expenditure shares:
wFood1 wFood2 wFood3 wFood4 
 0.627  0.832  0.412  0.657 
R-squared Values of quantities:
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   0.935    0.846    0.677    0.632 
> nobs( estResultLaS )
[1] 96
> 
> # LA-AIDS: Stone with lagged shares
> estResultLaSl <- aidsEst( pNames, wNames, "xFood",
+    data = Blanciforti86[ set, ], priceIndex = "SL" )
> print( estResultLaSl )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: Linear Approximation (LA) with lagged Stone Index (SL)
Coefficients:
alpha
wFood1 wFood2 wFood3 wFood4 
-0.255  0.110  0.261  0.884 
beta
 wFood1  wFood2  wFood3  wFood4 
 0.3287  0.0559 -0.0747 -0.3099 
gamma
        pFood1   pFood2    pFood3    pFood4
wFood1  0.1107 -0.13851 -0.011881  0.039732
wFood2 -0.1385  0.15820 -0.003476 -0.016216
wFood3 -0.0119 -0.00348  0.014589  0.000768
wFood4  0.0397 -0.01622  0.000768 -0.024285
> print( summary( estResultLaSl ) )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: Linear Approximation (LA) with lagged Stone Index (SL)
Estimated Coefficients:
           Estimate Std. Error t value Pr(>|t|)    
alpha 1   -0.254562   0.064558   -3.94  0.00017 ***
alpha 2    0.109799   0.056389    1.95  0.05498 .  
alpha 3    0.261220   0.035245    7.41  1.1e-10 ***
alpha 4    0.883543   0.078018   11.32  < 2e-16 ***
beta 1     0.328704   0.037794    8.70  3.2e-13 ***
beta 2     0.055946   0.032702    1.71  0.09095 .  
beta 3    -0.074741   0.020503   -3.65  0.00047 ***
beta 4    -0.309909   0.045604   -6.80  1.7e-09 ***
gamma 1 1  0.110660   0.019541    5.66  2.2e-07 ***
gamma 1 2 -0.138511   0.014969   -9.25  2.5e-14 ***
gamma 1 3 -0.011881   0.010098   -1.18  0.24283    
gamma 1 4  0.039732   0.020737    1.92  0.05889 .  
gamma 2 1 -0.138511   0.014969   -9.25  2.5e-14 ***
gamma 2 2  0.158203   0.029141    5.43  5.8e-07 ***
gamma 2 3 -0.003476   0.018710   -0.19  0.85308    
gamma 2 4 -0.016216   0.022336   -0.73  0.46995    
gamma 3 1 -0.011881   0.010098   -1.18  0.24283    
gamma 3 2 -0.003476   0.018710   -0.19  0.85308    
gamma 3 3  0.014589   0.018062    0.81  0.42165    
gamma 3 4  0.000768   0.013674    0.06  0.95533    
gamma 4 1  0.039732   0.020737    1.92  0.05889 .  
gamma 4 2 -0.016216   0.022336   -0.73  0.46995    
gamma 4 3  0.000768   0.013674    0.06  0.95533    
gamma 4 4 -0.024285   0.032868   -0.74  0.46212    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
R-squared Values of expenditure shares:
wFood1 wFood2 wFood3 wFood4 
 0.701  0.846  0.408  0.734 
R-squared Values of quantities:
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   0.946    0.864    0.618    0.724 
> nobs( estResultLaSl )
[1] 93
> 
> # LA-AIDS: Paasche
> estResultLaP <- aidsEst( pNames, wNames, "xFood",
+    data = Blanciforti86[ set, ], priceIndex = "P" )
> print( estResultLaP )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: Linear Approximation (LA) with Paasche Index (P)
Coefficients:
alpha
wFood1 wFood2 wFood3 wFood4 
-1.576 -0.089  0.587  2.078 
beta
 wFood1  wFood2  wFood3  wFood4 
 0.3275  0.0511 -0.0788 -0.2997 
gamma
        pFood1   pFood2   pFood3  pFood4
wFood1  0.1006 -0.14171 -0.01046  0.0515
wFood2 -0.1417  0.15872  0.00348 -0.0205
wFood3 -0.0105  0.00348  0.01228 -0.0053
wFood4  0.0515 -0.02049 -0.00530 -0.0257
> print( summary( estResultLaP ) )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: Linear Approximation (LA) with Paasche Index (P)
Estimated Coefficients:
          Estimate Std. Error t value Pr(>|t|)    
alpha 1   -1.57624    0.23384   -6.74  1.9e-09 ***
alpha 2   -0.08904    0.19561   -0.46  0.65016    
alpha 3    0.58696    0.11564    5.08  2.3e-06 ***
alpha 4    2.07832    0.30908    6.72  2.0e-09 ***
beta 1     0.32745    0.04069    8.05  4.9e-12 ***
beta 2     0.05111    0.03395    1.51  0.13597    
beta 3    -0.07881    0.02008   -3.92  0.00018 ***
beta 4    -0.29975    0.05376   -5.58  2.9e-07 ***
gamma 1 1  0.10064    0.02026    4.97  3.5e-06 ***
gamma 1 2 -0.14171    0.01514   -9.36  1.1e-14 ***
gamma 1 3 -0.01046    0.00968   -1.08  0.28281    
gamma 1 4  0.05153    0.02385    2.16  0.03355 *  
gamma 2 1 -0.14171    0.01514   -9.36  1.1e-14 ***
gamma 2 2  0.15872    0.02871    5.53  3.6e-07 ***
gamma 2 3  0.00348    0.01763    0.20  0.84382    
gamma 2 4 -0.02049    0.02384   -0.86  0.39252    
gamma 3 1 -0.01046    0.00968   -1.08  0.28281    
gamma 3 2  0.00348    0.01763    0.20  0.84382    
gamma 3 3  0.01228    0.01627    0.75  0.45248    
gamma 3 4 -0.00530    0.01357   -0.39  0.69708    
gamma 4 1  0.05153    0.02385    2.16  0.03355 *  
gamma 4 2 -0.02049    0.02384   -0.86  0.39252    
gamma 4 3 -0.00530    0.01357   -0.39  0.69708    
gamma 4 4 -0.02574    0.03866   -0.67  0.50735    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
R-squared Values of expenditure shares:
wFood1 wFood2 wFood3 wFood4 
 0.634  0.829  0.412  0.649 
R-squared Values of quantities:
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   0.936    0.844    0.676    0.623 
> nobs( estResultLaP )
[1] 96
> 
> # LA-AIDS: Laspeyres
> estResultLaL <- aidsEst( pNames, wNames, "xFood",
+    data = Blanciforti86[ set, ], priceIndex = "L" )
> print( estResultLaL )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: Linear Approximation (LA) with Laspeyres Index (L)
Coefficients:
alpha
 wFood1  wFood2  wFood3  wFood4 
-1.5634 -0.0718  0.6029  2.0324 
beta
 wFood1  wFood2  wFood3  wFood4 
 0.3251  0.0481 -0.0816 -0.2917 
gamma
         pFood1   pFood2   pFood3  pFood4
wFood1  0.09104 -0.14571 -0.00963  0.0643
wFood2 -0.14571  0.15852  0.00594 -0.0188
wFood3 -0.00963  0.00594  0.01289 -0.0092
wFood4  0.06431 -0.01875 -0.00920 -0.0364
> print( summary( estResultLaL ) )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: Linear Approximation (LA) with Laspeyres Index (L)
Estimated Coefficients:
          Estimate Std. Error t value Pr(>|t|)    
alpha 1   -1.56338    0.23854   -6.55  4.3e-09 ***
alpha 2   -0.07185    0.20346   -0.35  0.72488    
alpha 3    0.60288    0.11824    5.10  2.1e-06 ***
alpha 4    2.03235    0.31758    6.40  8.5e-09 ***
beta 1     0.32513    0.04149    7.84  1.3e-11 ***
beta 2     0.04809    0.03529    1.36  0.17664    
beta 3    -0.08155    0.02053   -3.97  0.00015 ***
beta 4    -0.29167    0.05522   -5.28  9.9e-07 ***
gamma 1 1  0.09104    0.02026    4.49  2.2e-05 ***
gamma 1 2 -0.14571    0.01515   -9.62  3.4e-15 ***
gamma 1 3 -0.00963    0.00949   -1.01  0.31303    
gamma 1 4  0.06431    0.02405    2.67  0.00901 ** 
gamma 2 1 -0.14571    0.01515   -9.62  3.4e-15 ***
gamma 2 2  0.15852    0.02993    5.30  9.3e-07 ***
gamma 2 3  0.00594    0.01791    0.33  0.74102    
gamma 2 4 -0.01875    0.02442   -0.77  0.44476    
gamma 3 1 -0.00963    0.00949   -1.01  0.31303    
gamma 3 2  0.00594    0.01791    0.33  0.74102    
gamma 3 3  0.01289    0.01625    0.79  0.42991    
gamma 3 4 -0.00920    0.01379   -0.67  0.50672    
gamma 4 1  0.06431    0.02405    2.67  0.00901 ** 
gamma 4 2 -0.01875    0.02442   -0.77  0.44476    
gamma 4 3 -0.00920    0.01379   -0.67  0.50672    
gamma 4 4 -0.03636    0.03911   -0.93  0.35519    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
R-squared Values of expenditure shares:
wFood1 wFood2 wFood3 wFood4 
 0.620  0.830  0.414  0.640 
R-squared Values of quantities:
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   0.932    0.845    0.679    0.614 
> nobs( estResultLaL )
[1] 96
> 
> # LA-AIDS: Laspeyres, simplified
> estResultLaLs <- aidsEst( pNames, wNames, "xFood",
+    data = Blanciforti86[ set, ], priceIndex = "Ls" )
> print( estResultLaLs )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: Linear Approximation (LA) with simplified Laspeyres Index (Ls)
Coefficients:
alpha
wFood1 wFood2 wFood3 wFood4 
-0.248  0.123  0.273  0.852 
beta
 wFood1  wFood2  wFood3  wFood4 
 0.3251  0.0481 -0.0816 -0.2917 
gamma
         pFood1   pFood2   pFood3  pFood4
wFood1  0.09104 -0.14571 -0.00963  0.0643
wFood2 -0.14571  0.15852  0.00594 -0.0188
wFood3 -0.00963  0.00594  0.01289 -0.0092
wFood4  0.06431 -0.01875 -0.00920 -0.0364
> print( summary( estResultLaLs ) )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: Linear Approximation (LA) with simplified Laspeyres Index (Ls)
Estimated Coefficients:
          Estimate Std. Error t value Pr(>|t|)    
alpha 1   -0.24814    0.07070   -3.51  0.00072 ***
alpha 2    0.12270    0.06071    2.02  0.04645 *  
alpha 3    0.27297    0.03522    7.75  1.9e-11 ***
alpha 4    0.85247    0.09423    9.05  4.8e-14 ***
beta 1     0.32513    0.04149    7.84  1.3e-11 ***
beta 2     0.04809    0.03529    1.36  0.17664    
beta 3    -0.08155    0.02053   -3.97  0.00015 ***
beta 4    -0.29167    0.05522   -5.28  9.9e-07 ***
gamma 1 1  0.09104    0.02026    4.49  2.2e-05 ***
gamma 1 2 -0.14571    0.01515   -9.62  3.4e-15 ***
gamma 1 3 -0.00963    0.00949   -1.01  0.31303    
gamma 1 4  0.06431    0.02405    2.67  0.00901 ** 
gamma 2 1 -0.14571    0.01515   -9.62  3.4e-15 ***
gamma 2 2  0.15852    0.02993    5.30  9.3e-07 ***
gamma 2 3  0.00594    0.01791    0.33  0.74102    
gamma 2 4 -0.01875    0.02442   -0.77  0.44476    
gamma 3 1 -0.00963    0.00949   -1.01  0.31303    
gamma 3 2  0.00594    0.01791    0.33  0.74102    
gamma 3 3  0.01289    0.01625    0.79  0.42991    
gamma 3 4 -0.00920    0.01379   -0.67  0.50672    
gamma 4 1  0.06431    0.02405    2.67  0.00901 ** 
gamma 4 2 -0.01875    0.02442   -0.77  0.44476    
gamma 4 3 -0.00920    0.01379   -0.67  0.50672    
gamma 4 4 -0.03636    0.03911   -0.93  0.35519    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
R-squared Values of expenditure shares:
wFood1 wFood2 wFood3 wFood4 
 0.620  0.830  0.414  0.640 
R-squared Values of quantities:
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   0.932    0.845    0.679    0.614 
> nobs( estResultLaLs )
[1] 96
> all.equal( estResultLaL$coef$beta, estResultLaLs$coef$beta )
[1] TRUE
> all.equal( estResultLaL$coef$gamma, estResultLaLs$coef$gamma )
[1] TRUE
> 
> # LA-AIDS: Tornqvist
> estResultLaT <- aidsEst( pNames, wNames, "xFood",
+    data = Blanciforti86[ set, ], priceIndex = "T" )
> print( estResultLaT )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: Linear Approximation (LA) with Tornqvist Index (T)
Coefficients:
alpha
 wFood1  wFood2  wFood3  wFood4 
-1.5724 -0.0804  0.5953  2.0575 
beta
 wFood1  wFood2  wFood3  wFood4 
 0.3267  0.0496 -0.0802 -0.2961 
gamma
        pFood1   pFood2   pFood3   pFood4
wFood1  0.0959 -0.14379 -0.01009  0.05796
wFood2 -0.1438  0.15866  0.00467 -0.01954
wFood3 -0.0101  0.00467  0.01261 -0.00719
wFood4  0.0580 -0.01954 -0.00719 -0.03123
> print( summary( estResultLaT ) )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: Linear Approximation (LA) with Tornqvist Index (T)
Estimated Coefficients:
          Estimate Std. Error t value Pr(>|t|)    
alpha 1   -1.57240    0.23615   -6.66  2.7e-09 ***
alpha 2   -0.08042    0.19944   -0.40  0.68782    
alpha 3    0.59529    0.11689    5.09  2.1e-06 ***
alpha 4    2.05753    0.31312    6.57  4.0e-09 ***
beta 1     0.32674    0.04108    7.95  7.5e-12 ***
beta 2     0.04959    0.03461    1.43  0.15552    
beta 3    -0.08025    0.02030   -3.95  0.00016 ***
beta 4    -0.29609    0.05445   -5.44  5.2e-07 ***
gamma 1 1  0.09591    0.02024    4.74  8.7e-06 ***
gamma 1 2 -0.14379    0.01515   -9.49  6.0e-15 ***
gamma 1 3 -0.01009    0.00958   -1.05  0.29550    
gamma 1 4  0.05796    0.02392    2.42  0.01752 *  
gamma 2 1 -0.14379    0.01515   -9.49  6.0e-15 ***
gamma 2 2  0.15866    0.02929    5.42  5.7e-07 ***
gamma 2 3  0.00467    0.01776    0.26  0.79338    
gamma 2 4 -0.01954    0.02409   -0.81  0.41953    
gamma 3 1 -0.01009    0.00958   -1.05  0.29550    
gamma 3 2  0.00467    0.01776    0.26  0.79338    
gamma 3 3  0.01261    0.01626    0.78  0.44022    
gamma 3 4 -0.00719    0.01366   -0.53  0.60007    
gamma 4 1  0.05796    0.02392    2.42  0.01752 *  
gamma 4 2 -0.01954    0.02409   -0.81  0.41953    
gamma 4 3 -0.00719    0.01366   -0.53  0.60007    
gamma 4 4 -0.03123    0.03881   -0.80  0.42324    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
R-squared Values of expenditure shares:
wFood1 wFood2 wFood3 wFood4 
 0.628  0.829  0.413  0.645 
R-squared Values of quantities:
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   0.934    0.844    0.678    0.619 
> nobs( estResultLaT )
[1] 96
> 
> 
> cat( paste( "\nRepeating the demand analysis of Blanciforti, Green",
+    "& King (1986)\n" ) )

Repeating the demand analysis of Blanciforti, Green & King (1986)
> estResultLA <- aidsEst( pNames, wNames, "xFood",
+    data = Blanciforti86[ set, ], priceIndex = "SL" )
> print( estResultLA )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: Linear Approximation (LA) with lagged Stone Index (SL)
Coefficients:
alpha
wFood1 wFood2 wFood3 wFood4 
-0.255  0.110  0.261  0.884 
beta
 wFood1  wFood2  wFood3  wFood4 
 0.3287  0.0559 -0.0747 -0.3099 
gamma
        pFood1   pFood2    pFood3    pFood4
wFood1  0.1107 -0.13851 -0.011881  0.039732
wFood2 -0.1385  0.15820 -0.003476 -0.016216
wFood3 -0.0119 -0.00348  0.014589  0.000768
wFood4  0.0397 -0.01622  0.000768 -0.024285
> nobs( estResultLA )
[1] 93
> print( summary( estResultLA ) )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: Linear Approximation (LA) with lagged Stone Index (SL)
Estimated Coefficients:
           Estimate Std. Error t value Pr(>|t|)    
alpha 1   -0.254562   0.064558   -3.94  0.00017 ***
alpha 2    0.109799   0.056389    1.95  0.05498 .  
alpha 3    0.261220   0.035245    7.41  1.1e-10 ***
alpha 4    0.883543   0.078018   11.32  < 2e-16 ***
beta 1     0.328704   0.037794    8.70  3.2e-13 ***
beta 2     0.055946   0.032702    1.71  0.09095 .  
beta 3    -0.074741   0.020503   -3.65  0.00047 ***
beta 4    -0.309909   0.045604   -6.80  1.7e-09 ***
gamma 1 1  0.110660   0.019541    5.66  2.2e-07 ***
gamma 1 2 -0.138511   0.014969   -9.25  2.5e-14 ***
gamma 1 3 -0.011881   0.010098   -1.18  0.24283    
gamma 1 4  0.039732   0.020737    1.92  0.05889 .  
gamma 2 1 -0.138511   0.014969   -9.25  2.5e-14 ***
gamma 2 2  0.158203   0.029141    5.43  5.8e-07 ***
gamma 2 3 -0.003476   0.018710   -0.19  0.85308    
gamma 2 4 -0.016216   0.022336   -0.73  0.46995    
gamma 3 1 -0.011881   0.010098   -1.18  0.24283    
gamma 3 2 -0.003476   0.018710   -0.19  0.85308    
gamma 3 3  0.014589   0.018062    0.81  0.42165    
gamma 3 4  0.000768   0.013674    0.06  0.95533    
gamma 4 1  0.039732   0.020737    1.92  0.05889 .  
gamma 4 2 -0.016216   0.022336   -0.73  0.46995    
gamma 4 3  0.000768   0.013674    0.06  0.95533    
gamma 4 4 -0.024285   0.032868   -0.74  0.46212    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
R-squared Values of expenditure shares:
wFood1 wFood2 wFood3 wFood4 
 0.701  0.846  0.408  0.734 
R-squared Values of quantities:
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   0.946    0.864    0.618    0.724 
> print( elas( estResultLA, method = "Ch", quantNames = wNames,
+    observedShares = TRUE ) )

Demand Elasticities (formulas of Goddard / Chalfant for Stone price index)
Expenditure Elasticities
wFood1 wFood2 wFood3 wFood4 
 2.058  1.278  0.443  0.124 

Marshallian (uncompensated) Price Elasticities
        pFood1  pFood2  pFood3 pFood4
wFood1 -0.9726 -0.6586 -0.1801 -0.246
wFood2 -0.7746 -0.2699 -0.0546 -0.179
wFood3  0.0846  0.0862 -0.8165  0.203
wFood4  0.3844  0.1304  0.1196 -0.759

Hicksian (compensated) Price Elasticities
       pFood1  pFood2  pFood3 pFood4
wFood1 -0.333 -0.2444  0.0959  0.482
wFood2 -0.377 -0.0127  0.1169  0.273
wFood3  0.222  0.1753 -0.7571  0.360
wFood4  0.423  0.1554  0.1363 -0.715
> print( elas( estResultLA, method = "Ch", quantNames = wNames ) )

Demand Elasticities (formulas of Goddard / Chalfant for Stone price index)
Expenditure Elasticities
wFood1 wFood2 wFood3 wFood4 
 2.049  1.275  0.440  0.114 

Marshallian (uncompensated) Price Elasticities
        pFood1  pFood2  pFood3 pFood4
wFood1 -0.9754 -0.6557 -0.1780 -0.240
wFood2 -0.7672 -0.2781 -0.0538 -0.176
wFood3  0.0864  0.0879 -0.8159  0.202
wFood4  0.3909  0.1338  0.1204 -0.759

Hicksian (compensated) Price Elasticities
       pFood1  pFood2  pFood3 pFood4
wFood1 -0.333 -0.2388  0.0955  0.477
wFood2 -0.368 -0.0188  0.1164  0.270
wFood3  0.224  0.1773 -0.7572  0.356
wFood4  0.427  0.1571  0.1357 -0.719
> # imposing restrictions via restrict.regMat
> estResultLATX <- aidsEst( pNames, wNames, "xFood",
+    data = Blanciforti86[ set, ], priceIndex = "SL",
+    restrict.regMat = TRUE )
> print( estResultLATX )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: Linear Approximation (LA) with lagged Stone Index (SL)
Coefficients:
alpha
wFood1 wFood2 wFood3 wFood4 
-0.255  0.110  0.261  0.884 
beta
 wFood1  wFood2  wFood3  wFood4 
 0.3287  0.0559 -0.0747 -0.3099 
gamma
        pFood1   pFood2    pFood3    pFood4
wFood1  0.1107 -0.13851 -0.011881  0.039732
wFood2 -0.1385  0.15820 -0.003476 -0.016216
wFood3 -0.0119 -0.00348  0.014589  0.000768
wFood4  0.0397 -0.01622  0.000768 -0.024285
> nobs( estResultLATX )
[1] 93
> print( summary( estResultLATX ) )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: Linear Approximation (LA) with lagged Stone Index (SL)
Estimated Coefficients:
           Estimate Std. Error t value Pr(>|t|)    
alpha 1   -0.254562   0.064558   -3.94  0.00017 ***
alpha 2    0.109799   0.056389    1.95  0.05498 .  
alpha 3    0.261220   0.035245    7.41  1.1e-10 ***
alpha 4    0.883543   0.078018   11.32  < 2e-16 ***
beta 1     0.328704   0.037794    8.70  3.2e-13 ***
beta 2     0.055946   0.032702    1.71  0.09095 .  
beta 3    -0.074741   0.020503   -3.65  0.00047 ***
beta 4    -0.309909   0.045604   -6.80  1.7e-09 ***
gamma 1 1  0.110660   0.019541    5.66  2.2e-07 ***
gamma 1 2 -0.138511   0.014969   -9.25  2.5e-14 ***
gamma 1 3 -0.011881   0.010098   -1.18  0.24283    
gamma 1 4  0.039732   0.020737    1.92  0.05889 .  
gamma 2 1 -0.138511   0.014969   -9.25  2.5e-14 ***
gamma 2 2  0.158203   0.029141    5.43  5.8e-07 ***
gamma 2 3 -0.003476   0.018710   -0.19  0.85308    
gamma 2 4 -0.016216   0.022336   -0.73  0.46995    
gamma 3 1 -0.011881   0.010098   -1.18  0.24283    
gamma 3 2 -0.003476   0.018710   -0.19  0.85308    
gamma 3 3  0.014589   0.018062    0.81  0.42165    
gamma 3 4  0.000768   0.013674    0.06  0.95533    
gamma 4 1  0.039732   0.020737    1.92  0.05889 .  
gamma 4 2 -0.016216   0.022336   -0.73  0.46995    
gamma 4 3  0.000768   0.013674    0.06  0.95533    
gamma 4 4 -0.024285   0.032868   -0.74  0.46212    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
R-squared Values of expenditure shares:
wFood1 wFood2 wFood3 wFood4 
 0.701  0.846  0.408  0.734 
R-squared Values of quantities:
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   0.946    0.864    0.618    0.724 
> print( elas( estResultLATX, method = "Ch", quantNames = wNames,
+    observedShares = TRUE ) )

Demand Elasticities (formulas of Goddard / Chalfant for Stone price index)
Expenditure Elasticities
wFood1 wFood2 wFood3 wFood4 
 2.058  1.278  0.443  0.124 

Marshallian (uncompensated) Price Elasticities
        pFood1  pFood2  pFood3 pFood4
wFood1 -0.9726 -0.6586 -0.1801 -0.246
wFood2 -0.7746 -0.2699 -0.0546 -0.179
wFood3  0.0846  0.0862 -0.8165  0.203
wFood4  0.3844  0.1304  0.1196 -0.759

Hicksian (compensated) Price Elasticities
       pFood1  pFood2  pFood3 pFood4
wFood1 -0.333 -0.2444  0.0959  0.482
wFood2 -0.377 -0.0127  0.1169  0.273
wFood3  0.222  0.1753 -0.7571  0.360
wFood4  0.423  0.1554  0.1363 -0.715
> print( elas( estResultLATX, method = "Ch", quantNames = wNames ) )

Demand Elasticities (formulas of Goddard / Chalfant for Stone price index)
Expenditure Elasticities
wFood1 wFood2 wFood3 wFood4 
 2.049  1.275  0.440  0.114 

Marshallian (uncompensated) Price Elasticities
        pFood1  pFood2  pFood3 pFood4
wFood1 -0.9754 -0.6557 -0.1780 -0.240
wFood2 -0.7672 -0.2781 -0.0538 -0.176
wFood3  0.0864  0.0879 -0.8159  0.202
wFood4  0.3909  0.1338  0.1204 -0.759

Hicksian (compensated) Price Elasticities
       pFood1  pFood2  pFood3 pFood4
wFood1 -0.333 -0.2388  0.0955  0.477
wFood2 -0.368 -0.0188  0.1164  0.270
wFood3  0.224  0.1773 -0.7572  0.356
wFood4  0.427  0.1571  0.1357 -0.719
> 
> ## only homogeneity (no symmetry imposed)
> estResultLAhom <- aidsEst( pNames, wNames, "xFood", sym = FALSE,
+    data = Blanciforti86[ set, ], priceIndex = "SL" )
> print( estResultLAhom )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: Linear Approximation (LA) with lagged Stone Index (SL)
Coefficients:
alpha
 wFood1  wFood2  wFood3  wFood4 
-0.2600  0.0914  0.2441  0.9245 
beta
 wFood1  wFood2  wFood3  wFood4 
 0.3326  0.0656 -0.0653 -0.3329 
gamma
         pFood1  pFood2  pFood3    pFood4
wFood1  0.10972 -0.1210 -0.0458  0.056998
wFood2 -0.13009  0.1244  0.0312 -0.025525
wFood3 -0.00526 -0.0251  0.0312 -0.000772
wFood4  0.02563  0.0217 -0.0166 -0.030701
> nobs( estResultLAhom )
[1] 93
> print( summary( estResultLAhom ) )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: Linear Approximation (LA) with lagged Stone Index (SL)
Estimated Coefficients:
           Estimate Std. Error t value Pr(>|t|)    
alpha 1   -0.260003   0.075625   -3.44  0.00094 ***
alpha 2    0.091424   0.058923    1.55  0.12481    
alpha 3    0.244107   0.035303    6.91  1.1e-09 ***
alpha 4    0.924473   0.093439    9.89  2.0e-15 ***
beta 1     0.332602   0.043735    7.60  5.5e-11 ***
beta 2     0.065644   0.034076    1.93  0.05770 .  
beta 3    -0.065343   0.020416   -3.20  0.00198 ** 
beta 4    -0.332903   0.054038   -6.16  3.0e-08 ***
gamma 1 1  0.109721   0.022170    4.95  4.2e-06 ***
gamma 1 2 -0.120967   0.048925   -2.47  0.01559 *  
gamma 1 3 -0.045752   0.042456   -1.08  0.28452    
gamma 1 4  0.056998   0.029904    1.91  0.06033 .  
gamma 2 1 -0.130092   0.017274   -7.53  7.6e-11 ***
gamma 2 2  0.124424   0.038120    3.26  0.00163 ** 
gamma 2 3  0.031192   0.033080    0.94  0.34862    
gamma 2 4 -0.025525   0.023300   -1.10  0.27667    
gamma 3 1 -0.005261   0.010349   -0.51  0.61263    
gamma 3 2 -0.025126   0.022839   -1.10  0.27464    
gamma 3 3  0.031159   0.019819    1.57  0.11995    
gamma 3 4 -0.000772   0.013960   -0.06  0.95605    
gamma 4 1  0.025632   0.027393    0.94  0.35231    
gamma 4 2  0.021669   0.060450    0.36  0.72097    
gamma 4 3 -0.016600   0.052457   -0.32  0.75251    
gamma 4 4 -0.030701   0.036948   -0.83  0.40856    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
R-squared Values of expenditure shares:
wFood1 wFood2 wFood3 wFood4 
 0.709  0.853  0.431  0.740 
R-squared Values of quantities:
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   0.948    0.868    0.630    0.730 
> print( elas( estResultLAhom, method = "Ch", quantNames = wNames,
+    observedShares = TRUE ) )

Demand Elasticities (formulas of Goddard / Chalfant for Stone price index)
Expenditure Elasticities
wFood1 wFood2 wFood3 wFood4 
2.0702 1.3262 0.5128 0.0593 

Marshallian (uncompensated) Price Elasticities
       pFood1  pFood2  pFood3 pFood4
wFood1 -0.980 -0.6046 -0.2908 -0.195
wFood2 -0.748 -0.4474  0.1112 -0.242
wFood3  0.112 -0.0893 -0.7023  0.167
wFood4  0.365  0.2505  0.0793 -0.754

Hicksian (compensated) Price Elasticities
       pFood1  pFood2  pFood3 pFood4
wFood1 -0.336 -0.1880 -0.0131  0.537
wFood2 -0.336 -0.1805  0.2891  0.227
wFood3  0.272  0.0139 -0.6336  0.348
wFood4  0.383  0.2625  0.0872 -0.733
> print( elas( estResultLAhom, method = "Ch", quantNames = wNames ) )

Demand Elasticities (formulas of Goddard / Chalfant for Stone price index)
Expenditure Elasticities
wFood1 wFood2 wFood3 wFood4 
2.0617 1.3227 0.5105 0.0483 

Marshallian (uncompensated) Price Elasticities
       pFood1  pFood2  pFood3 pFood4
wFood1 -0.982 -0.6021 -0.2878 -0.189
wFood2 -0.741 -0.4540  0.1103 -0.238
wFood3  0.114 -0.0886 -0.7013  0.165
wFood4  0.371  0.2555  0.0796 -0.755

Hicksian (compensated) Price Elasticities
       pFood1  pFood2  pFood3 pFood4
wFood1 -0.336 -0.1827 -0.0125  0.532
wFood2 -0.326 -0.1849  0.2868  0.224
wFood3  0.274  0.0152 -0.6331  0.344
wFood4  0.387  0.2654  0.0860 -0.738
> # imposing restrictions via restrict.regMat
> estResultLAhomTX <- aidsEst( pNames, wNames, "xFood", sym = FALSE,
+    data = Blanciforti86[ set, ], priceIndex = "SL",
+    restrict.regMat = TRUE )
> print( estResultLAhomTX )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: Linear Approximation (LA) with lagged Stone Index (SL)
Coefficients:
alpha
 wFood1  wFood2  wFood3  wFood4 
-0.2600  0.0914  0.2441  0.9245 
beta
 wFood1  wFood2  wFood3  wFood4 
 0.3326  0.0656 -0.0653 -0.3329 
gamma
         pFood1  pFood2  pFood3    pFood4
wFood1  0.10972 -0.1210 -0.0458  0.056998
wFood2 -0.13009  0.1244  0.0312 -0.025525
wFood3 -0.00526 -0.0251  0.0312 -0.000772
wFood4  0.02563  0.0217 -0.0166 -0.030701
> nobs( estResultLAhomTX )
[1] 93
> print( summary( estResultLAhomTX ) )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: Linear Approximation (LA) with lagged Stone Index (SL)
Estimated Coefficients:
           Estimate Std. Error t value Pr(>|t|)    
alpha 1   -0.260003   0.075625   -3.44  0.00094 ***
alpha 2    0.091424   0.058923    1.55  0.12481    
alpha 3    0.244107   0.035303    6.91  1.1e-09 ***
alpha 4    0.924473   0.093439    9.89  2.0e-15 ***
beta 1     0.332602   0.043735    7.60  5.5e-11 ***
beta 2     0.065644   0.034076    1.93  0.05770 .  
beta 3    -0.065343   0.020416   -3.20  0.00198 ** 
beta 4    -0.332903   0.054038   -6.16  3.0e-08 ***
gamma 1 1  0.109721   0.022170    4.95  4.2e-06 ***
gamma 1 2 -0.120967   0.048925   -2.47  0.01559 *  
gamma 1 3 -0.045752   0.042456   -1.08  0.28452    
gamma 1 4  0.056998   0.029904    1.91  0.06033 .  
gamma 2 1 -0.130092   0.017274   -7.53  7.6e-11 ***
gamma 2 2  0.124424   0.038120    3.26  0.00163 ** 
gamma 2 3  0.031192   0.033080    0.94  0.34862    
gamma 2 4 -0.025525   0.023300   -1.10  0.27667    
gamma 3 1 -0.005261   0.010349   -0.51  0.61263    
gamma 3 2 -0.025126   0.022839   -1.10  0.27464    
gamma 3 3  0.031159   0.019819    1.57  0.11995    
gamma 3 4 -0.000772   0.013960   -0.06  0.95605    
gamma 4 1  0.025632   0.027393    0.94  0.35231    
gamma 4 2  0.021669   0.060450    0.36  0.72097    
gamma 4 3 -0.016600   0.052457   -0.32  0.75251    
gamma 4 4 -0.030701   0.036948   -0.83  0.40856    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
R-squared Values of expenditure shares:
wFood1 wFood2 wFood3 wFood4 
 0.709  0.853  0.431  0.740 
R-squared Values of quantities:
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   0.948    0.868    0.630    0.730 
> print( elas( estResultLAhomTX, method = "Ch", quantNames = wNames,
+    observedShares = TRUE ) )

Demand Elasticities (formulas of Goddard / Chalfant for Stone price index)
Expenditure Elasticities
wFood1 wFood2 wFood3 wFood4 
2.0702 1.3262 0.5128 0.0593 

Marshallian (uncompensated) Price Elasticities
       pFood1  pFood2  pFood3 pFood4
wFood1 -0.980 -0.6046 -0.2908 -0.195
wFood2 -0.748 -0.4474  0.1112 -0.242
wFood3  0.112 -0.0893 -0.7023  0.167
wFood4  0.365  0.2505  0.0793 -0.754

Hicksian (compensated) Price Elasticities
       pFood1  pFood2  pFood3 pFood4
wFood1 -0.336 -0.1880 -0.0131  0.537
wFood2 -0.336 -0.1805  0.2891  0.227
wFood3  0.272  0.0139 -0.6336  0.348
wFood4  0.383  0.2625  0.0872 -0.733
> print( elas( estResultLAhomTX, method = "Ch", quantNames = wNames ) )

Demand Elasticities (formulas of Goddard / Chalfant for Stone price index)
Expenditure Elasticities
wFood1 wFood2 wFood3 wFood4 
2.0617 1.3227 0.5105 0.0483 

Marshallian (uncompensated) Price Elasticities
       pFood1  pFood2  pFood3 pFood4
wFood1 -0.982 -0.6021 -0.2878 -0.189
wFood2 -0.741 -0.4540  0.1103 -0.238
wFood3  0.114 -0.0886 -0.7013  0.165
wFood4  0.371  0.2555  0.0796 -0.755

Hicksian (compensated) Price Elasticities
       pFood1  pFood2  pFood3 pFood4
wFood1 -0.336 -0.1827 -0.0125  0.532
wFood2 -0.326 -0.1849  0.2868  0.224
wFood3  0.274  0.0152 -0.6331  0.344
wFood4  0.387  0.2654  0.0860 -0.738
> 
> ## unrestricted (no homogeneity and no symmetry imposed)
> estResultLAunr <- aidsEst( pNames, wNames, "xFood", hom = FALSE, sym = FALSE,
+    data = Blanciforti86[ set, ], priceIndex = "SL" )
> print( estResultLAunr )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: Linear Approximation (LA) with lagged Stone Index (SL)
Coefficients:
alpha
 wFood1  wFood2  wFood3  wFood4 
-0.0755  0.1564  0.2428  0.6764 
beta
   wFood1    wFood2    wFood3    wFood4 
 0.147433  0.000476 -0.063987 -0.083922 
gamma
         pFood1  pFood2   pFood3   pFood4
wFood1  0.12013 -0.0454 -0.05451  0.01033
wFood2 -0.12643  0.1510  0.02811 -0.04195
wFood3 -0.00534 -0.0257  0.03122 -0.00043
wFood4  0.01163 -0.0799 -0.00482  0.03205
> nobs( estResultLAunr )
[1] 93
> print( summary( estResultLAunr ) )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: Linear Approximation (LA) with lagged Stone Index (SL)
Estimated Coefficients:
           Estimate Std. Error t value Pr(>|t|)    
alpha 1   -0.075488   0.077969   -0.97  0.33606    
alpha 2    0.156363   0.073550    2.13  0.03680 *  
alpha 3    0.242755   0.045824    5.30  1.1e-06 ***
alpha 4    0.676371   0.090992    7.43  1.4e-10 ***
beta 1     0.147433   0.059988    2.46  0.01629 *  
beta 2     0.000476   0.056588    0.01  0.99331    
beta 3    -0.063987   0.035256   -1.81  0.07353 .  
beta 4    -0.083922   0.070007   -1.20  0.23439    
gamma 1 1  0.120133   0.018163    6.61  4.9e-09 ***
gamma 1 2 -0.045415   0.044278   -1.03  0.30834    
gamma 1 3 -0.054511   0.034465   -1.58  0.11794    
gamma 1 4  0.010327   0.027121    0.38  0.70445    
gamma 2 1 -0.126427   0.017133   -7.38  1.8e-10 ***
gamma 2 2  0.151014   0.041768    3.62  0.00054 ***
gamma 2 3  0.028110   0.032511    0.86  0.39001    
gamma 2 4 -0.041951   0.025584   -1.64  0.10526    
gamma 3 1 -0.005338   0.010674   -0.50  0.61852    
gamma 3 2 -0.025680   0.026023   -0.99  0.32690    
gamma 3 3  0.031224   0.020255    1.54  0.12741    
gamma 3 4 -0.000430   0.015940   -0.03  0.97855    
gamma 4 1  0.011632   0.021196    0.55  0.58478    
gamma 4 2 -0.079919   0.051673   -1.55  0.12617    
gamma 4 3 -0.004822   0.040221   -0.12  0.90489    
gamma 4 4  0.032053   0.031651    1.01  0.31446    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
R-squared Values of expenditure shares:
wFood1 wFood2 wFood3 wFood4 
 0.817  0.864  0.431  0.859 
R-squared Values of quantities:
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   0.968    0.878    0.630    0.853 
> print( elas( estResultLAunr, method = "Ch", quantNames = wNames,
+    observedShares = TRUE ) )

Demand Elasticities (formulas of Goddard / Chalfant for Stone price index)
Expenditure Elasticities
wFood1 wFood2 wFood3 wFood4 
 1.474  1.002  0.523  0.763 

Marshallian (uncompensated) Price Elasticities
       pFood1  pFood2  pFood3 pFood4
wFood1 -0.761 -0.2416 -0.2390 -0.135
wFood2 -0.629 -0.2501  0.1394 -0.209
wFood3  0.108 -0.0954 -0.7032  0.166
wFood4  0.107 -0.1781  0.0182 -0.826

Hicksian (compensated) Price Elasticities
       pFood1  pFood2  pFood3 pFood4
wFood1 -0.303  0.0551 -0.0413  0.387
wFood2 -0.317 -0.0484  0.2738  0.145
wFood3  0.271  0.0098 -0.6331  0.351
wFood4  0.344 -0.0246  0.1205 -0.556
> print( elas( estResultLAunr, method = "Ch", quantNames = wNames ) )

Demand Elasticities (formulas of Goddard / Chalfant for Stone price index)
Expenditure Elasticities
wFood1 wFood2 wFood3 wFood4 
 1.472  1.002  0.521  0.761 

Marshallian (uncompensated) Price Elasticities
       pFood1 pFood2  pFood3 pFood4
wFood1 -0.763 -0.241 -0.2373 -0.132
wFood2 -0.623 -0.257  0.1380 -0.207
wFood3  0.110 -0.095 -0.7021  0.165
wFood4  0.108 -0.179  0.0182 -0.825

Hicksian (compensated) Price Elasticities
       pFood1  pFood2  pFood3 pFood4
wFood1 -0.303  0.0579 -0.0409  0.384
wFood2 -0.310 -0.0536  0.2718  0.144
wFood3  0.273  0.0108 -0.6326  0.347
wFood4  0.346 -0.0247  0.1198 -0.558
> # imposing restrictions via restrict.regMat
> estResultLAunrTX <- aidsEst( pNames, wNames, "xFood", hom = FALSE, sym = FALSE,
+    data = Blanciforti86[ set, ], priceIndex = "SL",
+    restrict.regMat = TRUE )
> print( estResultLAunrTX )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: Linear Approximation (LA) with lagged Stone Index (SL)
Coefficients:
alpha
 wFood1  wFood2  wFood3  wFood4 
-0.0755  0.1564  0.2428  0.6764 
beta
   wFood1    wFood2    wFood3    wFood4 
 0.147433  0.000476 -0.063987 -0.083922 
gamma
         pFood1  pFood2   pFood3   pFood4
wFood1  0.12013 -0.0454 -0.05451  0.01033
wFood2 -0.12643  0.1510  0.02811 -0.04195
wFood3 -0.00534 -0.0257  0.03122 -0.00043
wFood4  0.01163 -0.0799 -0.00482  0.03205
> nobs( estResultLAunrTX )
[1] 93
> print( summary( estResultLAunrTX ) )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: Linear Approximation (LA) with lagged Stone Index (SL)
Estimated Coefficients:
           Estimate Std. Error t value Pr(>|t|)    
alpha 1   -0.075488   0.077969   -0.97  0.33606    
alpha 2    0.156363   0.073550    2.13  0.03680 *  
alpha 3    0.242755   0.045824    5.30  1.1e-06 ***
alpha 4    0.676371   0.090992    7.43  1.4e-10 ***
beta 1     0.147433   0.059988    2.46  0.01629 *  
beta 2     0.000476   0.056588    0.01  0.99331    
beta 3    -0.063987   0.035256   -1.81  0.07353 .  
beta 4    -0.083922   0.070007   -1.20  0.23439    
gamma 1 1  0.120133   0.018163    6.61  4.9e-09 ***
gamma 1 2 -0.045415   0.044278   -1.03  0.30834    
gamma 1 3 -0.054511   0.034465   -1.58  0.11794    
gamma 1 4  0.010327   0.027121    0.38  0.70445    
gamma 2 1 -0.126427   0.017133   -7.38  1.8e-10 ***
gamma 2 2  0.151014   0.041768    3.62  0.00054 ***
gamma 2 3  0.028110   0.032511    0.86  0.39001    
gamma 2 4 -0.041951   0.025584   -1.64  0.10526    
gamma 3 1 -0.005338   0.010674   -0.50  0.61852    
gamma 3 2 -0.025680   0.026023   -0.99  0.32690    
gamma 3 3  0.031224   0.020255    1.54  0.12741    
gamma 3 4 -0.000430   0.015940   -0.03  0.97855    
gamma 4 1  0.011632   0.021196    0.55  0.58478    
gamma 4 2 -0.079919   0.051673   -1.55  0.12617    
gamma 4 3 -0.004822   0.040221   -0.12  0.90489    
gamma 4 4  0.032053   0.031651    1.01  0.31446    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
R-squared Values of expenditure shares:
wFood1 wFood2 wFood3 wFood4 
 0.817  0.864  0.431  0.859 
R-squared Values of quantities:
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   0.968    0.878    0.630    0.853 
> print( elas( estResultLAunrTX, method = "Ch", quantNames = wNames,
+    observedShares = TRUE ) )

Demand Elasticities (formulas of Goddard / Chalfant for Stone price index)
Expenditure Elasticities
wFood1 wFood2 wFood3 wFood4 
 1.474  1.002  0.523  0.763 

Marshallian (uncompensated) Price Elasticities
       pFood1  pFood2  pFood3 pFood4
wFood1 -0.761 -0.2416 -0.2390 -0.135
wFood2 -0.629 -0.2501  0.1394 -0.209
wFood3  0.108 -0.0954 -0.7032  0.166
wFood4  0.107 -0.1781  0.0182 -0.826

Hicksian (compensated) Price Elasticities
       pFood1  pFood2  pFood3 pFood4
wFood1 -0.303  0.0551 -0.0413  0.387
wFood2 -0.317 -0.0484  0.2738  0.145
wFood3  0.271  0.0098 -0.6331  0.351
wFood4  0.344 -0.0246  0.1205 -0.556
> print( elas( estResultLAunrTX, method = "Ch", quantNames = wNames ) )

Demand Elasticities (formulas of Goddard / Chalfant for Stone price index)
Expenditure Elasticities
wFood1 wFood2 wFood3 wFood4 
 1.472  1.002  0.521  0.761 

Marshallian (uncompensated) Price Elasticities
       pFood1 pFood2  pFood3 pFood4
wFood1 -0.763 -0.241 -0.2373 -0.132
wFood2 -0.623 -0.257  0.1380 -0.207
wFood3  0.110 -0.095 -0.7021  0.165
wFood4  0.108 -0.179  0.0182 -0.825

Hicksian (compensated) Price Elasticities
       pFood1  pFood2  pFood3 pFood4
wFood1 -0.303  0.0579 -0.0409  0.384
wFood2 -0.310 -0.0536  0.2718  0.144
wFood3  0.273  0.0108 -0.6326  0.347
wFood4  0.346 -0.0247  0.1198 -0.558
> 
> 
> #####################################################
> ## Estimation with demand shifters
> Blanciforti86$trend <- c( 0:( nrow( Blanciforti86 ) - 1 ) )
> estResultLAtrend <- aidsEst( pNames, wNames, "xFood",
+    shifterNames = c( "trend" ), data = Blanciforti86[ set, ] )
> print( estResultLAtrend )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: Linear Approximation (LA) with simplified Laspeyres Index (Ls)
Coefficients:
alpha
wFood1 wFood2 wFood3 wFood4 
 0.281  0.439  0.202  0.079 
beta
   wFood1    wFood2    wFood3    wFood4 
-0.000779 -0.147343 -0.038170  0.186292 
gamma
        pFood1   pFood2   pFood3  pFood4
wFood1  0.1493 -0.11330 -0.01959 -0.0164
wFood2 -0.1133  0.16909 -0.00939 -0.0464
wFood3 -0.0196 -0.00939  0.01845  0.0105
wFood4 -0.0164 -0.04641  0.01053  0.0523
delta
           trend
wFood1  0.001873
wFood2  0.001174
wFood3 -0.000228
wFood4 -0.002820
> nobs( estResultLAtrend )
[1] 96
> summary( estResultLAtrend )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: Linear Approximation (LA) with simplified Laspeyres Index (Ls)
Estimated Coefficients:
           Estimate Std. Error t value Pr(>|t|)    
alpha 1    0.280731   0.091761    3.06   0.0030 ** 
alpha 2    0.438667   0.087984    4.99  3.4e-06 ***
alpha 3    0.201638   0.065439    3.08   0.0028 ** 
alpha 4    0.078964   0.092991    0.85   0.3983    
beta 1    -0.000779   0.056044   -0.01   0.9889    
beta 2    -0.147343   0.053201   -2.77   0.0070 ** 
beta 3    -0.038170   0.039702   -0.96   0.3392    
beta 4     0.186292   0.056562    3.29   0.0015 ** 
gamma 1 1  0.149308   0.018080    8.26  2.3e-12 ***
gamma 1 2 -0.113296   0.014360   -7.89  1.2e-11 ***
gamma 1 3 -0.019590   0.010824   -1.81   0.0740 .  
gamma 1 4 -0.016421   0.014949   -1.10   0.2752    
gamma 2 1 -0.113296   0.014360   -7.89  1.2e-11 ***
gamma 2 2  0.169090   0.028073    6.02  4.8e-08 ***
gamma 2 3 -0.009388   0.018863   -0.50   0.6200    
gamma 2 4 -0.046405   0.018266   -2.54   0.0130 *  
gamma 3 1 -0.019590   0.010824   -1.81   0.0740 .  
gamma 3 2 -0.009388   0.018863   -0.50   0.6200    
gamma 3 3  0.018445   0.017949    1.03   0.3072    
gamma 3 4  0.010534   0.013568    0.78   0.4398    
gamma 4 1 -0.016421   0.014949   -1.10   0.2752    
gamma 4 2 -0.046405   0.018266   -2.54   0.0130 *  
gamma 4 3  0.010534   0.013568    0.78   0.4398    
gamma 4 4  0.052293   0.022867    2.29   0.0248 *  
delta 1 1  0.001873   0.000301    6.23  2.0e-08 ***
delta 2 1  0.001174   0.000258    4.55  1.9e-05 ***
delta 3 1 -0.000228   0.000202   -1.13   0.2617    
delta 4 1 -0.002820   0.000283   -9.96  1.0e-15 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
R-squared Values of expenditure shares:
wFood1 wFood2 wFood3 wFood4 
 0.822  0.905  0.418 -5.650 
R-squared Values of quantities:
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
  -0.221   -0.696    0.239   -6.546 
> 
> Blanciforti86$trend2 <- c( 0:( nrow( Blanciforti86 ) - 1 ) )^2
> estResultLAtrend2 <- aidsEst( pNames, wNames, "xFood",
+    shifterNames = c( "trend", "trend2" ), data = Blanciforti86[ set, ] )
> print( estResultLAtrend2 )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: Linear Approximation (LA) with simplified Laspeyres Index (Ls)
Coefficients:
alpha
wFood1 wFood2 wFood3 wFood4 
 0.321  0.343  0.193  0.143 
beta
 wFood1  wFood2  wFood3  wFood4 
-0.0208 -0.0995 -0.0300  0.1503 
gamma
        pFood1    pFood2  pFood3    pFood4
wFood1  0.1343 -0.080439 -0.0264 -0.027475
wFood2 -0.0804  0.102444 -0.0210 -0.000992
wFood3 -0.0264 -0.021013  0.0585 -0.011114
wFood4 -0.0275 -0.000992 -0.0111  0.039580
delta
          trend    trend2
wFood1  0.00103  2.60e-05
wFood2  0.00326 -6.39e-05
wFood3 -0.00125  2.87e-05
wFood4 -0.00304  9.20e-06
> nobs( estResultLAtrend2 )
[1] 96
> summary( estResultLAtrend2 )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: Linear Approximation (LA) with simplified Laspeyres Index (Ls)
Estimated Coefficients:
           Estimate Std. Error t value Pr(>|t|)    
alpha 1    3.21e-01   9.26e-02    3.46  0.00087 ***
alpha 2    3.43e-01   7.52e-02    4.56  1.8e-05 ***
alpha 3    1.93e-01   5.77e-02    3.35  0.00125 ** 
alpha 4    1.43e-01   9.51e-02    1.50  0.13728    
beta 1    -2.08e-02   5.66e-02   -0.37  0.71375    
beta 2    -9.95e-02   4.49e-02   -2.21  0.02975 *  
beta 3    -3.00e-02   3.48e-02   -0.86  0.39117    
beta 4     1.50e-01   5.73e-02    2.62  0.01053 *  
gamma 1 1  1.34e-01   2.04e-02    6.59  4.7e-09 ***
gamma 1 2 -8.04e-02   1.50e-02   -5.35  8.5e-07 ***
gamma 1 3 -2.64e-02   1.17e-02   -2.26  0.02683 *  
gamma 1 4 -2.75e-02   1.68e-02   -1.63  0.10639    
gamma 2 1 -8.04e-02   1.50e-02   -5.35  8.5e-07 ***
gamma 2 2  1.02e-01   2.55e-02    4.01  0.00014 ***
gamma 2 3 -2.10e-02   1.62e-02   -1.30  0.19861    
gamma 2 4 -9.92e-04   2.03e-02   -0.05  0.96114    
gamma 3 1 -2.64e-02   1.17e-02   -2.26  0.02683 *  
gamma 3 2 -2.10e-02   1.62e-02   -1.30  0.19861    
gamma 3 3  5.85e-02   1.80e-02    3.24  0.00173 ** 
gamma 3 4 -1.11e-02   1.65e-02   -0.67  0.50340    
gamma 4 1 -2.75e-02   1.68e-02   -1.63  0.10639    
gamma 4 2 -9.92e-04   2.03e-02   -0.05  0.96114    
gamma 4 3 -1.11e-02   1.65e-02   -0.67  0.50340    
gamma 4 4  3.96e-02   2.71e-02    1.46  0.14863    
delta 1 1  1.03e-03   7.15e-04    1.44  0.15299    
delta 1 2  2.60e-05   1.86e-05    1.40  0.16567    
delta 2 1  3.26e-03   5.97e-04    5.47  5.3e-07 ***
delta 2 2 -6.39e-05   1.67e-05   -3.83  0.00025 ***
delta 3 1 -1.25e-03   5.12e-04   -2.45  0.01669 *  
delta 3 2  2.86e-05   1.39e-05    2.07  0.04201 *  
delta 4 1 -3.04e-03   7.01e-04   -4.34  4.2e-05 ***
delta 4 2  9.20e-06   1.99e-05    0.46  0.64442    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
R-squared Values of expenditure shares:
wFood1 wFood2 wFood3 wFood4 
 0.829  0.939  0.537 -5.680 
R-squared Values of quantities:
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
  0.0343  -2.7307  -2.1519  -6.5731 
> 
> 
> #####################################################
> cat( paste( "\nRepeating the evaluation of different elasticity formulas",
+    "of Green & Alston (1990): iterated AIDS\n" ) )

Repeating the evaluation of different elasticity formulas of Green & Alston (1990): iterated AIDS
> estResultAIDS <- aidsEst( pNames, wNames, "xFood",
+    data = Blanciforti86[ setWo1, ], method = "IL" )
> print( estResultAIDS )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: 'Iterated Linear Least Squares Estimator' (IL)
(starting with simplified Laspeyres Index, Ls)
Coefficients:
alpha_0
0 
alpha
wFood1 wFood2 wFood3 wFood4 
-0.253  0.104  0.258  0.892 
beta
 wFood1  wFood2  wFood3  wFood4 
 0.3277  0.0595 -0.0728 -0.3144 
gamma
        pFood1   pFood2   pFood3  pFood4
wFood1 -0.0779 -0.17201  0.03040  0.2195
wFood2 -0.1720  0.15158  0.00312  0.0173
wFood3  0.0304  0.00312  0.00573 -0.0393
wFood4  0.2195  0.01731 -0.03926 -0.1975
> nobs( estResultAIDS )
[1] 93
> print( summary( estResultAIDS ) )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: 'Iterated Linear Least Squares Estimator' (IL)
(starting with simplified Laspeyres Index, Ls)
Estimated Coefficients:
          Estimate Std. Error t value Pr(>|t|)    
alpha 1   -0.25333    0.06702   -3.78  0.00030 ***
alpha 2    0.10359    0.07406    1.40  0.16572    
alpha 3    0.25792    0.04812    5.36  7.7e-07 ***
alpha 4    0.89182    0.10656    8.37  1.4e-12 ***
beta 1     0.32768    0.03917    8.37  1.4e-12 ***
beta 2     0.05953    0.04289    1.39  0.16897    
beta 3    -0.07276    0.02781   -2.62  0.01059 *  
beta 4    -0.31444    0.06211   -5.06  2.5e-06 ***
gamma 1 1 -0.07785    0.04018   -1.94  0.05615 .  
gamma 1 2 -0.17201    0.02194   -7.84  1.5e-11 ***
gamma 1 3  0.03040    0.01862    1.63  0.10640    
gamma 1 4  0.21946    0.04948    4.44  2.9e-05 ***
gamma 2 1 -0.17201    0.02194   -7.84  1.5e-11 ***
gamma 2 2  0.15158    0.03910    3.88  0.00021 ***
gamma 2 3  0.00312    0.02511    0.12  0.90141    
gamma 2 4  0.01731    0.04419    0.39  0.69629    
gamma 3 1  0.03040    0.01862    1.63  0.10640    
gamma 3 2  0.00312    0.02511    0.12  0.90141    
gamma 3 3  0.00573    0.02221    0.26  0.79699    
gamma 3 4 -0.03926    0.02176   -1.80  0.07500 .  
gamma 4 1  0.21946    0.04948    4.44  2.9e-05 ***
gamma 4 2  0.01731    0.04419    0.39  0.69629    
gamma 4 3 -0.03926    0.02176   -1.80  0.07500 .  
gamma 4 4 -0.19751    0.08462   -2.33  0.02206 *  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
R-squared Values of expenditure shares:
wFood1 wFood2 wFood3 wFood4 
 0.685  0.844  0.431  0.712 
R-squared Values of quantities:
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   0.943    0.862    0.631    0.703 
> print( elas( estResultAIDS, method = "AIDS", quantNames = wNames,
+    observedShares = TRUE ) )

Demand Elasticities (original AIDS formulas)
Expenditure Elasticities
wFood1 wFood2 wFood3 wFood4 
 2.054  1.296  0.458  0.112 

Marshallian (uncompensated) Price Elasticities
        pFood1  pFood2  pFood3 pFood4
wFood1 -0.9955 -0.6616 -0.1729 -0.224
wFood2 -0.7831 -0.2772 -0.0604 -0.175
wFood3  0.0955  0.0789 -0.8180  0.186
wFood4  0.4052  0.1401  0.1172 -0.774

Hicksian (compensated) Price Elasticities
       pFood1  pFood2 pFood3 pFood4
wFood1 -0.357 -0.2482  0.103  0.503
wFood2 -0.380 -0.0164  0.113  0.284
wFood3  0.238  0.1710 -0.757  0.348
wFood4  0.440  0.1625  0.132 -0.734
> print( elas( estResultAIDS, method = "AIDS", quantNames = wNames ) )

Demand Elasticities (original AIDS formulas)
Expenditure Elasticities
wFood1 wFood2 wFood3 wFood4 
 2.047  1.293  0.455  0.102 

Marshallian (uncompensated) Price Elasticities
        pFood1  pFood2  pFood3 pFood4
wFood1 -0.9955 -0.6571 -0.1717 -0.223
wFood2 -0.7750 -0.2847 -0.0598 -0.173
wFood3  0.0959  0.0793 -0.8172  0.187
wFood4  0.4095  0.1415  0.1184 -0.772

Hicksian (compensated) Price Elasticities
       pFood1  pFood2 pFood3 pFood4
wFood1 -0.355 -0.2408  0.102  0.494
wFood2 -0.371 -0.0218  0.113  0.279
wFood3  0.238  0.1718 -0.756  0.346
wFood4  0.441  0.1623  0.132 -0.736
> # imposing restrictions via restrict.regMat
> estResultAIDSTX <- aidsEst( pNames, wNames, "xFood",
+    data = Blanciforti86[ setWo1, ], method = "IL", restrict.regMat = TRUE )
> print( estResultAIDSTX )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: 'Iterated Linear Least Squares Estimator' (IL)
(starting with simplified Laspeyres Index, Ls)
Coefficients:
alpha_0
0 
alpha
wFood1 wFood2 wFood3 wFood4 
-0.253  0.104  0.258  0.892 
beta
 wFood1  wFood2  wFood3  wFood4 
 0.3277  0.0595 -0.0728 -0.3144 
gamma
        pFood1   pFood2   pFood3  pFood4
wFood1 -0.0779 -0.17201  0.03040  0.2195
wFood2 -0.1720  0.15158  0.00312  0.0173
wFood3  0.0304  0.00312  0.00573 -0.0393
wFood4  0.2195  0.01731 -0.03926 -0.1975
> nobs( estResultAIDSTX )
[1] 93
> print( summary( estResultAIDSTX ) )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: 'Iterated Linear Least Squares Estimator' (IL)
(starting with simplified Laspeyres Index, Ls)
Estimated Coefficients:
          Estimate Std. Error t value Pr(>|t|)    
alpha 1   -0.25333    0.06702   -3.78  0.00030 ***
alpha 2    0.10359    0.07406    1.40  0.16572    
alpha 3    0.25792    0.04812    5.36  7.7e-07 ***
alpha 4    0.89182    0.10656    8.37  1.4e-12 ***
beta 1     0.32768    0.03917    8.37  1.4e-12 ***
beta 2     0.05953    0.04289    1.39  0.16897    
beta 3    -0.07276    0.02781   -2.62  0.01059 *  
beta 4    -0.31444    0.06211   -5.06  2.5e-06 ***
gamma 1 1 -0.07785    0.04018   -1.94  0.05615 .  
gamma 1 2 -0.17201    0.02194   -7.84  1.5e-11 ***
gamma 1 3  0.03040    0.01862    1.63  0.10640    
gamma 1 4  0.21946    0.04948    4.44  2.9e-05 ***
gamma 2 1 -0.17201    0.02194   -7.84  1.5e-11 ***
gamma 2 2  0.15158    0.03910    3.88  0.00021 ***
gamma 2 3  0.00312    0.02511    0.12  0.90141    
gamma 2 4  0.01731    0.04419    0.39  0.69629    
gamma 3 1  0.03040    0.01862    1.63  0.10640    
gamma 3 2  0.00312    0.02511    0.12  0.90141    
gamma 3 3  0.00573    0.02221    0.26  0.79699    
gamma 3 4 -0.03926    0.02176   -1.80  0.07500 .  
gamma 4 1  0.21946    0.04948    4.44  2.9e-05 ***
gamma 4 2  0.01731    0.04419    0.39  0.69629    
gamma 4 3 -0.03926    0.02176   -1.80  0.07500 .  
gamma 4 4 -0.19751    0.08462   -2.33  0.02206 *  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
R-squared Values of expenditure shares:
wFood1 wFood2 wFood3 wFood4 
 0.685  0.844  0.431  0.712 
R-squared Values of quantities:
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   0.943    0.862    0.631    0.703 
> print( elas( estResultAIDSTX, method = "AIDS", quantNames = wNames,
+    observedShares = TRUE ) )

Demand Elasticities (original AIDS formulas)
Expenditure Elasticities
wFood1 wFood2 wFood3 wFood4 
 2.054  1.296  0.458  0.112 

Marshallian (uncompensated) Price Elasticities
        pFood1  pFood2  pFood3 pFood4
wFood1 -0.9955 -0.6616 -0.1729 -0.224
wFood2 -0.7831 -0.2772 -0.0604 -0.175
wFood3  0.0955  0.0789 -0.8180  0.186
wFood4  0.4052  0.1401  0.1172 -0.774

Hicksian (compensated) Price Elasticities
       pFood1  pFood2 pFood3 pFood4
wFood1 -0.357 -0.2482  0.103  0.503
wFood2 -0.380 -0.0164  0.113  0.284
wFood3  0.238  0.1710 -0.757  0.348
wFood4  0.440  0.1625  0.132 -0.734
> print( elas( estResultAIDSTX, method = "AIDS", quantNames = wNames ) )

Demand Elasticities (original AIDS formulas)
Expenditure Elasticities
wFood1 wFood2 wFood3 wFood4 
 2.047  1.293  0.455  0.102 

Marshallian (uncompensated) Price Elasticities
        pFood1  pFood2  pFood3 pFood4
wFood1 -0.9955 -0.6571 -0.1717 -0.223
wFood2 -0.7750 -0.2847 -0.0598 -0.173
wFood3  0.0959  0.0793 -0.8172  0.187
wFood4  0.4095  0.1415  0.1184 -0.772

Hicksian (compensated) Price Elasticities
       pFood1  pFood2 pFood3 pFood4
wFood1 -0.355 -0.2408  0.102  0.494
wFood2 -0.371 -0.0218  0.113  0.279
wFood3  0.238  0.1718 -0.756  0.346
wFood4  0.441  0.1623  0.132 -0.736
> 
> ## only homogeneity (no symmetry imposed)
> estResultAIDShom <- aidsEst( pNames, wNames, "xFood", sym = FALSE,
+    data = Blanciforti86[ setWo1, ], method = "IL" )
> print( estResultAIDShom )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: 'Iterated Linear Least Squares Estimator' (IL)
(starting with simplified Laspeyres Index, Ls)
Coefficients:
alpha_0
0 
alpha
 wFood1  wFood2  wFood3  wFood4 
-0.2615  0.0959  0.2502  0.9155 
beta
 wFood1  wFood2  wFood3  wFood4 
 0.3331  0.0630 -0.0688 -0.3273 
gamma
        pFood1  pFood2   pFood3  pFood4
wFood1 -0.0837 -0.1593 -0.00509  0.2481
wFood2 -0.1674  0.1186  0.03855  0.0103
wFood3  0.0337 -0.0155  0.02237 -0.0406
wFood4  0.2174  0.0562 -0.05583 -0.2178
> nobs( estResultAIDShom )
[1] 93
> print( summary( estResultAIDShom ) )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: 'Iterated Linear Least Squares Estimator' (IL)
(starting with simplified Laspeyres Index, Ls)
Estimated Coefficients:
          Estimate Std. Error t value Pr(>|t|)    
alpha 1   -0.26152    0.07759   -3.37  0.00117 ** 
alpha 2    0.09590    0.06005    1.60  0.11435    
alpha 3    0.25016    0.03516    7.11  4.8e-10 ***
alpha 4    0.91546    0.09761    9.38  2.0e-14 ***
beta 1     0.33313    0.04478    7.44  1.1e-10 ***
beta 2     0.06299    0.03469    1.82  0.07327 .  
beta 3    -0.06877    0.02031   -3.39  0.00111 ** 
beta 4    -0.32735    0.05635   -5.81  1.3e-07 ***
gamma 1 1 -0.08373    0.04288   -1.95  0.05448 .  
gamma 1 2 -0.15931    0.05766   -2.76  0.00715 ** 
gamma 1 3 -0.00509    0.04698   -0.11  0.91405    
gamma 1 4  0.24813    0.06510    3.81  0.00027 ***
gamma 2 1 -0.16744    0.01873   -8.94  1.4e-13 ***
gamma 2 2  0.11862    0.04269    2.78  0.00683 ** 
gamma 2 3  0.03855    0.03423    1.13  0.26349    
gamma 2 4  0.01027    0.03660    0.28  0.77980    
gamma 3 1  0.03374    0.01259    2.68  0.00897 ** 
gamma 3 2 -0.01546    0.02437   -0.63  0.52756    
gamma 3 3  0.02237    0.02068    1.08  0.28277    
gamma 3 4 -0.04065    0.02059   -1.97  0.05191 .  
gamma 4 1  0.21743    0.04541    4.79  7.8e-06 ***
gamma 4 2  0.05616    0.07559    0.74  0.45973    
gamma 4 3 -0.05583    0.05701   -0.98  0.33046    
gamma 4 4 -0.21775    0.07901   -2.76  0.00728 ** 
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
R-squared Values of expenditure shares:
wFood1 wFood2 wFood3 wFood4 
 0.695  0.851  0.448  0.718 
R-squared Values of quantities:
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   0.946    0.867    0.643    0.709 
> print( elas( estResultAIDShom, method = "AIDS", quantNames = wNames,
+    observedShares = TRUE ) )

Demand Elasticities (original AIDS formulas)
Expenditure Elasticities
wFood1 wFood2 wFood3 wFood4 
 2.072  1.313  0.487  0.075 

Marshallian (uncompensated) Price Elasticities
       pFood1  pFood2  pFood3 pFood4
wFood1 -1.000 -0.6163 -0.2843 -0.171
wFood2 -0.753 -0.4409  0.1133 -0.232
wFood3  0.123 -0.0657 -0.7051  0.161
wFood4  0.382  0.2482  0.0734 -0.779

Hicksian (compensated) Price Elasticities
       pFood1  pFood2   pFood3 pFood4
wFood1 -0.357 -0.1993 -0.00638  0.562
wFood2 -0.345 -0.1766  0.28944  0.233
wFood3  0.274  0.0324 -0.63973  0.333
wFood4  0.406  0.2633  0.08349 -0.752
> print( elas( estResultAIDShom, method = "AIDS", quantNames = wNames ) )

Demand Elasticities (original AIDS formulas)
Expenditure Elasticities
wFood1 wFood2 wFood3 wFood4 
2.0645 1.3098 0.4850 0.0652 

Marshallian (uncompensated) Price Elasticities
       pFood1 pFood2  pFood3 pFood4
wFood1 -1.000 -0.612 -0.2823 -0.170
wFood2 -0.746 -0.447  0.1122 -0.230
wFood3  0.123 -0.066 -0.7038  0.161
wFood4  0.386  0.251  0.0742 -0.777

Hicksian (compensated) Price Elasticities
       pFood1  pFood2   pFood3 pFood4
wFood1 -0.354 -0.1922 -0.00662  0.553
wFood2 -0.336 -0.1803  0.28708  0.229
wFood3  0.275  0.0326 -0.63902  0.331
wFood4  0.407  0.2641  0.08291 -0.754
> # imposing restrictions via restrict.regMat
> estResultAIDShomTX <- aidsEst( pNames, wNames, "xFood", sym = FALSE,
+    data = Blanciforti86[ setWo1, ], method = "IL", restrict.regMat = TRUE )
> print( estResultAIDShomTX )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: 'Iterated Linear Least Squares Estimator' (IL)
(starting with simplified Laspeyres Index, Ls)
Coefficients:
alpha_0
0 
alpha
 wFood1  wFood2  wFood3  wFood4 
-0.2615  0.0959  0.2502  0.9155 
beta
 wFood1  wFood2  wFood3  wFood4 
 0.3331  0.0630 -0.0688 -0.3273 
gamma
        pFood1  pFood2   pFood3  pFood4
wFood1 -0.0837 -0.1593 -0.00509  0.2481
wFood2 -0.1674  0.1186  0.03855  0.0103
wFood3  0.0337 -0.0155  0.02237 -0.0406
wFood4  0.2174  0.0562 -0.05583 -0.2178
> nobs( estResultAIDShomTX )
[1] 93
> print( summary( estResultAIDShomTX ) )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: 'Iterated Linear Least Squares Estimator' (IL)
(starting with simplified Laspeyres Index, Ls)
Estimated Coefficients:
          Estimate Std. Error t value Pr(>|t|)    
alpha 1   -0.26152    0.07759   -3.37  0.00117 ** 
alpha 2    0.09590    0.06005    1.60  0.11435    
alpha 3    0.25016    0.03516    7.11  4.8e-10 ***
alpha 4    0.91546    0.09761    9.38  2.0e-14 ***
beta 1     0.33313    0.04478    7.44  1.1e-10 ***
beta 2     0.06299    0.03469    1.82  0.07327 .  
beta 3    -0.06877    0.02031   -3.39  0.00111 ** 
beta 4    -0.32735    0.05635   -5.81  1.3e-07 ***
gamma 1 1 -0.08373    0.04288   -1.95  0.05448 .  
gamma 1 2 -0.15931    0.05766   -2.76  0.00715 ** 
gamma 1 3 -0.00509    0.04698   -0.11  0.91405    
gamma 1 4  0.24813    0.06510    3.81  0.00027 ***
gamma 2 1 -0.16744    0.01873   -8.94  1.4e-13 ***
gamma 2 2  0.11862    0.04269    2.78  0.00683 ** 
gamma 2 3  0.03855    0.03423    1.13  0.26349    
gamma 2 4  0.01027    0.03660    0.28  0.77980    
gamma 3 1  0.03374    0.01259    2.68  0.00897 ** 
gamma 3 2 -0.01546    0.02437   -0.63  0.52756    
gamma 3 3  0.02237    0.02068    1.08  0.28277    
gamma 3 4 -0.04065    0.02059   -1.97  0.05191 .  
gamma 4 1  0.21743    0.04541    4.79  7.8e-06 ***
gamma 4 2  0.05616    0.07559    0.74  0.45973    
gamma 4 3 -0.05583    0.05701   -0.98  0.33046    
gamma 4 4 -0.21775    0.07901   -2.76  0.00728 ** 
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
R-squared Values of expenditure shares:
wFood1 wFood2 wFood3 wFood4 
 0.695  0.851  0.448  0.718 
R-squared Values of quantities:
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   0.946    0.867    0.643    0.709 
> print( elas( estResultAIDShomTX, method = "AIDS", quantNames = wNames,
+    observedShares = TRUE ) )

Demand Elasticities (original AIDS formulas)
Expenditure Elasticities
wFood1 wFood2 wFood3 wFood4 
 2.072  1.313  0.487  0.075 

Marshallian (uncompensated) Price Elasticities
       pFood1  pFood2  pFood3 pFood4
wFood1 -1.000 -0.6163 -0.2843 -0.171
wFood2 -0.753 -0.4409  0.1133 -0.232
wFood3  0.123 -0.0657 -0.7051  0.161
wFood4  0.382  0.2482  0.0734 -0.779

Hicksian (compensated) Price Elasticities
       pFood1  pFood2   pFood3 pFood4
wFood1 -0.357 -0.1993 -0.00638  0.562
wFood2 -0.345 -0.1766  0.28944  0.233
wFood3  0.274  0.0324 -0.63973  0.333
wFood4  0.406  0.2633  0.08349 -0.752
> print( elas( estResultAIDShomTX, method = "AIDS", quantNames = wNames ) )

Demand Elasticities (original AIDS formulas)
Expenditure Elasticities
wFood1 wFood2 wFood3 wFood4 
2.0645 1.3098 0.4850 0.0652 

Marshallian (uncompensated) Price Elasticities
       pFood1 pFood2  pFood3 pFood4
wFood1 -1.000 -0.612 -0.2823 -0.170
wFood2 -0.746 -0.447  0.1122 -0.230
wFood3  0.123 -0.066 -0.7038  0.161
wFood4  0.386  0.251  0.0742 -0.777

Hicksian (compensated) Price Elasticities
       pFood1  pFood2   pFood3 pFood4
wFood1 -0.354 -0.1922 -0.00662  0.553
wFood2 -0.336 -0.1803  0.28708  0.229
wFood3  0.275  0.0326 -0.63902  0.331
wFood4  0.407  0.2641  0.08291 -0.754
> 
> ## unrestricted (no homogeneity and no symmetry imposed)
> estResultAIDSunr <- aidsEst( pNames, wNames, "xFood", hom = FALSE, sym = FALSE,
+    data = Blanciforti86[ setWo1, ], method = "IL" )
> print( estResultAIDSunr )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: 'Iterated Linear Least Squares Estimator' (IL)
(starting with simplified Laspeyres Index, Ls)
Coefficients:
alpha_0
0 
alpha
 wFood1  wFood2  wFood3  wFood4 
-0.0725  0.1627  0.2477  0.6621 
beta
  wFood1   wFood2   wFood3   wFood4 
 0.14260 -0.00453 -0.06679 -0.07129 
gamma
        pFood1  pFood2  pFood3  pFood4
wFood1  0.0746 -0.0461 -0.0389  0.0422
wFood2 -0.1253  0.1534  0.0272 -0.0440
wFood3  0.0157 -0.0231  0.0236 -0.0164
wFood4  0.0350 -0.0841 -0.0119  0.0182
> nobs( estResultAIDSunr )
[1] 93
> print( summary( estResultAIDSunr ) )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: 'Iterated Linear Least Squares Estimator' (IL)
(starting with simplified Laspeyres Index, Ls)
Estimated Coefficients:
          Estimate Std. Error t value Pr(>|t|)    
alpha 1   -0.07253    0.07642   -0.95  0.34565    
alpha 2    0.16272    0.07208    2.26  0.02688 *  
alpha 3    0.24770    0.04441    5.58  3.7e-07 ***
alpha 4    0.66210    0.08980    7.37  1.8e-10 ***
beta 1     0.14260    0.05773    2.47  0.01578 *  
beta 2    -0.00453    0.05442   -0.08  0.93390    
beta 3    -0.06679    0.03353   -1.99  0.05004 .  
beta 4    -0.07129    0.06782   -1.05  0.29660    
gamma 1 1  0.07455    0.03195    2.33  0.02232 *  
gamma 1 2 -0.04615    0.04542   -1.02  0.31286    
gamma 1 3 -0.03893    0.03745   -1.04  0.30185    
gamma 1 4  0.04224    0.04277    0.99  0.32645    
gamma 2 1 -0.12530    0.02184   -5.74  1.9e-07 ***
gamma 2 2  0.15335    0.04162    3.68  0.00043 ***
gamma 2 3  0.02724    0.03376    0.81  0.42230    
gamma 2 4 -0.04404    0.03275   -1.34  0.18275    
gamma 3 1  0.01570    0.01601    0.98  0.32980    
gamma 3 2 -0.02306    0.02686   -0.86  0.39331    
gamma 3 3  0.02356    0.02204    1.07  0.28854    
gamma 3 4 -0.01643    0.02151   -0.76  0.44746    
gamma 4 1  0.03504    0.02978    1.18  0.24309    
gamma 4 2 -0.08414    0.05477   -1.54  0.12870    
gamma 4 3 -0.01187    0.04220   -0.28  0.77926    
gamma 4 4  0.01822    0.04641    0.39  0.69565    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
R-squared Values of expenditure shares:
wFood1 wFood2 wFood3 wFood4 
 0.817  0.864  0.444  0.858 
R-squared Values of quantities:
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   0.968    0.878    0.640    0.851 
> print( elas( estResultAIDSunr, method = "AIDS", quantNames = wNames,
+    observedShares = TRUE ) )

Demand Elasticities (original AIDS formulas)
Expenditure Elasticities
wFood1 wFood2 wFood3 wFood4 
 1.459  0.977  0.502  0.799 

Marshallian (uncompensated) Price Elasticities
       pFood1  pFood2  pFood3  pFood4
wFood1 -0.792 -0.2453 -0.2388 -0.0808
wFood2 -0.621 -0.2333  0.1409 -0.2082
wFood3  0.152 -0.0669 -0.7011  0.1127
wFood4  0.113 -0.1953  0.0163 -0.8533

Hicksian (compensated) Price Elasticities
       pFood1  pFood2  pFood3 pFood4
wFood1 -0.338  0.0483 -0.0431  0.435
wFood2 -0.317 -0.0366  0.2720  0.138
wFood3  0.308  0.0341 -0.6338  0.290
wFood4  0.361 -0.0346  0.1234 -0.571
> print( elas( estResultAIDSunr, method = "AIDS", quantNames = wNames ) )

Demand Elasticities (original AIDS formulas)
Expenditure Elasticities
wFood1 wFood2 wFood3 wFood4 
 1.456  0.978  0.500  0.797 

Marshallian (uncompensated) Price Elasticities
       pFood1  pFood2  pFood3  pFood4
wFood1 -0.793 -0.2439 -0.2375 -0.0804
wFood2 -0.615 -0.2405  0.1396 -0.2062
wFood3  0.152 -0.0673 -0.6998  0.1133
wFood4  0.114 -0.1970  0.0165 -0.8520

Hicksian (compensated) Price Elasticities
       pFood1  pFood2 pFood3 pFood4
wFood1 -0.338  0.0520 -0.043  0.430
wFood2 -0.310 -0.0419  0.270  0.137
wFood3  0.308  0.0343 -0.633  0.289
wFood4  0.363 -0.0351  0.123 -0.573
> # imposing restrictions via restrict.regMat
> estResultAIDSunrTX <- aidsEst( pNames, wNames, "xFood", hom = FALSE, sym = FALSE,
+    data = Blanciforti86[ setWo1, ], method = "IL", restrict.regMat = TRUE )
> print( estResultAIDSunrTX )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: 'Iterated Linear Least Squares Estimator' (IL)
(starting with simplified Laspeyres Index, Ls)
Coefficients:
alpha_0
0 
alpha
 wFood1  wFood2  wFood3  wFood4 
-0.0725  0.1627  0.2477  0.6621 
beta
  wFood1   wFood2   wFood3   wFood4 
 0.14260 -0.00453 -0.06679 -0.07129 
gamma
        pFood1  pFood2  pFood3  pFood4
wFood1  0.0746 -0.0461 -0.0389  0.0422
wFood2 -0.1253  0.1534  0.0272 -0.0440
wFood3  0.0157 -0.0231  0.0236 -0.0164
wFood4  0.0350 -0.0841 -0.0119  0.0182
> nobs( estResultAIDSunrTX )
[1] 93
> print( summary( estResultAIDSunrTX ) )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: 'Iterated Linear Least Squares Estimator' (IL)
(starting with simplified Laspeyres Index, Ls)
Estimated Coefficients:
          Estimate Std. Error t value Pr(>|t|)    
alpha 1   -0.07253    0.07642   -0.95  0.34565    
alpha 2    0.16272    0.07208    2.26  0.02688 *  
alpha 3    0.24770    0.04441    5.58  3.7e-07 ***
alpha 4    0.66210    0.08980    7.37  1.8e-10 ***
beta 1     0.14260    0.05773    2.47  0.01578 *  
beta 2    -0.00453    0.05442   -0.08  0.93390    
beta 3    -0.06679    0.03353   -1.99  0.05004 .  
beta 4    -0.07129    0.06782   -1.05  0.29660    
gamma 1 1  0.07455    0.03195    2.33  0.02232 *  
gamma 1 2 -0.04615    0.04542   -1.02  0.31286    
gamma 1 3 -0.03893    0.03745   -1.04  0.30185    
gamma 1 4  0.04224    0.04277    0.99  0.32645    
gamma 2 1 -0.12530    0.02184   -5.74  1.9e-07 ***
gamma 2 2  0.15335    0.04162    3.68  0.00043 ***
gamma 2 3  0.02724    0.03376    0.81  0.42230    
gamma 2 4 -0.04404    0.03275   -1.34  0.18275    
gamma 3 1  0.01570    0.01601    0.98  0.32980    
gamma 3 2 -0.02306    0.02686   -0.86  0.39331    
gamma 3 3  0.02356    0.02204    1.07  0.28854    
gamma 3 4 -0.01643    0.02151   -0.76  0.44746    
gamma 4 1  0.03504    0.02978    1.18  0.24309    
gamma 4 2 -0.08414    0.05477   -1.54  0.12870    
gamma 4 3 -0.01187    0.04220   -0.28  0.77926    
gamma 4 4  0.01822    0.04641    0.39  0.69565    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
R-squared Values of expenditure shares:
wFood1 wFood2 wFood3 wFood4 
 0.817  0.864  0.444  0.858 
R-squared Values of quantities:
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   0.968    0.878    0.640    0.851 
> print( elas( estResultAIDSunrTX, method = "AIDS", quantNames = wNames,
+    observedShares = TRUE ) )

Demand Elasticities (original AIDS formulas)
Expenditure Elasticities
wFood1 wFood2 wFood3 wFood4 
 1.459  0.977  0.502  0.799 

Marshallian (uncompensated) Price Elasticities
       pFood1  pFood2  pFood3  pFood4
wFood1 -0.792 -0.2453 -0.2388 -0.0808
wFood2 -0.621 -0.2333  0.1409 -0.2082
wFood3  0.152 -0.0669 -0.7011  0.1127
wFood4  0.113 -0.1953  0.0163 -0.8533

Hicksian (compensated) Price Elasticities
       pFood1  pFood2  pFood3 pFood4
wFood1 -0.338  0.0483 -0.0431  0.435
wFood2 -0.317 -0.0366  0.2720  0.138
wFood3  0.308  0.0341 -0.6338  0.290
wFood4  0.361 -0.0346  0.1234 -0.571
> print( elas( estResultAIDSunrTX, method = "AIDS", quantNames = wNames ) )

Demand Elasticities (original AIDS formulas)
Expenditure Elasticities
wFood1 wFood2 wFood3 wFood4 
 1.456  0.978  0.500  0.797 

Marshallian (uncompensated) Price Elasticities
       pFood1  pFood2  pFood3  pFood4
wFood1 -0.793 -0.2439 -0.2375 -0.0804
wFood2 -0.615 -0.2405  0.1396 -0.2062
wFood3  0.152 -0.0673 -0.6998  0.1133
wFood4  0.114 -0.1970  0.0165 -0.8520

Hicksian (compensated) Price Elasticities
       pFood1  pFood2 pFood3 pFood4
wFood1 -0.338  0.0520 -0.043  0.430
wFood2 -0.310 -0.0419  0.270  0.137
wFood3  0.308  0.0343 -0.633  0.289
wFood4  0.363 -0.0351  0.123 -0.573
> 
> ## with NAs
> estResultLaSNa <- aidsEst( pNames, wNames, "xFood",
+    data = Blanciforti86,
+    priceIndex = "S" )
Warning message:
In aidsEst(pNames, wNames, "xFood", data = Blanciforti86, priceIndex = "S") :
  there are some NAs in the data, all observations (rows) with NAs are excluded from the analysis
> print( estResultLaSNa )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: Linear Approximation (LA) with Stone Index (S)
Coefficients:
alpha
wFood1 wFood2 wFood3 wFood4 
-0.247  0.109  0.268  0.870 
beta
 wFood1  wFood2  wFood3  wFood4 
 0.3240  0.0559 -0.0786 -0.3012 
gamma
        pFood1   pFood2   pFood3  pFood4
wFood1  0.1042 -0.13988 -0.01156  0.0473
wFood2 -0.1399  0.15691  0.00347 -0.0205
wFood3 -0.0116  0.00347  0.01249 -0.0044
wFood4  0.0473 -0.02050 -0.00440 -0.0224
> nobs( estResultLaSNa )
[1] 96
> print( summary( estResultLaSNa ) )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: Linear Approximation (LA) with Stone Index (S)
Estimated Coefficients:
          Estimate Std. Error t value Pr(>|t|)    
alpha 1   -0.24730    0.07008   -3.53  0.00068 ***
alpha 2    0.10925    0.05787    1.89  0.06252 .  
alpha 3    0.26824    0.03441    7.79  1.6e-11 ***
alpha 4    0.86981    0.09058    9.60  3.6e-15 ***
beta 1     0.32399    0.04104    7.89  9.9e-12 ***
beta 2     0.05586    0.03360    1.66  0.10011    
beta 3    -0.07863    0.02003   -3.93  0.00018 ***
beta 4    -0.30123    0.05299   -5.68  1.8e-07 ***
gamma 1 1  0.10415    0.02080    5.01  3.0e-06 ***
gamma 1 2 -0.13988    0.01530   -9.14  3.1e-14 ***
gamma 1 3 -0.01156    0.00982   -1.18  0.24221    
gamma 1 4  0.04729    0.02398    1.97  0.05184 .  
gamma 2 1 -0.13988    0.01530   -9.14  3.1e-14 ***
gamma 2 2  0.15691    0.02863    5.48  4.4e-07 ***
gamma 2 3  0.00347    0.01755    0.20  0.84365    
gamma 2 4 -0.02050    0.02363   -0.87  0.38805    
gamma 3 1 -0.01156    0.00982   -1.18  0.24221    
gamma 3 2  0.00347    0.01755    0.20  0.84365    
gamma 3 3  0.01249    0.01624    0.77  0.44405    
gamma 3 4 -0.00440    0.01354   -0.32  0.74600    
gamma 4 1  0.04729    0.02398    1.97  0.05184 .  
gamma 4 2 -0.02050    0.02363   -0.87  0.38805    
gamma 4 3 -0.00440    0.01354   -0.32  0.74600    
gamma 4 4 -0.02239    0.03829   -0.58  0.56030    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
R-squared Values of expenditure shares:
wFood1 wFood2 wFood3 wFood4 
 0.627  0.832  0.412  0.657 
R-squared Values of quantities:
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   0.935    0.846    0.677    0.632 
> print( elas( estResultLaSNa, method = "AIDS", quantNames = wNames,
+    observedShares = TRUE ) )

Demand Elasticities (original AIDS formulas)
Expenditure Elasticities
wFood1 wFood2 wFood3 wFood4 
 2.044  1.279  0.414  0.152 

Marshallian (uncompensated) Price Elasticities
       pFood1  pFood2  pFood3 pFood4
wFood1 -0.409 -0.5619 -0.3176 -0.755
wFood2 -0.630 -0.2465 -0.0576 -0.345
wFood3 -0.229  0.0883 -0.7494  0.477
wFood4 -0.074  0.0326  0.2154 -0.326

Hicksian (compensated) Price Elasticities
        pFood1  pFood2  pFood3  pFood4
wFood1  0.2249 -0.1524 -0.0435 -0.0288
wFood2 -0.2332  0.0097  0.1140  0.1096
wFood3 -0.1010  0.1712 -0.6939  0.6237
wFood4 -0.0268  0.0631  0.2358 -0.2721
> print( elas( estResultLaSNa, method = "AIDS", quantNames = wNames ) )

Demand Elasticities (original AIDS formulas)
Expenditure Elasticities
wFood1 wFood2 wFood3 wFood4 
 2.036  1.276  0.411  0.142 

Marshallian (uncompensated) Price Elasticities
        pFood1  pFood2  pFood3 pFood4
wFood1 -0.4140 -0.5576 -0.3152 -0.749
wFood2 -0.6231 -0.2548 -0.0569 -0.341
wFood3 -0.2306  0.0888 -0.7481  0.479
wFood4 -0.0748  0.0330  0.2178 -0.318

Hicksian (compensated) Price Elasticities
        pFood1  pFood2  pFood3 pFood4
wFood1  0.2228 -0.1452 -0.0436 -0.034
wFood2 -0.2241  0.0036  0.1133  0.107
wFood3 -0.1022  0.1720 -0.6933  0.623
wFood4 -0.0303  0.0619  0.2368 -0.268
> 
> estResultLaSlNa <- aidsEst( pNames, wNames, "xFood",
+    data = Blanciforti86,
+    priceIndex = "SL" )
Warning message:
In aidsEst(pNames, wNames, "xFood", data = Blanciforti86, priceIndex = "SL") :
  there are some NAs in the data, all observations (rows) with NAs are excluded from the analysis
> print( estResultLaSlNa )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: Linear Approximation (LA) with lagged Stone Index (SL)
Coefficients:
alpha
wFood1 wFood2 wFood3 wFood4 
-0.255  0.110  0.261  0.884 
beta
 wFood1  wFood2  wFood3  wFood4 
 0.3287  0.0559 -0.0747 -0.3099 
gamma
        pFood1   pFood2    pFood3    pFood4
wFood1  0.1107 -0.13851 -0.011881  0.039732
wFood2 -0.1385  0.15820 -0.003476 -0.016216
wFood3 -0.0119 -0.00348  0.014589  0.000768
wFood4  0.0397 -0.01622  0.000768 -0.024285
> nobs( estResultLaSlNa )
[1] 93
> print( summary( estResultLaSlNa ) )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: Linear Approximation (LA) with lagged Stone Index (SL)
Estimated Coefficients:
           Estimate Std. Error t value Pr(>|t|)    
alpha 1   -0.254562   0.064558   -3.94  0.00017 ***
alpha 2    0.109799   0.056389    1.95  0.05498 .  
alpha 3    0.261220   0.035245    7.41  1.1e-10 ***
alpha 4    0.883543   0.078018   11.32  < 2e-16 ***
beta 1     0.328704   0.037794    8.70  3.2e-13 ***
beta 2     0.055946   0.032702    1.71  0.09095 .  
beta 3    -0.074741   0.020503   -3.65  0.00047 ***
beta 4    -0.309909   0.045604   -6.80  1.7e-09 ***
gamma 1 1  0.110660   0.019541    5.66  2.2e-07 ***
gamma 1 2 -0.138511   0.014969   -9.25  2.5e-14 ***
gamma 1 3 -0.011881   0.010098   -1.18  0.24283    
gamma 1 4  0.039732   0.020737    1.92  0.05889 .  
gamma 2 1 -0.138511   0.014969   -9.25  2.5e-14 ***
gamma 2 2  0.158203   0.029141    5.43  5.8e-07 ***
gamma 2 3 -0.003476   0.018710   -0.19  0.85308    
gamma 2 4 -0.016216   0.022336   -0.73  0.46995    
gamma 3 1 -0.011881   0.010098   -1.18  0.24283    
gamma 3 2 -0.003476   0.018710   -0.19  0.85308    
gamma 3 3  0.014589   0.018062    0.81  0.42165    
gamma 3 4  0.000768   0.013674    0.06  0.95533    
gamma 4 1  0.039732   0.020737    1.92  0.05889 .  
gamma 4 2 -0.016216   0.022336   -0.73  0.46995    
gamma 4 3  0.000768   0.013674    0.06  0.95533    
gamma 4 4 -0.024285   0.032868   -0.74  0.46212    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
R-squared Values of expenditure shares:
wFood1 wFood2 wFood3 wFood4 
 0.701  0.846  0.408  0.734 
R-squared Values of quantities:
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   0.946    0.864    0.618    0.724 
> print( elas( estResultLaSlNa, method = "AIDS", quantNames = wNames,
+    observedShares = TRUE ) )

Demand Elasticities (original AIDS formulas)
Expenditure Elasticities
wFood1 wFood2 wFood3 wFood4 
 2.058  1.278  0.443  0.124 

Marshallian (uncompensated) Price Elasticities
       pFood1  pFood2  pFood3 pFood4
wFood1 -0.377 -0.5591 -0.3153 -0.806
wFood2 -0.618 -0.2437 -0.0901 -0.326
wFood3 -0.229  0.0338 -0.7452  0.498
wFood4 -0.108  0.0480  0.2316 -0.295

Hicksian (compensated) Price Elasticities
        pFood1  pFood2  pFood3  pFood4
wFood1  0.2622 -0.1449 -0.0393 -0.0778
wFood2 -0.2210  0.0135  0.0813  0.1263
wFood3 -0.0914  0.1229 -0.6859  0.6544
wFood4 -0.0698  0.0731  0.2483 -0.2515
> print( elas( estResultLaSlNa, method = "AIDS", quantNames = wNames ) )

Demand Elasticities (original AIDS formulas)
Expenditure Elasticities
wFood1 wFood2 wFood3 wFood4 
 2.049  1.275  0.440  0.114 

Marshallian (uncompensated) Price Elasticities
       pFood1  pFood2  pFood3 pFood4
wFood1 -0.382 -0.5547 -0.3129 -0.800
wFood2 -0.612 -0.2517 -0.0892 -0.323
wFood3 -0.230  0.0340 -0.7440  0.500
wFood4 -0.110  0.0486  0.2342 -0.287

Hicksian (compensated) Price Elasticities
        pFood1   pFood2  pFood3  pFood4
wFood1  0.2597 -0.13786 -0.0394 -0.0825
wFood2 -0.2123  0.00768  0.0810  0.1236
wFood3 -0.0924  0.12346 -0.6852  0.6542
wFood4 -0.0739  0.07184  0.2495 -0.2475
> 
> estResultLaLsNa <- aidsEst( pNames, wNames, "xFood",
+    data = Blanciforti86 )
Warning message:
In aidsEst(pNames, wNames, "xFood", data = Blanciforti86) :
  there are some NAs in the data, all observations (rows) with NAs are excluded from the analysis
> print( estResultLaLsNa )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: Linear Approximation (LA) with simplified Laspeyres Index (Ls)
Coefficients:
alpha
wFood1 wFood2 wFood3 wFood4 
-0.248  0.123  0.273  0.852 
beta
 wFood1  wFood2  wFood3  wFood4 
 0.3251  0.0481 -0.0816 -0.2917 
gamma
         pFood1   pFood2   pFood3  pFood4
wFood1  0.09104 -0.14571 -0.00963  0.0643
wFood2 -0.14571  0.15852  0.00594 -0.0188
wFood3 -0.00963  0.00594  0.01289 -0.0092
wFood4  0.06431 -0.01875 -0.00920 -0.0364
> nobs( estResultLaLsNa )
[1] 96
> print( summary( estResultLaLsNa ) )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: Linear Approximation (LA) with simplified Laspeyres Index (Ls)
Estimated Coefficients:
          Estimate Std. Error t value Pr(>|t|)    
alpha 1   -0.24814    0.07070   -3.51  0.00072 ***
alpha 2    0.12270    0.06071    2.02  0.04645 *  
alpha 3    0.27297    0.03522    7.75  1.9e-11 ***
alpha 4    0.85247    0.09423    9.05  4.8e-14 ***
beta 1     0.32513    0.04149    7.84  1.3e-11 ***
beta 2     0.04809    0.03529    1.36  0.17664    
beta 3    -0.08155    0.02053   -3.97  0.00015 ***
beta 4    -0.29167    0.05522   -5.28  9.9e-07 ***
gamma 1 1  0.09104    0.02026    4.49  2.2e-05 ***
gamma 1 2 -0.14571    0.01515   -9.62  3.4e-15 ***
gamma 1 3 -0.00963    0.00949   -1.01  0.31303    
gamma 1 4  0.06431    0.02405    2.67  0.00901 ** 
gamma 2 1 -0.14571    0.01515   -9.62  3.4e-15 ***
gamma 2 2  0.15852    0.02993    5.30  9.3e-07 ***
gamma 2 3  0.00594    0.01791    0.33  0.74102    
gamma 2 4 -0.01875    0.02442   -0.77  0.44476    
gamma 3 1 -0.00963    0.00949   -1.01  0.31303    
gamma 3 2  0.00594    0.01791    0.33  0.74102    
gamma 3 3  0.01289    0.01625    0.79  0.42991    
gamma 3 4 -0.00920    0.01379   -0.67  0.50672    
gamma 4 1  0.06431    0.02405    2.67  0.00901 ** 
gamma 4 2 -0.01875    0.02442   -0.77  0.44476    
gamma 4 3 -0.00920    0.01379   -0.67  0.50672    
gamma 4 4 -0.03636    0.03911   -0.93  0.35519    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
R-squared Values of expenditure shares:
wFood1 wFood2 wFood3 wFood4 
 0.620  0.830  0.414  0.640 
R-squared Values of quantities:
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   0.932    0.845    0.679    0.614 
> print( elas( estResultLaLsNa, method = "AIDS", quantNames = wNames,
+    observedShares = TRUE ) )

Demand Elasticities (original AIDS formulas)
Expenditure Elasticities
wFood1 wFood2 wFood3 wFood4 
 2.048  1.240  0.392  0.179 

Marshallian (uncompensated) Price Elasticities
        pFood1  pFood2  pFood3 pFood4
wFood1 -0.4507 -0.5953 -0.3172 -0.684
wFood2 -0.6687 -0.2376 -0.0359 -0.298
wFood3 -0.2204  0.1173 -0.7378  0.449
wFood4 -0.0196  0.0459  0.1984 -0.404

Hicksian (compensated) Price Elasticities
        pFood1  pFood2  pFood3  pFood4
wFood1  0.1848 -0.1851 -0.0425  0.0431
wFood2 -0.2838  0.0109  0.1304  0.1426
wFood3 -0.0987  0.1959 -0.6852  0.5881
wFood4  0.0360  0.0817  0.2224 -0.3400
> print( elas( estResultLaLsNa, method = "AIDS", quantNames = wNames ) )

Demand Elasticities (original AIDS formulas)
Expenditure Elasticities
wFood1 wFood2 wFood3 wFood4 
 2.040  1.237  0.389  0.170 

Marshallian (uncompensated) Price Elasticities
        pFood1  pFood2  pFood3 pFood4
wFood1 -0.4545 -0.5912 -0.3150 -0.680
wFood2 -0.6615 -0.2457 -0.0355 -0.295
wFood3 -0.2215  0.1179 -0.7365  0.451
wFood4 -0.0198  0.0463  0.2005 -0.397

Hicksian (compensated) Price Elasticities
        pFood1   pFood2  pFood3  pFood4
wFood1  0.1831 -0.17805 -0.0427  0.0376
wFood2 -0.2748  0.00486  0.1296  0.1403
wFood3 -0.0999  0.19668 -0.6846  0.5878
wFood4  0.0334  0.08082  0.2232 -0.3374
Warning message:
In aidsPx(priceIndex, priceNames, data = data, coef = coef, base = list(shares = baseShares)) :
  the base expenditure shares specified by element 'shares' of argument 'base' do not sum up to 1 (deviation from 1 = 0.001)
> 
> estResultAIDSNa <- aidsEst( pNames, wNames, "xFood",
+    data = Blanciforti86, method = "IL" )
Warning message:
In aidsEst(pNames, wNames, "xFood", data = Blanciforti86, method = "IL") :
  there are some NAs in the data, all observations (rows) with NAs are excluded from the analysis
> print( estResultAIDSNa )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: 'Iterated Linear Least Squares Estimator' (IL)
(starting with simplified Laspeyres Index, Ls)
Coefficients:
alpha_0
0 
alpha
wFood1 wFood2 wFood3 wFood4 
-0.259  0.124  0.273  0.862 
beta
 wFood1  wFood2  wFood3  wFood4 
 0.3306  0.0469 -0.0811 -0.2964 
gamma
        pFood1   pFood2   pFood3   pFood4
wFood1 -0.0855 -0.16994  0.03469  0.22072
wFood2 -0.1699  0.15613  0.01104  0.00277
wFood3  0.0347  0.01104  0.00134 -0.04707
wFood4  0.2207  0.00277 -0.04707 -0.17643
> nobs( estResultAIDSNa )
[1] 96
> print( summary( estResultAIDSNa ) )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: 'Iterated Linear Least Squares Estimator' (IL)
(starting with simplified Laspeyres Index, Ls)
Estimated Coefficients:
          Estimate Std. Error t value Pr(>|t|)    
alpha 1   -0.25917    0.07044   -3.68  0.00041 ***
alpha 2    0.12447    0.08302    1.50  0.13753    
alpha 3    0.27264    0.05387    5.06  2.4e-06 ***
alpha 4    0.86207    0.12819    6.73  2.0e-09 ***
beta 1     0.33056    0.04118    8.03  5.3e-12 ***
beta 2     0.04695    0.04806    0.98  0.33144    
beta 3    -0.08111    0.03113   -2.61  0.01085 *  
beta 4    -0.29641    0.07471   -3.97  0.00015 ***
gamma 1 1 -0.08547    0.04334   -1.97  0.05189 .  
gamma 1 2 -0.16994    0.02480   -6.85  1.1e-09 ***
gamma 1 3  0.03469    0.02104    1.65  0.10295    
gamma 1 4  0.22072    0.05696    3.87  0.00021 ***
gamma 2 1 -0.16994    0.02480   -6.85  1.1e-09 ***
gamma 2 2  0.15613    0.04110    3.80  0.00027 ***
gamma 2 3  0.01104    0.02562    0.43  0.66766    
gamma 2 4  0.00277    0.04850    0.06  0.95454    
gamma 3 1  0.03469    0.02104    1.65  0.10295    
gamma 3 2  0.01104    0.02562    0.43  0.66766    
gamma 3 3  0.00134    0.02182    0.06  0.95120    
gamma 3 4 -0.04707    0.02325   -2.02  0.04609 *  
gamma 4 1  0.22072    0.05696    3.87  0.00021 ***
gamma 4 2  0.00277    0.04850    0.06  0.95454    
gamma 4 3 -0.04707    0.02325   -2.02  0.04609 *  
gamma 4 4 -0.17643    0.09821   -1.80  0.07603 .  
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
R-squared Values of expenditure shares:
wFood1 wFood2 wFood3 wFood4 
 0.636  0.830  0.415  0.651 
R-squared Values of quantities:
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   0.936    0.845    0.679    0.627 
> print( elas( estResultAIDSNa, method = "AIDS", quantNames = wNames,
+    observedShares = TRUE ) )

Demand Elasticities (original AIDS formulas)
Expenditure Elasticities
wFood1 wFood2 wFood3 wFood4 
 2.065  1.234  0.395  0.166 

Marshallian (uncompensated) Price Elasticities
       pFood1 pFood2   pFood3 pFood4
wFood1 -1.012 -0.678 -0.17676 -0.198
wFood2 -0.790 -0.250 -0.00839 -0.186
wFood3  0.109  0.157 -0.82620  0.165
wFood4  0.415  0.110  0.09354 -0.784

Hicksian (compensated) Price Elasticities
       pFood1   pFood2 pFood3 pFood4
wFood1 -0.371 -0.26473  0.100  0.535
wFood2 -0.407 -0.00221  0.157  0.252
wFood3  0.232  0.23583 -0.773  0.306
wFood4  0.466  0.14356  0.116 -0.725
> print( elas( estResultAIDSNa, method = "AIDS", quantNames = wNames ) )

Demand Elasticities (original AIDS formulas)
Expenditure Elasticities
wFood1 wFood2 wFood3 wFood4 
 2.058  1.232  0.392  0.157 

Marshallian (uncompensated) Price Elasticities
       pFood1 pFood2  pFood3 pFood4
wFood1 -1.012 -0.674 -0.1756 -0.197
wFood2 -0.782 -0.257 -0.0083 -0.184
wFood3  0.109  0.157 -0.8254  0.166
wFood4  0.419  0.112  0.0945 -0.782

Hicksian (compensated) Price Elasticities
       pFood1   pFood2  pFood3 pFood4
wFood1 -0.369 -0.25723  0.0991  0.527
wFood2 -0.397 -0.00797  0.1561  0.249
wFood3  0.232  0.23683 -0.7730  0.304
wFood4  0.468  0.14330  0.1155 -0.727
> 
> 
> ########## Elasticities ###############
> cat( "\nAIDS: Elasticities\n" )

AIDS: Elasticities
> ela <- aidsElas( estResultAIDS$coef, shares = wMeans, prices = pMeans, method = "AIDS",
+    coefCov = vcov( estResultAIDS ), df = df.residual( estResultAIDS ) )
> print( ela )

Demand Elasticities (original AIDS formulas)
Expenditure Elasticities
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   2.056    1.297    0.458    0.115 

Marshallian (uncompensated) Price Elasticities
          pFood1  pFood2  pFood3 pFood4
q_wFood1 -0.9954 -0.6622 -0.1731 -0.225
q_wFood2 -0.7867 -0.2738 -0.0607 -0.176
q_wFood3  0.0954  0.0787 -0.8180  0.186
q_wFood4  0.4036  0.1392  0.1168 -0.774

Hicksian (compensated) Price Elasticities
         pFood1  pFood2 pFood3 pFood4
q_wFood1 -0.357 -0.2503  0.103  0.505
q_wFood2 -0.384 -0.0139  0.113  0.285
q_wFood3  0.237  0.1704 -0.757  0.349
q_wFood4  0.439  0.1623  0.132 -0.734
> print( summary( ela ) )
                   Estimate Std. Error t value Pr(>|t|)    
Ex q_wFood1          2.0557     0.1262   16.29  < 2e-16 ***
Ex q_wFood2          1.2971     0.2141    6.06  4.1e-08 ***
Ex q_wFood3          0.4575     0.2073    2.21   0.0302 *  
Ex q_wFood4          0.1149     0.1748    0.66   0.5130    
Eh q_wFood1 pFood1  -0.3573     0.0639   -5.59  2.9e-07 ***
Eh q_wFood1 pFood2  -0.2503     0.0500   -5.00  3.2e-06 ***
Eh q_wFood1 pFood3   0.1026     0.0341    3.01   0.0035 ** 
Eh q_wFood1 pFood4   0.5052     0.0693    7.29  1.9e-10 ***
Eh q_wFood2 pFood1  -0.3841     0.0772   -4.98  3.6e-06 ***
Eh q_wFood2 pFood2  -0.0139     0.1684   -0.08   0.9343    
Eh q_wFood2 pFood3   0.1133     0.1142    0.99   0.3243    
Eh q_wFood2 pFood4   0.2849     0.1242    2.29   0.0244 *  
Eh q_wFood3 pFood1   0.2374     0.0787    3.02   0.0034 ** 
Eh q_wFood3 pFood2   0.1704     0.1708    1.00   0.3214    
Eh q_wFood3 pFood3  -0.7566     0.1460   -5.18  1.6e-06 ***
Eh q_wFood3 pFood4   0.3488     0.1057    3.30   0.0014 ** 
Eh q_wFood4 pFood1   0.4392     0.0605    7.26  2.1e-10 ***
Eh q_wFood4 pFood2   0.1623     0.0701    2.31   0.0232 *  
Eh q_wFood4 pFood3   0.1322     0.0399    3.31   0.0014 ** 
Eh q_wFood4 pFood4  -0.7337     0.1048   -7.00  6.7e-10 ***
Em q_wFood1 pFood1  -0.9954     0.0614  -16.22  < 2e-16 ***
Em q_wFood1 pFood2  -0.6622     0.0615  -10.76  < 2e-16 ***
Em q_wFood1 pFood3  -0.1731     0.0402   -4.30  4.7e-05 ***
Em q_wFood1 pFood4  -0.2251     0.0857   -2.63   0.0103 *  
Em q_wFood2 pFood1  -0.7867     0.0741  -10.62  < 2e-16 ***
Em q_wFood2 pFood2  -0.2738     0.1955   -1.40   0.1651    
Em q_wFood2 pFood3  -0.0607     0.1163   -0.52   0.6032    
Em q_wFood2 pFood4  -0.1759     0.1160   -1.52   0.1331    
Em q_wFood3 pFood1   0.0954     0.0955    1.00   0.3206    
Em q_wFood3 pFood2   0.0787     0.1952    0.40   0.6877    
Em q_wFood3 pFood3  -0.8180     0.1420   -5.76  1.4e-07 ***
Em q_wFood3 pFood4   0.1863     0.1017    1.83   0.0706 .  
Em q_wFood4 pFood1   0.4036     0.0753    5.36  7.8e-07 ***
Em q_wFood4 pFood2   0.1392     0.0901    1.55   0.1260    
Em q_wFood4 pFood3   0.1168     0.0524    2.23   0.0287 *  
Em q_wFood4 pFood4  -0.7745     0.1040   -7.45  9.0e-11 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> elaTX <- aidsElas( estResultAIDSTX$coef, shares = wMeans, prices = pMeans, method = "AIDS",
+    coefCov = vcov( estResultAIDSTX ), df = df.residual( estResultAIDSTX ) )
> print( elaTX )

Demand Elasticities (original AIDS formulas)
Expenditure Elasticities
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   2.056    1.297    0.458    0.115 

Marshallian (uncompensated) Price Elasticities
          pFood1  pFood2  pFood3 pFood4
q_wFood1 -0.9954 -0.6622 -0.1731 -0.225
q_wFood2 -0.7867 -0.2738 -0.0607 -0.176
q_wFood3  0.0954  0.0787 -0.8180  0.186
q_wFood4  0.4036  0.1392  0.1168 -0.774

Hicksian (compensated) Price Elasticities
         pFood1  pFood2 pFood3 pFood4
q_wFood1 -0.357 -0.2503  0.103  0.505
q_wFood2 -0.384 -0.0139  0.113  0.285
q_wFood3  0.237  0.1704 -0.757  0.349
q_wFood4  0.439  0.1623  0.132 -0.734
> print( summary( elaTX ) )
                   Estimate Std. Error t value Pr(>|t|)    
Ex q_wFood1          2.0557     0.1262   16.29  < 2e-16 ***
Ex q_wFood2          1.2971     0.2141    6.06  4.1e-08 ***
Ex q_wFood3          0.4575     0.2073    2.21   0.0302 *  
Ex q_wFood4          0.1149     0.1748    0.66   0.5130    
Eh q_wFood1 pFood1  -0.3573     0.0639   -5.59  2.9e-07 ***
Eh q_wFood1 pFood2  -0.2503     0.0500   -5.00  3.2e-06 ***
Eh q_wFood1 pFood3   0.1026     0.0341    3.01   0.0035 ** 
Eh q_wFood1 pFood4   0.5052     0.0693    7.29  1.9e-10 ***
Eh q_wFood2 pFood1  -0.3841     0.0772   -4.98  3.6e-06 ***
Eh q_wFood2 pFood2  -0.0139     0.1684   -0.08   0.9343    
Eh q_wFood2 pFood3   0.1133     0.1142    0.99   0.3243    
Eh q_wFood2 pFood4   0.2849     0.1242    2.29   0.0244 *  
Eh q_wFood3 pFood1   0.2374     0.0787    3.02   0.0034 ** 
Eh q_wFood3 pFood2   0.1704     0.1708    1.00   0.3214    
Eh q_wFood3 pFood3  -0.7566     0.1460   -5.18  1.6e-06 ***
Eh q_wFood3 pFood4   0.3488     0.1057    3.30   0.0014 ** 
Eh q_wFood4 pFood1   0.4392     0.0605    7.26  2.1e-10 ***
Eh q_wFood4 pFood2   0.1623     0.0701    2.31   0.0232 *  
Eh q_wFood4 pFood3   0.1322     0.0399    3.31   0.0014 ** 
Eh q_wFood4 pFood4  -0.7337     0.1048   -7.00  6.7e-10 ***
Em q_wFood1 pFood1  -0.9954     0.0614  -16.22  < 2e-16 ***
Em q_wFood1 pFood2  -0.6622     0.0615  -10.76  < 2e-16 ***
Em q_wFood1 pFood3  -0.1731     0.0402   -4.30  4.7e-05 ***
Em q_wFood1 pFood4  -0.2251     0.0857   -2.63   0.0103 *  
Em q_wFood2 pFood1  -0.7867     0.0741  -10.62  < 2e-16 ***
Em q_wFood2 pFood2  -0.2738     0.1955   -1.40   0.1651    
Em q_wFood2 pFood3  -0.0607     0.1163   -0.52   0.6032    
Em q_wFood2 pFood4  -0.1759     0.1160   -1.52   0.1331    
Em q_wFood3 pFood1   0.0954     0.0955    1.00   0.3206    
Em q_wFood3 pFood2   0.0787     0.1952    0.40   0.6877    
Em q_wFood3 pFood3  -0.8180     0.1420   -5.76  1.4e-07 ***
Em q_wFood3 pFood4   0.1863     0.1017    1.83   0.0706 .  
Em q_wFood4 pFood1   0.4036     0.0753    5.36  7.8e-07 ***
Em q_wFood4 pFood2   0.1392     0.0901    1.55   0.1260    
Em q_wFood4 pFood3   0.1168     0.0524    2.23   0.0287 *  
Em q_wFood4 pFood4  -0.7745     0.1040   -7.45  9.0e-11 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> print( all.equal( ela, elaTX ) )
[1] TRUE
> 
> print( elas( estResultAIDS, observedShares = TRUE ) )

Demand Elasticities (original AIDS formulas)
Expenditure Elasticities
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   2.054    1.296    0.458    0.112 

Marshallian (uncompensated) Price Elasticities
          pFood1  pFood2  pFood3 pFood4
q_wFood1 -0.9955 -0.6616 -0.1729 -0.224
q_wFood2 -0.7831 -0.2772 -0.0604 -0.175
q_wFood3  0.0955  0.0789 -0.8180  0.186
q_wFood4  0.4052  0.1401  0.1172 -0.774

Hicksian (compensated) Price Elasticities
         pFood1  pFood2 pFood3 pFood4
q_wFood1 -0.357 -0.2482  0.103  0.503
q_wFood2 -0.380 -0.0164  0.113  0.284
q_wFood3  0.238  0.1710 -0.757  0.348
q_wFood4  0.440  0.1625  0.132 -0.734
> print( elas( estResultAIDS ) )

Demand Elasticities (original AIDS formulas)
Expenditure Elasticities
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   2.047    1.293    0.455    0.102 

Marshallian (uncompensated) Price Elasticities
          pFood1  pFood2  pFood3 pFood4
q_wFood1 -0.9955 -0.6571 -0.1717 -0.223
q_wFood2 -0.7750 -0.2847 -0.0598 -0.173
q_wFood3  0.0959  0.0793 -0.8172  0.187
q_wFood4  0.4095  0.1415  0.1184 -0.772

Hicksian (compensated) Price Elasticities
         pFood1  pFood2 pFood3 pFood4
q_wFood1 -0.355 -0.2408  0.102  0.494
q_wFood2 -0.371 -0.0218  0.113  0.279
q_wFood3  0.238  0.1718 -0.756  0.346
q_wFood4  0.441  0.1623  0.132 -0.736
> print( summary( elas( estResultAIDS, observedShares = TRUE ) ) )
                   Estimate Std. Error t value Pr(>|t|)    
Ex q_wFood1          2.0544     0.1260   16.30  < 2e-16 ***
Ex q_wFood2          1.2958     0.2131    6.08  3.8e-08 ***
Ex q_wFood3          0.4575     0.2073    2.21   0.0301 *  
Ex q_wFood4          0.1115     0.1755    0.64   0.5270    
Eh q_wFood1 pFood1  -0.3570     0.0638   -5.59  2.9e-07 ***
Eh q_wFood1 pFood2  -0.2482     0.0500   -4.97  3.7e-06 ***
Eh q_wFood1 pFood3   0.1027     0.0341    3.01   0.0035 ** 
Eh q_wFood1 pFood4   0.5027     0.0693    7.26  2.1e-10 ***
Eh q_wFood2 pFood1  -0.3804     0.0769   -4.95  4.0e-06 ***
Eh q_wFood2 pFood2  -0.0164     0.1676   -0.10   0.9223    
Eh q_wFood2 pFood3   0.1134     0.1137    1.00   0.3217    
Eh q_wFood2 pFood4   0.2835     0.1235    2.30   0.0243 *  
Eh q_wFood3 pFood1   0.2376     0.0787    3.02   0.0034 ** 
Eh q_wFood3 pFood2   0.1710     0.1708    1.00   0.3196    
Eh q_wFood3 pFood3  -0.7566     0.1460   -5.18  1.6e-06 ***
Eh q_wFood3 pFood4   0.3480     0.1056    3.29   0.0015 ** 
Eh q_wFood4 pFood1   0.4398     0.0608    7.24  2.3e-10 ***
Eh q_wFood4 pFood2   0.1625     0.0704    2.31   0.0235 *  
Eh q_wFood4 pFood3   0.1321     0.0401    3.30   0.0014 ** 
Eh q_wFood4 pFood4  -0.7345     0.1051   -6.99  7.2e-10 ***
Em q_wFood1 pFood1  -0.9955     0.0613  -16.23  < 2e-16 ***
Em q_wFood1 pFood2  -0.6616     0.0615  -10.76  < 2e-16 ***
Em q_wFood1 pFood3  -0.1729     0.0402   -4.30  4.7e-05 ***
Em q_wFood1 pFood4  -0.2244     0.0855   -2.62   0.0104 *  
Em q_wFood2 pFood1  -0.7831     0.0738  -10.62  < 2e-16 ***
Em q_wFood2 pFood2  -0.2772     0.1946   -1.42   0.1583    
Em q_wFood2 pFood3  -0.0604     0.1158   -0.52   0.6033    
Em q_wFood2 pFood4  -0.1750     0.1154   -1.52   0.1333    
Em q_wFood3 pFood1   0.0955     0.0955    1.00   0.3205    
Em q_wFood3 pFood2   0.0789     0.1952    0.40   0.6872    
Em q_wFood3 pFood3  -0.8180     0.1420   -5.76  1.5e-07 ***
Em q_wFood3 pFood4   0.1861     0.1017    1.83   0.0708 .  
Em q_wFood4 pFood1   0.4052     0.0756    5.36  7.8e-07 ***
Em q_wFood4 pFood2   0.1401     0.0905    1.55   0.1254    
Em q_wFood4 pFood3   0.1172     0.0526    2.23   0.0288 *  
Em q_wFood4 pFood4  -0.7739     0.1043   -7.42  1.0e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> print( summary( elas( estResultAIDS ) ) )
                   Estimate Std. Error t value Pr(>|t|)    
Ex q_wFood1          2.0472     0.1252   16.35  < 2e-16 ***
Ex q_wFood2          1.2927     0.2109    6.13  3.0e-08 ***
Ex q_wFood3          0.4551     0.2082    2.19   0.0317 *  
Ex q_wFood4          0.1021     0.1774    0.58   0.5666    
Eh q_wFood1 pFood1  -0.3549     0.0635   -5.59  3.0e-07 ***
Eh q_wFood1 pFood2  -0.2408     0.0496   -4.86  5.7e-06 ***
Eh q_wFood1 pFood3   0.1017     0.0339    3.00   0.0036 ** 
Eh q_wFood1 pFood4   0.4940     0.0688    7.18  3.1e-10 ***
Eh q_wFood2 pFood1  -0.3705     0.0763   -4.86  5.7e-06 ***
Eh q_wFood2 pFood2  -0.0218     0.1656   -0.13   0.8956    
Eh q_wFood2 pFood3   0.1128     0.1125    1.00   0.3189    
Eh q_wFood2 pFood4   0.2795     0.1219    2.29   0.0245 *  
Eh q_wFood3 pFood1   0.2383     0.0791    3.01   0.0035 ** 
Eh q_wFood3 pFood2   0.1718     0.1713    1.00   0.3188    
Eh q_wFood3 pFood3  -0.7564     0.1466   -5.16  1.7e-06 ***
Eh q_wFood3 pFood4   0.3463     0.1058    3.27   0.0016 ** 
Eh q_wFood4 pFood1   0.4414     0.0615    7.18  3.0e-10 ***
Eh q_wFood4 pFood2   0.1623     0.0710    2.29   0.0248 *  
Eh q_wFood4 pFood3   0.1321     0.0405    3.26   0.0016 ** 
Eh q_wFood4 pFood4  -0.7358     0.1061   -6.94  8.9e-10 ***
Em q_wFood1 pFood1  -0.9955     0.0609  -16.34  < 2e-16 ***
Em q_wFood1 pFood2  -0.6571     0.0611  -10.76  < 2e-16 ***
Em q_wFood1 pFood3  -0.1717     0.0399   -4.30  4.7e-05 ***
Em q_wFood1 pFood4  -0.2229     0.0850   -2.62   0.0104 *  
Em q_wFood2 pFood1  -0.7750     0.0730  -10.62  < 2e-16 ***
Em q_wFood2 pFood2  -0.2847     0.1926   -1.48   0.1433    
Em q_wFood2 pFood3  -0.0598     0.1146   -0.52   0.6033    
Em q_wFood2 pFood4  -0.1732     0.1142   -1.52   0.1333    
Em q_wFood3 pFood1   0.0959     0.0959    1.00   0.3205    
Em q_wFood3 pFood2   0.0793     0.1961    0.40   0.6872    
Em q_wFood3 pFood3  -0.8172     0.1426   -5.73  1.7e-07 ***
Em q_wFood3 pFood4   0.1869     0.1021    1.83   0.0708 .  
Em q_wFood4 pFood1   0.4095     0.0765    5.36  7.8e-07 ***
Em q_wFood4 pFood2   0.1415     0.0914    1.55   0.1254    
Em q_wFood4 pFood3   0.1184     0.0532    2.23   0.0288 *  
Em q_wFood4 pFood4  -0.7715     0.1054   -7.32  1.6e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> 
> print( elas( estResultAIDSTX, observedShares = TRUE ) )

Demand Elasticities (original AIDS formulas)
Expenditure Elasticities
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   2.054    1.296    0.458    0.112 

Marshallian (uncompensated) Price Elasticities
          pFood1  pFood2  pFood3 pFood4
q_wFood1 -0.9955 -0.6616 -0.1729 -0.224
q_wFood2 -0.7831 -0.2772 -0.0604 -0.175
q_wFood3  0.0955  0.0789 -0.8180  0.186
q_wFood4  0.4052  0.1401  0.1172 -0.774

Hicksian (compensated) Price Elasticities
         pFood1  pFood2 pFood3 pFood4
q_wFood1 -0.357 -0.2482  0.103  0.503
q_wFood2 -0.380 -0.0164  0.113  0.284
q_wFood3  0.238  0.1710 -0.757  0.348
q_wFood4  0.440  0.1625  0.132 -0.734
> print( elas( estResultAIDSTX ) )

Demand Elasticities (original AIDS formulas)
Expenditure Elasticities
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   2.047    1.293    0.455    0.102 

Marshallian (uncompensated) Price Elasticities
          pFood1  pFood2  pFood3 pFood4
q_wFood1 -0.9955 -0.6571 -0.1717 -0.223
q_wFood2 -0.7750 -0.2847 -0.0598 -0.173
q_wFood3  0.0959  0.0793 -0.8172  0.187
q_wFood4  0.4095  0.1415  0.1184 -0.772

Hicksian (compensated) Price Elasticities
         pFood1  pFood2 pFood3 pFood4
q_wFood1 -0.355 -0.2408  0.102  0.494
q_wFood2 -0.371 -0.0218  0.113  0.279
q_wFood3  0.238  0.1718 -0.756  0.346
q_wFood4  0.441  0.1623  0.132 -0.736
> print( summary( elas( estResultAIDSTX, observedShares = TRUE ) ) )
                   Estimate Std. Error t value Pr(>|t|)    
Ex q_wFood1          2.0544     0.1260   16.30  < 2e-16 ***
Ex q_wFood2          1.2958     0.2131    6.08  3.8e-08 ***
Ex q_wFood3          0.4575     0.2073    2.21   0.0301 *  
Ex q_wFood4          0.1115     0.1755    0.64   0.5270    
Eh q_wFood1 pFood1  -0.3570     0.0638   -5.59  2.9e-07 ***
Eh q_wFood1 pFood2  -0.2482     0.0500   -4.97  3.7e-06 ***
Eh q_wFood1 pFood3   0.1027     0.0341    3.01   0.0035 ** 
Eh q_wFood1 pFood4   0.5027     0.0693    7.26  2.1e-10 ***
Eh q_wFood2 pFood1  -0.3804     0.0769   -4.95  4.0e-06 ***
Eh q_wFood2 pFood2  -0.0164     0.1676   -0.10   0.9223    
Eh q_wFood2 pFood3   0.1134     0.1137    1.00   0.3217    
Eh q_wFood2 pFood4   0.2835     0.1235    2.30   0.0243 *  
Eh q_wFood3 pFood1   0.2376     0.0787    3.02   0.0034 ** 
Eh q_wFood3 pFood2   0.1710     0.1708    1.00   0.3196    
Eh q_wFood3 pFood3  -0.7566     0.1460   -5.18  1.6e-06 ***
Eh q_wFood3 pFood4   0.3480     0.1056    3.29   0.0015 ** 
Eh q_wFood4 pFood1   0.4398     0.0608    7.24  2.3e-10 ***
Eh q_wFood4 pFood2   0.1625     0.0704    2.31   0.0235 *  
Eh q_wFood4 pFood3   0.1321     0.0401    3.30   0.0014 ** 
Eh q_wFood4 pFood4  -0.7345     0.1051   -6.99  7.2e-10 ***
Em q_wFood1 pFood1  -0.9955     0.0613  -16.23  < 2e-16 ***
Em q_wFood1 pFood2  -0.6616     0.0615  -10.76  < 2e-16 ***
Em q_wFood1 pFood3  -0.1729     0.0402   -4.30  4.7e-05 ***
Em q_wFood1 pFood4  -0.2244     0.0855   -2.62   0.0104 *  
Em q_wFood2 pFood1  -0.7831     0.0738  -10.62  < 2e-16 ***
Em q_wFood2 pFood2  -0.2772     0.1946   -1.42   0.1583    
Em q_wFood2 pFood3  -0.0604     0.1158   -0.52   0.6033    
Em q_wFood2 pFood4  -0.1750     0.1154   -1.52   0.1333    
Em q_wFood3 pFood1   0.0955     0.0955    1.00   0.3205    
Em q_wFood3 pFood2   0.0789     0.1952    0.40   0.6872    
Em q_wFood3 pFood3  -0.8180     0.1420   -5.76  1.5e-07 ***
Em q_wFood3 pFood4   0.1861     0.1017    1.83   0.0708 .  
Em q_wFood4 pFood1   0.4052     0.0756    5.36  7.8e-07 ***
Em q_wFood4 pFood2   0.1401     0.0905    1.55   0.1254    
Em q_wFood4 pFood3   0.1172     0.0526    2.23   0.0288 *  
Em q_wFood4 pFood4  -0.7739     0.1043   -7.42  1.0e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> print( summary( elas( estResultAIDSTX ) ) )
                   Estimate Std. Error t value Pr(>|t|)    
Ex q_wFood1          2.0472     0.1252   16.35  < 2e-16 ***
Ex q_wFood2          1.2927     0.2109    6.13  3.0e-08 ***
Ex q_wFood3          0.4551     0.2082    2.19   0.0317 *  
Ex q_wFood4          0.1021     0.1774    0.58   0.5666    
Eh q_wFood1 pFood1  -0.3549     0.0635   -5.59  3.0e-07 ***
Eh q_wFood1 pFood2  -0.2408     0.0496   -4.86  5.7e-06 ***
Eh q_wFood1 pFood3   0.1017     0.0339    3.00   0.0036 ** 
Eh q_wFood1 pFood4   0.4940     0.0688    7.18  3.1e-10 ***
Eh q_wFood2 pFood1  -0.3705     0.0763   -4.86  5.7e-06 ***
Eh q_wFood2 pFood2  -0.0218     0.1656   -0.13   0.8956    
Eh q_wFood2 pFood3   0.1128     0.1125    1.00   0.3189    
Eh q_wFood2 pFood4   0.2795     0.1219    2.29   0.0245 *  
Eh q_wFood3 pFood1   0.2383     0.0791    3.01   0.0035 ** 
Eh q_wFood3 pFood2   0.1718     0.1713    1.00   0.3188    
Eh q_wFood3 pFood3  -0.7564     0.1466   -5.16  1.7e-06 ***
Eh q_wFood3 pFood4   0.3463     0.1058    3.27   0.0016 ** 
Eh q_wFood4 pFood1   0.4414     0.0615    7.18  3.0e-10 ***
Eh q_wFood4 pFood2   0.1623     0.0710    2.29   0.0248 *  
Eh q_wFood4 pFood3   0.1321     0.0405    3.26   0.0016 ** 
Eh q_wFood4 pFood4  -0.7358     0.1061   -6.94  8.9e-10 ***
Em q_wFood1 pFood1  -0.9955     0.0609  -16.34  < 2e-16 ***
Em q_wFood1 pFood2  -0.6571     0.0611  -10.76  < 2e-16 ***
Em q_wFood1 pFood3  -0.1717     0.0399   -4.30  4.7e-05 ***
Em q_wFood1 pFood4  -0.2229     0.0850   -2.62   0.0104 *  
Em q_wFood2 pFood1  -0.7750     0.0730  -10.62  < 2e-16 ***
Em q_wFood2 pFood2  -0.2847     0.1926   -1.48   0.1433    
Em q_wFood2 pFood3  -0.0598     0.1146   -0.52   0.6033    
Em q_wFood2 pFood4  -0.1732     0.1142   -1.52   0.1333    
Em q_wFood3 pFood1   0.0959     0.0959    1.00   0.3205    
Em q_wFood3 pFood2   0.0793     0.1961    0.40   0.6872    
Em q_wFood3 pFood3  -0.8172     0.1426   -5.73  1.7e-07 ***
Em q_wFood3 pFood4   0.1869     0.1021    1.83   0.0708 .  
Em q_wFood4 pFood1   0.4095     0.0765    5.36  7.8e-07 ***
Em q_wFood4 pFood2   0.1415     0.0914    1.55   0.1254    
Em q_wFood4 pFood3   0.1184     0.0532    2.23   0.0288 *  
Em q_wFood4 pFood4  -0.7715     0.1054   -7.32  1.6e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> 
> 
> cat( "\nLA: Elasticity formula of non-linear AIDS\n" )

LA: Elasticity formula of non-linear AIDS
> ela <- aidsElas( estResultLA$coef, shares = wMeans, prices = pMeans, method = "AIDS",
+    coefCov = vcov( estResultLA ), df = df.residual( estResultLA ) )
> print( ela )

Demand Elasticities (original AIDS formulas)
Expenditure Elasticities
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   2.059    1.279    0.443    0.128 

Marshallian (uncompensated) Price Elasticities
         pFood1  pFood2  pFood3 pFood4
q_wFood1 -0.377 -0.5595 -0.3157 -0.807
q_wFood2 -0.621 -0.2402 -0.0905 -0.328
q_wFood3 -0.229  0.0337 -0.7453  0.498
q_wFood4 -0.108  0.0476  0.2307 -0.298

Hicksian (compensated) Price Elasticities
          pFood1  pFood2  pFood3  pFood4
q_wFood1  0.2623 -0.1470 -0.0395 -0.0756
q_wFood2 -0.2240  0.0161  0.0811  0.1270
q_wFood3 -0.0915  0.1224 -0.6859  0.6550
q_wFood4 -0.0682  0.0732  0.2478 -0.2528
> print( summary( ela ) )
                   Estimate Std. Error t value Pr(>|t|)    
Ex q_wFood1          2.0591     0.1218   16.91  < 2e-16 ***
Ex q_wFood2          1.2793     0.1632    7.84  1.6e-11 ***
Ex q_wFood3          0.4427     0.1529    2.90  0.00485 ** 
Ex q_wFood4          0.1276     0.1284    0.99  0.32308    
Eh q_wFood1 pFood1   0.2623     0.1731    1.52  0.13353    
Eh q_wFood1 pFood2  -0.1470     0.0917   -1.60  0.11275    
Eh q_wFood1 pFood3  -0.0395     0.0672   -0.59  0.55832    
Eh q_wFood1 pFood4  -0.0756     0.1626   -0.46  0.64329    
Eh q_wFood2 pFood1  -0.2240     0.1419   -1.58  0.11830    
Eh q_wFood2 pFood2   0.0161     0.1336    0.12  0.90444    
Eh q_wFood2 pFood3   0.0811     0.0917    0.88  0.37905    
Eh q_wFood2 pFood4   0.1270     0.1297    0.98  0.33071    
Eh q_wFood3 pFood1  -0.0915     0.1555   -0.59  0.55791    
Eh q_wFood3 pFood2   0.1224     0.1370    0.89  0.37444    
Eh q_wFood3 pFood3  -0.6859     0.1413   -4.85  5.8e-06 ***
Eh q_wFood3 pFood4   0.6550     0.1302    5.03  2.9e-06 ***
Eh q_wFood4 pFood1  -0.0682     0.1423   -0.48  0.63293    
Eh q_wFood4 pFood2   0.0732     0.0732    1.00  0.32057    
Eh q_wFood4 pFood3   0.2478     0.0493    5.03  2.9e-06 ***
Eh q_wFood4 pFood4  -0.2528     0.1619   -1.56  0.12236    
Em q_wFood1 pFood1  -0.3768     0.1380   -2.73  0.00776 ** 
Em q_wFood1 pFood2  -0.5595     0.0959   -5.84  1.1e-07 ***
Em q_wFood1 pFood3  -0.3157     0.0770   -4.10  9.8e-05 ***
Em q_wFood1 pFood4  -0.8071     0.1977   -4.08  0.00010 ***
Em q_wFood2 pFood1  -0.6210     0.0992   -6.26  1.7e-08 ***
Em q_wFood2 pFood2  -0.2402     0.1463   -1.64  0.10458    
Em q_wFood2 pFood3  -0.0905     0.0980   -0.92  0.35867    
Em q_wFood2 pFood4  -0.3275     0.1690   -1.94  0.05613 .  
Em q_wFood3 pFood1  -0.2289     0.1159   -1.97  0.05173 .  
Em q_wFood3 pFood2   0.0337     0.1475    0.23  0.82004    
Em q_wFood3 pFood3  -0.7453     0.1489   -5.01  3.2e-06 ***
Em q_wFood3 pFood4   0.4978     0.1626    3.06  0.00299 ** 
Em q_wFood4 pFood1  -0.1078     0.1089   -0.99  0.32526    
Em q_wFood4 pFood2   0.0476     0.0677    0.70  0.48385    
Em q_wFood4 pFood3   0.2307     0.0585    3.94  0.00017 ***
Em q_wFood4 pFood4  -0.2981     0.2010   -1.48  0.14192    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> elaTX <- aidsElas( estResultLATX$coef, shares = wMeans, prices = pMeans, method = "AIDS",
+    coefCov = vcov( estResultLATX ), df = df.residual( estResultLATX ) )
> print( elaTX )

Demand Elasticities (original AIDS formulas)
Expenditure Elasticities
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   2.059    1.279    0.443    0.128 

Marshallian (uncompensated) Price Elasticities
         pFood1  pFood2  pFood3 pFood4
q_wFood1 -0.377 -0.5595 -0.3157 -0.807
q_wFood2 -0.621 -0.2402 -0.0905 -0.328
q_wFood3 -0.229  0.0337 -0.7453  0.498
q_wFood4 -0.108  0.0476  0.2307 -0.298

Hicksian (compensated) Price Elasticities
          pFood1  pFood2  pFood3  pFood4
q_wFood1  0.2623 -0.1470 -0.0395 -0.0756
q_wFood2 -0.2240  0.0161  0.0811  0.1270
q_wFood3 -0.0915  0.1224 -0.6859  0.6550
q_wFood4 -0.0682  0.0732  0.2478 -0.2528
> print( summary( elaTX ) )
                   Estimate Std. Error t value Pr(>|t|)    
Ex q_wFood1          2.0591     0.1218   16.91  < 2e-16 ***
Ex q_wFood2          1.2793     0.1632    7.84  1.6e-11 ***
Ex q_wFood3          0.4427     0.1529    2.90  0.00485 ** 
Ex q_wFood4          0.1276     0.1284    0.99  0.32308    
Eh q_wFood1 pFood1   0.2623     0.1731    1.52  0.13353    
Eh q_wFood1 pFood2  -0.1470     0.0917   -1.60  0.11275    
Eh q_wFood1 pFood3  -0.0395     0.0672   -0.59  0.55832    
Eh q_wFood1 pFood4  -0.0756     0.1626   -0.46  0.64329    
Eh q_wFood2 pFood1  -0.2240     0.1419   -1.58  0.11830    
Eh q_wFood2 pFood2   0.0161     0.1336    0.12  0.90444    
Eh q_wFood2 pFood3   0.0811     0.0917    0.88  0.37905    
Eh q_wFood2 pFood4   0.1270     0.1297    0.98  0.33071    
Eh q_wFood3 pFood1  -0.0915     0.1555   -0.59  0.55791    
Eh q_wFood3 pFood2   0.1224     0.1370    0.89  0.37444    
Eh q_wFood3 pFood3  -0.6859     0.1413   -4.85  5.8e-06 ***
Eh q_wFood3 pFood4   0.6550     0.1302    5.03  2.9e-06 ***
Eh q_wFood4 pFood1  -0.0682     0.1423   -0.48  0.63293    
Eh q_wFood4 pFood2   0.0732     0.0732    1.00  0.32057    
Eh q_wFood4 pFood3   0.2478     0.0493    5.03  2.9e-06 ***
Eh q_wFood4 pFood4  -0.2528     0.1619   -1.56  0.12236    
Em q_wFood1 pFood1  -0.3768     0.1380   -2.73  0.00776 ** 
Em q_wFood1 pFood2  -0.5595     0.0959   -5.84  1.1e-07 ***
Em q_wFood1 pFood3  -0.3157     0.0770   -4.10  9.8e-05 ***
Em q_wFood1 pFood4  -0.8071     0.1977   -4.08  0.00010 ***
Em q_wFood2 pFood1  -0.6210     0.0992   -6.26  1.7e-08 ***
Em q_wFood2 pFood2  -0.2402     0.1463   -1.64  0.10458    
Em q_wFood2 pFood3  -0.0905     0.0980   -0.92  0.35867    
Em q_wFood2 pFood4  -0.3275     0.1690   -1.94  0.05613 .  
Em q_wFood3 pFood1  -0.2289     0.1159   -1.97  0.05173 .  
Em q_wFood3 pFood2   0.0337     0.1475    0.23  0.82004    
Em q_wFood3 pFood3  -0.7453     0.1489   -5.01  3.2e-06 ***
Em q_wFood3 pFood4   0.4978     0.1626    3.06  0.00299 ** 
Em q_wFood4 pFood1  -0.1078     0.1089   -0.99  0.32526    
Em q_wFood4 pFood2   0.0476     0.0677    0.70  0.48385    
Em q_wFood4 pFood3   0.2307     0.0585    3.94  0.00017 ***
Em q_wFood4 pFood4  -0.2981     0.2010   -1.48  0.14192    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> print( all.equal( ela, elaTX ) )
[1] TRUE
> 
> print( elas( estResultLA, method = "AIDS", observedShares = TRUE ) )

Demand Elasticities (original AIDS formulas)
Expenditure Elasticities
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   2.058    1.278    0.443    0.124 

Marshallian (uncompensated) Price Elasticities
         pFood1  pFood2  pFood3 pFood4
q_wFood1 -0.377 -0.5591 -0.3153 -0.806
q_wFood2 -0.618 -0.2437 -0.0901 -0.326
q_wFood3 -0.229  0.0338 -0.7452  0.498
q_wFood4 -0.108  0.0480  0.2316 -0.295

Hicksian (compensated) Price Elasticities
          pFood1  pFood2  pFood3  pFood4
q_wFood1  0.2622 -0.1449 -0.0393 -0.0778
q_wFood2 -0.2210  0.0135  0.0813  0.1263
q_wFood3 -0.0914  0.1229 -0.6859  0.6544
q_wFood4 -0.0698  0.0731  0.2483 -0.2515
> print( elas( estResultLA, method = "AIDS" ) )

Demand Elasticities (original AIDS formulas)
Expenditure Elasticities
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   2.049    1.275    0.440    0.114 

Marshallian (uncompensated) Price Elasticities
         pFood1  pFood2  pFood3 pFood4
q_wFood1 -0.382 -0.5547 -0.3129 -0.800
q_wFood2 -0.612 -0.2517 -0.0892 -0.323
q_wFood3 -0.230  0.0340 -0.7440  0.500
q_wFood4 -0.110  0.0486  0.2342 -0.287

Hicksian (compensated) Price Elasticities
          pFood1   pFood2  pFood3  pFood4
q_wFood1  0.2597 -0.13786 -0.0394 -0.0825
q_wFood2 -0.2123  0.00768  0.0810  0.1236
q_wFood3 -0.0924  0.12346 -0.6852  0.6542
q_wFood4 -0.0739  0.07184  0.2495 -0.2475
> print( summary( elas( estResultLA, method = "AIDS", observedShares = TRUE ) ) )
                   Estimate Std. Error t value Pr(>|t|)    
Ex q_wFood1          2.0577     0.1216   16.92  < 2e-16 ***
Ex q_wFood2          1.2780     0.1625    7.87  1.4e-11 ***
Ex q_wFood3          0.4428     0.1529    2.90  0.00485 ** 
Ex q_wFood4          0.1243     0.1289    0.96  0.33757    
Eh q_wFood1 pFood1   0.2622     0.1730    1.52  0.13346    
Eh q_wFood1 pFood2  -0.1449     0.0916   -1.58  0.11739    
Eh q_wFood1 pFood3  -0.0393     0.0672   -0.59  0.55973    
Eh q_wFood1 pFood4  -0.0778     0.1626   -0.48  0.63374    
Eh q_wFood2 pFood1  -0.2210     0.1413   -1.56  0.12181    
Eh q_wFood2 pFood2   0.0135     0.1330    0.10  0.91951    
Eh q_wFood2 pFood3   0.0813     0.0913    0.89  0.37555    
Eh q_wFood2 pFood4   0.1263     0.1293    0.98  0.33149    
Eh q_wFood3 pFood1  -0.0914     0.1556   -0.59  0.55837    
Eh q_wFood3 pFood2   0.1229     0.1370    0.90  0.37226    
Eh q_wFood3 pFood3  -0.6859     0.1414   -4.85  5.8e-06 ***
Eh q_wFood3 pFood4   0.6544     0.1303    5.02  3.0e-06 ***
Eh q_wFood4 pFood1  -0.0698     0.1429   -0.49  0.62645    
Eh q_wFood4 pFood2   0.0731     0.0736    0.99  0.32354    
Eh q_wFood4 pFood3   0.2483     0.0494    5.02  3.0e-06 ***
Eh q_wFood4 pFood4  -0.2515     0.1627   -1.55  0.12598    
Em q_wFood1 pFood1  -0.3773     0.1379   -2.74  0.00762 ** 
Em q_wFood1 pFood2  -0.5591     0.0958   -5.84  1.1e-07 ***
Em q_wFood1 pFood3  -0.3153     0.0770   -4.10  9.8e-05 ***
Em q_wFood1 pFood4  -0.8060     0.1974   -4.08  0.00010 ***
Em q_wFood2 pFood1  -0.6182     0.0987   -6.26  1.7e-08 ***
Em q_wFood2 pFood2  -0.2437     0.1457   -1.67  0.09821 .  
Em q_wFood2 pFood3  -0.0901     0.0976   -0.92  0.35863    
Em q_wFood2 pFood4  -0.3260     0.1682   -1.94  0.05614 .  
Em q_wFood3 pFood1  -0.2290     0.1160   -1.97  0.05169 .  
Em q_wFood3 pFood2   0.0338     0.1475    0.23  0.81931    
Em q_wFood3 pFood3  -0.7452     0.1489   -5.01  3.2e-06 ***
Em q_wFood3 pFood4   0.4977     0.1626    3.06  0.00299 ** 
Em q_wFood4 pFood1  -0.1085     0.1094   -0.99  0.32447    
Em q_wFood4 pFood2   0.0480     0.0680    0.71  0.48173    
Em q_wFood4 pFood3   0.2316     0.0587    3.94  0.00017 ***
Em q_wFood4 pFood4  -0.2955     0.2018   -1.46  0.14693    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> print( summary( elas( estResultLA, method = "AIDS" ) ) )
                   Estimate Std. Error t value Pr(>|t|)    
Ex q_wFood1         2.04944    0.12066   16.98  < 2e-16 ***
Ex q_wFood2         1.27507    0.16078    7.93  1.0e-11 ***
Ex q_wFood3         0.43996    0.15363    2.86  0.00533 ** 
Ex q_wFood4         0.11438    0.13032    0.88  0.38273    
Eh q_wFood1 pFood1  0.25975    0.17188    1.51  0.13463    
Eh q_wFood1 pFood2 -0.13786    0.09085   -1.52  0.13304    
Eh q_wFood1 pFood3 -0.03936    0.06669   -0.59  0.55667    
Eh q_wFood1 pFood4 -0.08252    0.16167   -0.51  0.61113    
Eh q_wFood2 pFood1 -0.21230    0.14021   -1.51  0.13386    
Eh q_wFood2 pFood2  0.00768    0.13147    0.06  0.95356    
Eh q_wFood2 pFood3  0.08101    0.09032    0.90  0.37241    
Eh q_wFood2 pFood4  0.12361    0.12826    0.96  0.33805    
Eh q_wFood3 pFood1 -0.09238    0.15670   -0.59  0.55711    
Eh q_wFood3 pFood2  0.12346    0.13761    0.90  0.37227    
Eh q_wFood3 pFood3 -0.68525    0.14209   -4.82  6.5e-06 ***
Eh q_wFood3 pFood4  0.65417    0.13120    4.99  3.4e-06 ***
Eh q_wFood4 pFood1 -0.07386    0.14481   -0.51  0.61140    
Eh q_wFood4 pFood2  0.07184    0.07449    0.96  0.33768    
Eh q_wFood4 pFood3  0.24949    0.05005    4.99  3.5e-06 ***
Eh q_wFood4 pFood4 -0.24747    0.16493   -1.50  0.13739    
Em q_wFood1 pFood1 -0.38218    0.13679   -2.79  0.00650 ** 
Em q_wFood1 pFood2 -0.55470    0.09503   -5.84  1.1e-07 ***
Em q_wFood1 pFood3 -0.31288    0.07635   -4.10  9.8e-05 ***
Em q_wFood1 pFood4 -0.79969    0.19589   -4.08  0.00010 ***
Em q_wFood2 pFood1 -0.61167    0.09770   -6.26  1.7e-08 ***
Em q_wFood2 pFood2 -0.25166    0.14416   -1.75  0.08467 .  
Em q_wFood2 pFood3 -0.08915    0.09657   -0.92  0.35863    
Em q_wFood2 pFood4 -0.32258    0.16647   -1.94  0.05614 .  
Em q_wFood3 pFood1 -0.23019    0.11656   -1.97  0.05169 .  
Em q_wFood3 pFood2  0.03398    0.14827    0.23  0.81931    
Em q_wFood3 pFood3 -0.74396    0.14964   -4.97  3.6e-06 ***
Em q_wFood3 pFood4  0.50021    0.16342    3.06  0.00299 ** 
Em q_wFood4 pFood1 -0.10969    0.11065   -0.99  0.32447    
Em q_wFood4 pFood2  0.04858    0.06874    0.71  0.48173    
Em q_wFood4 pFood3  0.23422    0.05938    3.94  0.00017 ***
Em q_wFood4 pFood4 -0.28749    0.20405   -1.41  0.16269    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> 
> print( elas( estResultLATX, method = "AIDS", observedShares = TRUE ) )

Demand Elasticities (original AIDS formulas)
Expenditure Elasticities
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   2.058    1.278    0.443    0.124 

Marshallian (uncompensated) Price Elasticities
         pFood1  pFood2  pFood3 pFood4
q_wFood1 -0.377 -0.5591 -0.3153 -0.806
q_wFood2 -0.618 -0.2437 -0.0901 -0.326
q_wFood3 -0.229  0.0338 -0.7452  0.498
q_wFood4 -0.108  0.0480  0.2316 -0.295

Hicksian (compensated) Price Elasticities
          pFood1  pFood2  pFood3  pFood4
q_wFood1  0.2622 -0.1449 -0.0393 -0.0778
q_wFood2 -0.2210  0.0135  0.0813  0.1263
q_wFood3 -0.0914  0.1229 -0.6859  0.6544
q_wFood4 -0.0698  0.0731  0.2483 -0.2515
> print( elas( estResultLATX, method = "AIDS" ) )

Demand Elasticities (original AIDS formulas)
Expenditure Elasticities
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   2.049    1.275    0.440    0.114 

Marshallian (uncompensated) Price Elasticities
         pFood1  pFood2  pFood3 pFood4
q_wFood1 -0.382 -0.5547 -0.3129 -0.800
q_wFood2 -0.612 -0.2517 -0.0892 -0.323
q_wFood3 -0.230  0.0340 -0.7440  0.500
q_wFood4 -0.110  0.0486  0.2342 -0.287

Hicksian (compensated) Price Elasticities
          pFood1   pFood2  pFood3  pFood4
q_wFood1  0.2597 -0.13786 -0.0394 -0.0825
q_wFood2 -0.2123  0.00768  0.0810  0.1236
q_wFood3 -0.0924  0.12346 -0.6852  0.6542
q_wFood4 -0.0739  0.07184  0.2495 -0.2475
> print( summary( elas( estResultLATX, method = "AIDS", observedShares = TRUE ) ) )
                   Estimate Std. Error t value Pr(>|t|)    
Ex q_wFood1          2.0577     0.1216   16.92  < 2e-16 ***
Ex q_wFood2          1.2780     0.1625    7.87  1.4e-11 ***
Ex q_wFood3          0.4428     0.1529    2.90  0.00485 ** 
Ex q_wFood4          0.1243     0.1289    0.96  0.33757    
Eh q_wFood1 pFood1   0.2622     0.1730    1.52  0.13346    
Eh q_wFood1 pFood2  -0.1449     0.0916   -1.58  0.11739    
Eh q_wFood1 pFood3  -0.0393     0.0672   -0.59  0.55973    
Eh q_wFood1 pFood4  -0.0778     0.1626   -0.48  0.63374    
Eh q_wFood2 pFood1  -0.2210     0.1413   -1.56  0.12181    
Eh q_wFood2 pFood2   0.0135     0.1330    0.10  0.91951    
Eh q_wFood2 pFood3   0.0813     0.0913    0.89  0.37555    
Eh q_wFood2 pFood4   0.1263     0.1293    0.98  0.33149    
Eh q_wFood3 pFood1  -0.0914     0.1556   -0.59  0.55837    
Eh q_wFood3 pFood2   0.1229     0.1370    0.90  0.37226    
Eh q_wFood3 pFood3  -0.6859     0.1414   -4.85  5.8e-06 ***
Eh q_wFood3 pFood4   0.6544     0.1303    5.02  3.0e-06 ***
Eh q_wFood4 pFood1  -0.0698     0.1429   -0.49  0.62645    
Eh q_wFood4 pFood2   0.0731     0.0736    0.99  0.32354    
Eh q_wFood4 pFood3   0.2483     0.0494    5.02  3.0e-06 ***
Eh q_wFood4 pFood4  -0.2515     0.1627   -1.55  0.12598    
Em q_wFood1 pFood1  -0.3773     0.1379   -2.74  0.00762 ** 
Em q_wFood1 pFood2  -0.5591     0.0958   -5.84  1.1e-07 ***
Em q_wFood1 pFood3  -0.3153     0.0770   -4.10  9.8e-05 ***
Em q_wFood1 pFood4  -0.8060     0.1974   -4.08  0.00010 ***
Em q_wFood2 pFood1  -0.6182     0.0987   -6.26  1.7e-08 ***
Em q_wFood2 pFood2  -0.2437     0.1457   -1.67  0.09821 .  
Em q_wFood2 pFood3  -0.0901     0.0976   -0.92  0.35863    
Em q_wFood2 pFood4  -0.3260     0.1682   -1.94  0.05614 .  
Em q_wFood3 pFood1  -0.2290     0.1160   -1.97  0.05169 .  
Em q_wFood3 pFood2   0.0338     0.1475    0.23  0.81931    
Em q_wFood3 pFood3  -0.7452     0.1489   -5.01  3.2e-06 ***
Em q_wFood3 pFood4   0.4977     0.1626    3.06  0.00299 ** 
Em q_wFood4 pFood1  -0.1085     0.1094   -0.99  0.32447    
Em q_wFood4 pFood2   0.0480     0.0680    0.71  0.48173    
Em q_wFood4 pFood3   0.2316     0.0587    3.94  0.00017 ***
Em q_wFood4 pFood4  -0.2955     0.2018   -1.46  0.14693    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> print( summary( elas( estResultLATX, method = "AIDS" ) ) )
                   Estimate Std. Error t value Pr(>|t|)    
Ex q_wFood1         2.04944    0.12066   16.98  < 2e-16 ***
Ex q_wFood2         1.27507    0.16078    7.93  1.0e-11 ***
Ex q_wFood3         0.43996    0.15363    2.86  0.00533 ** 
Ex q_wFood4         0.11438    0.13032    0.88  0.38273    
Eh q_wFood1 pFood1  0.25975    0.17188    1.51  0.13463    
Eh q_wFood1 pFood2 -0.13786    0.09085   -1.52  0.13304    
Eh q_wFood1 pFood3 -0.03936    0.06669   -0.59  0.55667    
Eh q_wFood1 pFood4 -0.08252    0.16167   -0.51  0.61113    
Eh q_wFood2 pFood1 -0.21230    0.14021   -1.51  0.13386    
Eh q_wFood2 pFood2  0.00768    0.13147    0.06  0.95356    
Eh q_wFood2 pFood3  0.08101    0.09032    0.90  0.37241    
Eh q_wFood2 pFood4  0.12361    0.12826    0.96  0.33805    
Eh q_wFood3 pFood1 -0.09238    0.15670   -0.59  0.55711    
Eh q_wFood3 pFood2  0.12346    0.13761    0.90  0.37227    
Eh q_wFood3 pFood3 -0.68525    0.14209   -4.82  6.5e-06 ***
Eh q_wFood3 pFood4  0.65417    0.13120    4.99  3.4e-06 ***
Eh q_wFood4 pFood1 -0.07386    0.14481   -0.51  0.61140    
Eh q_wFood4 pFood2  0.07184    0.07449    0.96  0.33768    
Eh q_wFood4 pFood3  0.24949    0.05005    4.99  3.5e-06 ***
Eh q_wFood4 pFood4 -0.24747    0.16493   -1.50  0.13739    
Em q_wFood1 pFood1 -0.38218    0.13679   -2.79  0.00650 ** 
Em q_wFood1 pFood2 -0.55470    0.09503   -5.84  1.1e-07 ***
Em q_wFood1 pFood3 -0.31288    0.07635   -4.10  9.8e-05 ***
Em q_wFood1 pFood4 -0.79969    0.19589   -4.08  0.00010 ***
Em q_wFood2 pFood1 -0.61167    0.09770   -6.26  1.7e-08 ***
Em q_wFood2 pFood2 -0.25166    0.14416   -1.75  0.08467 .  
Em q_wFood2 pFood3 -0.08915    0.09657   -0.92  0.35863    
Em q_wFood2 pFood4 -0.32258    0.16647   -1.94  0.05614 .  
Em q_wFood3 pFood1 -0.23019    0.11656   -1.97  0.05169 .  
Em q_wFood3 pFood2  0.03398    0.14827    0.23  0.81931    
Em q_wFood3 pFood3 -0.74396    0.14964   -4.97  3.6e-06 ***
Em q_wFood3 pFood4  0.50021    0.16342    3.06  0.00299 ** 
Em q_wFood4 pFood1 -0.10969    0.11065   -0.99  0.32447    
Em q_wFood4 pFood2  0.04858    0.06874    0.71  0.48173    
Em q_wFood4 pFood3  0.23422    0.05938    3.94  0.00017 ***
Em q_wFood4 pFood4 -0.28749    0.20405   -1.41  0.16269    
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> 
> elas( estResultLaS, method = "AIDS" )

Demand Elasticities (original AIDS formulas)
Expenditure Elasticities
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   2.036    1.276    0.411    0.142 

Marshallian (uncompensated) Price Elasticities
          pFood1  pFood2  pFood3 pFood4
q_wFood1 -0.4140 -0.5576 -0.3152 -0.749
q_wFood2 -0.6231 -0.2548 -0.0569 -0.341
q_wFood3 -0.2306  0.0888 -0.7481  0.479
q_wFood4 -0.0748  0.0330  0.2178 -0.318

Hicksian (compensated) Price Elasticities
          pFood1  pFood2  pFood3 pFood4
q_wFood1  0.2228 -0.1452 -0.0436 -0.034
q_wFood2 -0.2241  0.0036  0.1133  0.107
q_wFood3 -0.1022  0.1720 -0.6933  0.623
q_wFood4 -0.0303  0.0619  0.2368 -0.268
> 
> elas( estResultLaSl, method = "AIDS" )

Demand Elasticities (original AIDS formulas)
Expenditure Elasticities
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   2.049    1.275    0.440    0.114 

Marshallian (uncompensated) Price Elasticities
         pFood1  pFood2  pFood3 pFood4
q_wFood1 -0.382 -0.5547 -0.3129 -0.800
q_wFood2 -0.612 -0.2517 -0.0892 -0.323
q_wFood3 -0.230  0.0340 -0.7440  0.500
q_wFood4 -0.110  0.0486  0.2342 -0.287

Hicksian (compensated) Price Elasticities
          pFood1   pFood2  pFood3  pFood4
q_wFood1  0.2597 -0.13786 -0.0394 -0.0825
q_wFood2 -0.2123  0.00768  0.0810  0.1236
q_wFood3 -0.0924  0.12346 -0.6852  0.6542
q_wFood4 -0.0739  0.07184  0.2495 -0.2475
> 
> elas( estResultLaP, method = "AIDS" )

Demand Elasticities (original AIDS formulas)
Expenditure Elasticities
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   2.047    1.252    0.409    0.147 

Marshallian (uncompensated) Price Elasticities
         pFood1  pFood2 pFood3 pFood4
q_wFood1  0.969 -0.3571 -0.648 -2.011
q_wFood2 -0.303 -0.1932 -0.131 -0.625
q_wFood3 -1.007 -0.0281 -0.561  1.187
q_wFood4 -1.195 -0.1366  0.486  0.699

Hicksian (compensated) Price Elasticities
          pFood1  pFood2  pFood3 pFood4
q_wFood1  1.6091  0.0575 -0.3753 -1.291
q_wFood2  0.0889  0.0604  0.0361 -0.185
q_wFood3 -0.8795  0.0548 -0.5065  1.331
q_wFood4 -1.1495 -0.1069  0.5056  0.751
> 
> elas( estResultLaL, method = "AIDS" )

Demand Elasticities (original AIDS formulas)
Expenditure Elasticities
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   2.040    1.237    0.389    0.170 

Marshallian (uncompensated) Price Elasticities
         pFood1    pFood2 pFood3 pFood4
q_wFood1  0.914 -0.388846 -0.658 -1.907
q_wFood2 -0.349 -0.199539 -0.114 -0.575
q_wFood3 -1.025 -0.000963 -0.535  1.172
q_wFood4 -1.111 -0.115085  0.474  0.582

Hicksian (compensated) Price Elasticities
          pFood1  pFood2  pFood3 pFood4
q_wFood1  1.5515  0.0243 -0.3859 -1.190
q_wFood2  0.0376  0.0511  0.0513 -0.140
q_wFood3 -0.9036  0.0778 -0.4830  1.309
q_wFood4 -1.0579 -0.0806  0.4969  0.642
Warning message:
In aidsPx(priceIndex, priceNames, data = data, coef = coef, base = list(prices = basePrices,  :
  the base expenditure shares specified by element 'shares' of argument 'base' do not sum up to 1 (deviation from 1 = 0.001)
> 
> elas( estResultLaLs, method = "AIDS" )

Demand Elasticities (original AIDS formulas)
Expenditure Elasticities
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   2.040    1.237    0.389    0.170 

Marshallian (uncompensated) Price Elasticities
          pFood1  pFood2  pFood3 pFood4
q_wFood1 -0.4545 -0.5912 -0.3150 -0.680
q_wFood2 -0.6615 -0.2457 -0.0355 -0.295
q_wFood3 -0.2215  0.1179 -0.7365  0.451
q_wFood4 -0.0198  0.0463  0.2005 -0.397

Hicksian (compensated) Price Elasticities
          pFood1   pFood2  pFood3  pFood4
q_wFood1  0.1831 -0.17805 -0.0427  0.0376
q_wFood2 -0.2748  0.00486  0.1296  0.1403
q_wFood3 -0.0999  0.19668 -0.6846  0.5878
q_wFood4  0.0334  0.08082  0.2232 -0.3374
Warning message:
In aidsPx(priceIndex, priceNames, data = data, coef = coef, base = list(shares = baseShares)) :
  the base expenditure shares specified by element 'shares' of argument 'base' do not sum up to 1 (deviation from 1 = 0.001)
> 
> elas( estResultLaT, method = "AIDS" )

Demand Elasticities (original AIDS formulas)
Expenditure Elasticities
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   2.045    1.245    0.399    0.157 

Marshallian (uncompensated) Price Elasticities
         pFood1 pFood2 pFood3 pFood4
q_wFood1  0.947 -0.373 -0.655 -1.964
q_wFood2 -0.326 -0.196 -0.123 -0.600
q_wFood3 -1.019 -0.015 -0.547  1.183
q_wFood4 -1.157 -0.126  0.481  0.644

Hicksian (compensated) Price Elasticities
          pFood1  pFood2  pFood3 pFood4
q_wFood1  1.5859  0.0411 -0.3818 -1.245
q_wFood2  0.0634  0.0559  0.0433 -0.163
q_wFood3 -0.8943  0.0658 -0.4942  1.323
q_wFood4 -1.1077 -0.0937  0.5023  0.699
> 
> cat( "\n********** Elasticities ***************" )

********** Elasticities ***************> cat( "\nLA: Elasticity formula of Goddard or Chalfant\n" )

LA: Elasticity formula of Goddard or Chalfant
> ela <- aidsElas( estResultLA$coef, shares = wMeans, method = "Go",
+    coefCov = vcov( estResultLA ), df = df.residual( estResultLA ),
+    priceIndex = "S" )
> print( ela )

Demand Elasticities (formulas of Goddard / Chalfant for Stone price index)
Expenditure Elasticities
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   2.059    1.279    0.443    0.128 

Marshallian (uncompensated) Price Elasticities
          pFood1  pFood2  pFood3 pFood4
q_wFood1 -0.9722 -0.6584 -0.1803 -0.248
q_wFood2 -0.7780 -0.2663 -0.0548 -0.180
q_wFood3  0.0844  0.0857 -0.8165  0.204
q_wFood4  0.3826  0.1291  0.1192 -0.758

Hicksian (compensated) Price Elasticities
         pFood1 pFood2  pFood3 pFood4
q_wFood1 -0.333 -0.246  0.0958  0.483
q_wFood2 -0.381 -0.010  0.1168  0.274
q_wFood3  0.222  0.174 -0.7571  0.361
q_wFood4  0.422  0.155  0.1363 -0.713
> print( summary( ela ) )
      Estimate Std. Error t value Pr(>|t|)
 [1,]   2.0591         NA      NA       NA
 [2,]   1.2793         NA      NA       NA
 [3,]   0.4427         NA      NA       NA
 [4,]   0.1276         NA      NA       NA
 [5,]  -0.3331         NA      NA       NA
 [6,]  -0.2459         NA      NA       NA
 [7,]   0.0958         NA      NA       NA
 [8,]   0.4833         NA      NA       NA
 [9,]  -0.3810         NA      NA       NA
[10,]  -0.0100         NA      NA       NA
[11,]   0.1168         NA      NA       NA
[12,]   0.2743         NA      NA       NA
[13,]   0.2218         NA      NA       NA
[14,]   0.1744         NA      NA       NA
[15,]  -0.7571         NA      NA       NA
[16,]   0.3610         NA      NA       NA
[17,]   0.4222         NA      NA       NA
[18,]   0.1547         NA      NA       NA
[19,]   0.1363         NA      NA       NA
[20,]  -0.7131         NA      NA       NA
[21,]  -0.9722         NA      NA       NA
[22,]  -0.6584         NA      NA       NA
[23,]  -0.1803         NA      NA       NA
[24,]  -0.2482         NA      NA       NA
[25,]  -0.7780         NA      NA       NA
[26,]  -0.2663         NA      NA       NA
[27,]  -0.0548         NA      NA       NA
[28,]  -0.1801         NA      NA       NA
[29,]   0.0844         NA      NA       NA
[30,]   0.0857         NA      NA       NA
[31,]  -0.8165         NA      NA       NA
[32,]   0.2037         NA      NA       NA
[33,]   0.3826         NA      NA       NA
[34,]   0.1291         NA      NA       NA
[35,]   0.1192         NA      NA       NA
[36,]  -0.7585         NA      NA       NA
> ela <- aidsElas( estResultLA$coef, shares = wMeans, method = "Ch",
+    coefCov = vcov( estResultLA ), df = df.residual( estResultLA ),
+    priceIndex = "S" )
> print( ela )

Demand Elasticities (formulas of Goddard / Chalfant for Stone price index)
Expenditure Elasticities
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   2.059    1.279    0.443    0.128 

Marshallian (uncompensated) Price Elasticities
          pFood1  pFood2  pFood3 pFood4
q_wFood1 -0.9722 -0.6584 -0.1803 -0.248
q_wFood2 -0.7780 -0.2663 -0.0548 -0.180
q_wFood3  0.0844  0.0857 -0.8165  0.204
q_wFood4  0.3826  0.1291  0.1192 -0.758

Hicksian (compensated) Price Elasticities
         pFood1 pFood2  pFood3 pFood4
q_wFood1 -0.333 -0.246  0.0958  0.483
q_wFood2 -0.381 -0.010  0.1168  0.274
q_wFood3  0.222  0.174 -0.7571  0.361
q_wFood4  0.422  0.155  0.1363 -0.713
> print( summary( ela ) )
      Estimate Std. Error t value Pr(>|t|)
 [1,]   2.0591         NA      NA       NA
 [2,]   1.2793         NA      NA       NA
 [3,]   0.4427         NA      NA       NA
 [4,]   0.1276         NA      NA       NA
 [5,]  -0.3331         NA      NA       NA
 [6,]  -0.2459         NA      NA       NA
 [7,]   0.0958         NA      NA       NA
 [8,]   0.4833         NA      NA       NA
 [9,]  -0.3810         NA      NA       NA
[10,]  -0.0100         NA      NA       NA
[11,]   0.1168         NA      NA       NA
[12,]   0.2743         NA      NA       NA
[13,]   0.2218         NA      NA       NA
[14,]   0.1744         NA      NA       NA
[15,]  -0.7571         NA      NA       NA
[16,]   0.3610         NA      NA       NA
[17,]   0.4222         NA      NA       NA
[18,]   0.1547         NA      NA       NA
[19,]   0.1363         NA      NA       NA
[20,]  -0.7131         NA      NA       NA
[21,]  -0.9722         NA      NA       NA
[22,]  -0.6584         NA      NA       NA
[23,]  -0.1803         NA      NA       NA
[24,]  -0.2482         NA      NA       NA
[25,]  -0.7780         NA      NA       NA
[26,]  -0.2663         NA      NA       NA
[27,]  -0.0548         NA      NA       NA
[28,]  -0.1801         NA      NA       NA
[29,]   0.0844         NA      NA       NA
[30,]   0.0857         NA      NA       NA
[31,]  -0.8165         NA      NA       NA
[32,]   0.2037         NA      NA       NA
[33,]   0.3826         NA      NA       NA
[34,]   0.1291         NA      NA       NA
[35,]   0.1192         NA      NA       NA
[36,]  -0.7585         NA      NA       NA
> 
> print( elas( estResultLA, method = "Go", observedShares = TRUE ) )

Demand Elasticities (formulas of Goddard / Chalfant for Stone price index)
Expenditure Elasticities
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   2.058    1.278    0.443    0.124 

Marshallian (uncompensated) Price Elasticities
          pFood1  pFood2  pFood3 pFood4
q_wFood1 -0.9726 -0.6586 -0.1801 -0.246
q_wFood2 -0.7746 -0.2699 -0.0546 -0.179
q_wFood3  0.0846  0.0862 -0.8165  0.203
q_wFood4  0.3844  0.1304  0.1196 -0.759

Hicksian (compensated) Price Elasticities
         pFood1  pFood2  pFood3 pFood4
q_wFood1 -0.333 -0.2444  0.0959  0.482
q_wFood2 -0.377 -0.0127  0.1169  0.273
q_wFood3  0.222  0.1753 -0.7571  0.360
q_wFood4  0.423  0.1554  0.1363 -0.715
> print( elas( estResultLA, method = "Go" ) )

Demand Elasticities (formulas of Goddard / Chalfant for Stone price index)
Expenditure Elasticities
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   2.049    1.275    0.440    0.114 

Marshallian (uncompensated) Price Elasticities
          pFood1  pFood2  pFood3 pFood4
q_wFood1 -0.9754 -0.6557 -0.1780 -0.240
q_wFood2 -0.7672 -0.2781 -0.0538 -0.176
q_wFood3  0.0864  0.0879 -0.8159  0.202
q_wFood4  0.3909  0.1338  0.1204 -0.759

Hicksian (compensated) Price Elasticities
         pFood1  pFood2  pFood3 pFood4
q_wFood1 -0.333 -0.2388  0.0955  0.477
q_wFood2 -0.368 -0.0188  0.1164  0.270
q_wFood3  0.224  0.1773 -0.7572  0.356
q_wFood4  0.427  0.1571  0.1357 -0.719
> print( summary( elas( estResultLA, observedShares = TRUE ) ) )
      Estimate Std. Error t value Pr(>|t|)
 [1,]   2.0577         NA      NA       NA
 [2,]   1.2780         NA      NA       NA
 [3,]   0.4428         NA      NA       NA
 [4,]   0.1243         NA      NA       NA
 [5,]  -0.3331         NA      NA       NA
 [6,]  -0.2444         NA      NA       NA
 [7,]   0.0959         NA      NA       NA
 [8,]   0.4818         NA      NA       NA
 [9,]  -0.3775         NA      NA       NA
[10,]  -0.0127         NA      NA       NA
[11,]   0.1169         NA      NA       NA
[12,]   0.2733         NA      NA       NA
[13,]   0.2222         NA      NA       NA
[14,]   0.1753         NA      NA       NA
[15,]  -0.7571         NA      NA       NA
[16,]   0.3596         NA      NA       NA
[17,]   0.4230         NA      NA       NA
[18,]   0.1554         NA      NA       NA
[19,]   0.1363         NA      NA       NA
[20,]  -0.7147         NA      NA       NA
[21,]  -0.9726         NA      NA       NA
[22,]  -0.6586         NA      NA       NA
[23,]  -0.1801         NA      NA       NA
[24,]  -0.2465         NA      NA       NA
[25,]  -0.7746         NA      NA       NA
[26,]  -0.2699         NA      NA       NA
[27,]  -0.0546         NA      NA       NA
[28,]  -0.1789         NA      NA       NA
[29,]   0.0846         NA      NA       NA
[30,]   0.0862         NA      NA       NA
[31,]  -0.8165         NA      NA       NA
[32,]   0.2029         NA      NA       NA
[33,]   0.3844         NA      NA       NA
[34,]   0.1304         NA      NA       NA
[35,]   0.1196         NA      NA       NA
[36,]  -0.7587         NA      NA       NA
> print( summary( elas( estResultLA ) ) )
      Estimate Std. Error t value Pr(>|t|)
 [1,]   2.0494         NA      NA       NA
 [2,]   1.2751         NA      NA       NA
 [3,]   0.4400         NA      NA       NA
 [4,]   0.1144         NA      NA       NA
 [5,]  -0.3335         NA      NA       NA
 [6,]  -0.2388         NA      NA       NA
 [7,]   0.0955         NA      NA       NA
 [8,]   0.4768         NA      NA       NA
 [9,]  -0.3678         NA      NA       NA
[10,]  -0.0188         NA      NA       NA
[11,]   0.1164         NA      NA       NA
[12,]   0.2702         NA      NA       NA
[13,]   0.2242         NA      NA       NA
[14,]   0.1773         NA      NA       NA
[15,]  -0.7572         NA      NA       NA
[16,]   0.3557         NA      NA       NA
[17,]   0.4268         NA      NA       NA
[18,]   0.1571         NA      NA       NA
[19,]   0.1357         NA      NA       NA
[20,]  -0.7195         NA      NA       NA
[21,]  -0.9754         NA      NA       NA
[22,]  -0.6557         NA      NA       NA
[23,]  -0.1780         NA      NA       NA
[24,]  -0.2404         NA      NA       NA
[25,]  -0.7672         NA      NA       NA
[26,]  -0.2781         NA      NA       NA
[27,]  -0.0538         NA      NA       NA
[28,]  -0.1760         NA      NA       NA
[29,]   0.0864         NA      NA       NA
[30,]   0.0879         NA      NA       NA
[31,]  -0.8159         NA      NA       NA
[32,]   0.2017         NA      NA       NA
[33,]   0.3909         NA      NA       NA
[34,]   0.1338         NA      NA       NA
[35,]   0.1204         NA      NA       NA
[36,]  -0.7595         NA      NA       NA
> 
> print( elas( estResultLATX, observedShares = TRUE ) )

Demand Elasticities (formulas of Goddard / Chalfant for Stone price index)
Expenditure Elasticities
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   2.058    1.278    0.443    0.124 

Marshallian (uncompensated) Price Elasticities
          pFood1  pFood2  pFood3 pFood4
q_wFood1 -0.9726 -0.6586 -0.1801 -0.246
q_wFood2 -0.7746 -0.2699 -0.0546 -0.179
q_wFood3  0.0846  0.0862 -0.8165  0.203
q_wFood4  0.3844  0.1304  0.1196 -0.759

Hicksian (compensated) Price Elasticities
         pFood1  pFood2  pFood3 pFood4
q_wFood1 -0.333 -0.2444  0.0959  0.482
q_wFood2 -0.377 -0.0127  0.1169  0.273
q_wFood3  0.222  0.1753 -0.7571  0.360
q_wFood4  0.423  0.1554  0.1363 -0.715
> print( elas( estResultLATX ) )

Demand Elasticities (formulas of Goddard / Chalfant for Stone price index)
Expenditure Elasticities
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   2.049    1.275    0.440    0.114 

Marshallian (uncompensated) Price Elasticities
          pFood1  pFood2  pFood3 pFood4
q_wFood1 -0.9754 -0.6557 -0.1780 -0.240
q_wFood2 -0.7672 -0.2781 -0.0538 -0.176
q_wFood3  0.0864  0.0879 -0.8159  0.202
q_wFood4  0.3909  0.1338  0.1204 -0.759

Hicksian (compensated) Price Elasticities
         pFood1  pFood2  pFood3 pFood4
q_wFood1 -0.333 -0.2388  0.0955  0.477
q_wFood2 -0.368 -0.0188  0.1164  0.270
q_wFood3  0.224  0.1773 -0.7572  0.356
q_wFood4  0.427  0.1571  0.1357 -0.719
> print( summary( elas( estResultLATX, observedShares = TRUE ) ) )
      Estimate Std. Error t value Pr(>|t|)
 [1,]   2.0577         NA      NA       NA
 [2,]   1.2780         NA      NA       NA
 [3,]   0.4428         NA      NA       NA
 [4,]   0.1243         NA      NA       NA
 [5,]  -0.3331         NA      NA       NA
 [6,]  -0.2444         NA      NA       NA
 [7,]   0.0959         NA      NA       NA
 [8,]   0.4818         NA      NA       NA
 [9,]  -0.3775         NA      NA       NA
[10,]  -0.0127         NA      NA       NA
[11,]   0.1169         NA      NA       NA
[12,]   0.2733         NA      NA       NA
[13,]   0.2222         NA      NA       NA
[14,]   0.1753         NA      NA       NA
[15,]  -0.7571         NA      NA       NA
[16,]   0.3596         NA      NA       NA
[17,]   0.4230         NA      NA       NA
[18,]   0.1554         NA      NA       NA
[19,]   0.1363         NA      NA       NA
[20,]  -0.7147         NA      NA       NA
[21,]  -0.9726         NA      NA       NA
[22,]  -0.6586         NA      NA       NA
[23,]  -0.1801         NA      NA       NA
[24,]  -0.2465         NA      NA       NA
[25,]  -0.7746         NA      NA       NA
[26,]  -0.2699         NA      NA       NA
[27,]  -0.0546         NA      NA       NA
[28,]  -0.1789         NA      NA       NA
[29,]   0.0846         NA      NA       NA
[30,]   0.0862         NA      NA       NA
[31,]  -0.8165         NA      NA       NA
[32,]   0.2029         NA      NA       NA
[33,]   0.3844         NA      NA       NA
[34,]   0.1304         NA      NA       NA
[35,]   0.1196         NA      NA       NA
[36,]  -0.7587         NA      NA       NA
> print( summary( elas( estResultLATX ) ) )
      Estimate Std. Error t value Pr(>|t|)
 [1,]   2.0494         NA      NA       NA
 [2,]   1.2751         NA      NA       NA
 [3,]   0.4400         NA      NA       NA
 [4,]   0.1144         NA      NA       NA
 [5,]  -0.3335         NA      NA       NA
 [6,]  -0.2388         NA      NA       NA
 [7,]   0.0955         NA      NA       NA
 [8,]   0.4768         NA      NA       NA
 [9,]  -0.3678         NA      NA       NA
[10,]  -0.0188         NA      NA       NA
[11,]   0.1164         NA      NA       NA
[12,]   0.2702         NA      NA       NA
[13,]   0.2242         NA      NA       NA
[14,]   0.1773         NA      NA       NA
[15,]  -0.7572         NA      NA       NA
[16,]   0.3557         NA      NA       NA
[17,]   0.4268         NA      NA       NA
[18,]   0.1571         NA      NA       NA
[19,]   0.1357         NA      NA       NA
[20,]  -0.7195         NA      NA       NA
[21,]  -0.9754         NA      NA       NA
[22,]  -0.6557         NA      NA       NA
[23,]  -0.1780         NA      NA       NA
[24,]  -0.2404         NA      NA       NA
[25,]  -0.7672         NA      NA       NA
[26,]  -0.2781         NA      NA       NA
[27,]  -0.0538         NA      NA       NA
[28,]  -0.1760         NA      NA       NA
[29,]   0.0864         NA      NA       NA
[30,]   0.0879         NA      NA       NA
[31,]  -0.8159         NA      NA       NA
[32,]   0.2017         NA      NA       NA
[33,]   0.3909         NA      NA       NA
[34,]   0.1338         NA      NA       NA
[35,]   0.1204         NA      NA       NA
[36,]  -0.7595         NA      NA       NA
> 
> elas( estResultLaS, method = "Go" )

Demand Elasticities (formulas of Goddard / Chalfant for Stone price index)
Expenditure Elasticities
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   2.036    1.276    0.411    0.142 

Marshallian (uncompensated) Price Elasticities
          pFood1 pFood2  pFood3 pFood4
q_wFood1 -0.9910 -0.657 -0.1752 -0.213
q_wFood2 -0.7767 -0.281 -0.0196 -0.198
q_wFood3  0.0977  0.145 -0.8278  0.174
q_wFood4  0.4029  0.115  0.1019 -0.763

Hicksian (compensated) Price Elasticities
         pFood1  pFood2  pFood3 pFood4
q_wFood1 -0.354 -0.2447  0.0965  0.502
q_wFood2 -0.378 -0.0229  0.1506  0.250
q_wFood3  0.226  0.2286 -0.7730  0.318
q_wFood4  0.447  0.1442  0.1209 -0.713
> 
> elas( estResultLaSl, method = "Go" )

Demand Elasticities (formulas of Goddard / Chalfant for Stone price index)
Expenditure Elasticities
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   2.049    1.275    0.440    0.114 

Marshallian (uncompensated) Price Elasticities
          pFood1  pFood2  pFood3 pFood4
q_wFood1 -0.9754 -0.6557 -0.1780 -0.240
q_wFood2 -0.7672 -0.2781 -0.0538 -0.176
q_wFood3  0.0864  0.0879 -0.8159  0.202
q_wFood4  0.3909  0.1338  0.1204 -0.759

Hicksian (compensated) Price Elasticities
         pFood1  pFood2  pFood3 pFood4
q_wFood1 -0.333 -0.2388  0.0955  0.477
q_wFood2 -0.368 -0.0188  0.1164  0.270
q_wFood3  0.224  0.1773 -0.7572  0.356
q_wFood4  0.427  0.1571  0.1357 -0.719
> 
> elas( estResultLaP, method = "Go" )

Demand Elasticities (formulas of Goddard / Chalfant for Paasche price index)
Expenditure Elasticities
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   2.047    1.252    0.409    0.147 

Marshallian (uncompensated) Price Elasticities
         pFood1 pFood2  pFood3 pFood4
q_wFood1 -1.006 -0.665 -0.1732 -0.203
q_wFood2 -0.779 -0.267 -0.0165 -0.190
q_wFood3  0.106  0.146 -0.8291  0.168
q_wFood4  0.413  0.114  0.0988 -0.774

Hicksian (compensated) Price Elasticities
         pFood1  pFood2 pFood3 pFood4
q_wFood1 -0.365 -0.2506  0.100  0.516
q_wFood2 -0.387 -0.0138  0.151  0.250
q_wFood3  0.234  0.2286 -0.775  0.312
q_wFood4  0.459  0.1442  0.118 -0.722
> 
> elas( estResultLaL, method = "Go" )

Demand Elasticities (formulas of Goddard / Chalfant for Laspeyres price index)
Expenditure Elasticities
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   2.040    1.237    0.389    0.170 

Marshallian (uncompensated) Price Elasticities
         pFood1  pFood2   pFood3 pFood4
q_wFood1  -1.02 -0.6452 -0.17023 -0.207
q_wFood2  -0.79 -0.2581 -0.00249 -0.187
q_wFood3   0.11  0.1496 -0.82154  0.174
q_wFood4   0.43  0.0894  0.08502 -0.774

Hicksian (compensated) Price Elasticities
         pFood1   pFood2 pFood3 pFood4
q_wFood1 -0.381 -0.23200  0.102  0.510
q_wFood2 -0.404 -0.00745  0.163  0.248
q_wFood3  0.231  0.22837 -0.770  0.310
q_wFood4  0.483  0.12385  0.108 -0.714
Warning message:
In aidsPx(priceIndex, priceNames, data = data, coef = coef, base = list(prices = basePrices,  :
  the base expenditure shares specified by element 'shares' of argument 'base' do not sum up to 1 (deviation from 1 = 0.001)
> 
> elas( estResultLaLs, method = "Go" )

Demand Elasticities (formulas of Goddard / Chalfant for Laspeyres price index)
Expenditure Elasticities
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   2.040    1.237    0.389    0.170 

Marshallian (uncompensated) Price Elasticities
         pFood1  pFood2   pFood3 pFood4
q_wFood1  -1.02 -0.6452 -0.17023 -0.207
q_wFood2  -0.79 -0.2581 -0.00249 -0.187
q_wFood3   0.11  0.1496 -0.82154  0.174
q_wFood4   0.43  0.0894  0.08502 -0.774

Hicksian (compensated) Price Elasticities
         pFood1   pFood2 pFood3 pFood4
q_wFood1 -0.381 -0.23200  0.102  0.510
q_wFood2 -0.404 -0.00745  0.163  0.248
q_wFood3  0.231  0.22837 -0.770  0.310
q_wFood4  0.483  0.12385  0.108 -0.714
Warning message:
In aidsPx(priceIndex, priceNames, data = data, coef = coef, base = list(shares = baseShares)) :
  the base expenditure shares specified by element 'shares' of argument 'base' do not sum up to 1 (deviation from 1 = 0.001)
> 
> elas( estResultLaT, method = "Go" )

Demand Elasticities (formulas of Goddard / Chalfant for Tornqvist price index)
Expenditure Elasticities
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   2.045    1.245    0.399    0.157 

Marshallian (uncompensated) Price Elasticities
         pFood1 pFood2  pFood3 pFood4
q_wFood1 -1.012 -0.656 -0.1720 -0.206
q_wFood2 -0.785 -0.262 -0.0097 -0.188
q_wFood3  0.108  0.148 -0.8251  0.171
q_wFood4  0.422  0.102  0.0922 -0.774

Hicksian (compensated) Price Elasticities
         pFood1  pFood2 pFood3 pFood4
q_wFood1 -0.373 -0.2415  0.101  0.513
q_wFood2 -0.396 -0.0103  0.156  0.249
q_wFood3  0.233  0.2283 -0.772  0.311
q_wFood4  0.471  0.1341  0.113 -0.718
> 
> cat( "\nLA: Elasticity formula of Eales + Unnevehr\n" )

LA: Elasticity formula of Eales + Unnevehr
> ela <- aidsElas( estResultLA$coef, shares = wMeans, method = "EU",
+    priceIndex = "S" )
> print( ela )

Demand Elasticities (formulas of Eales and Unnevehr)
Expenditure Elasticities
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   2.059    1.279    0.443    0.128 

Marshallian (uncompensated) Price Elasticities
          pFood1  pFood2   pFood3   pFood4
q_wFood1 -0.6435 -0.4463 -0.03828  0.12801
q_wFood2 -0.6914 -0.2103 -0.01735 -0.08094
q_wFood3 -0.0886 -0.0259 -0.89123  0.00573
q_wFood4  0.1118 -0.0456  0.00216 -1.06836

Hicksian (compensated) Price Elasticities
           pFood1  pFood2  pFood3 pFood4
q_wFood1 -0.00439 -0.0338  0.2379  0.859
q_wFood2 -0.29432  0.0459  0.1542  0.374
q_wFood3  0.04884  0.0628 -0.8318  0.163
q_wFood4  0.15146 -0.0201  0.0193 -1.023
> 
> elas( estResultLaS, method = "EU" )

Demand Elasticities (formulas of Eales and Unnevehr)
Expenditure Elasticities
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   2.036    1.276    0.411    0.142 

Marshallian (uncompensated) Price Elasticities
          pFood1  pFood2  pFood3 pFood4
q_wFood1 -0.6670 -0.4473 -0.0370  0.151
q_wFood2 -0.6905 -0.2255  0.0171 -0.101
q_wFood3 -0.0867  0.0260 -0.9064 -0.033
q_wFood4  0.1346 -0.0584 -0.0125 -1.064

Hicksian (compensated) Price Elasticities
          pFood1  pFood2   pFood3 pFood4
q_wFood1 -0.0302 -0.0348  0.23466  0.866
q_wFood2 -0.2915  0.0330  0.18735  0.347
q_wFood3  0.0418  0.1092 -0.85159  0.111
q_wFood4  0.1792 -0.0295  0.00647 -1.014
> 
> elas( estResultLaSl, method = "EU" )

Demand Elasticities (formulas of Eales and Unnevehr)
Expenditure Elasticities
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   2.049    1.275    0.440    0.114 

Marshallian (uncompensated) Price Elasticities
         pFood1  pFood2  pFood3   pFood4
q_wFood1 -0.647 -0.4422 -0.0379  0.12685
q_wFood2 -0.681 -0.2222 -0.0171 -0.07973
q_wFood3 -0.089 -0.0260 -0.8907  0.00576
q_wFood4  0.114 -0.0463  0.0022 -1.06940

Hicksian (compensated) Price Elasticities
           pFood1  pFood2  pFood3 pFood4
q_wFood1 -0.00478 -0.0254  0.2356  0.844
q_wFood2 -0.28164  0.0372  0.1531  0.366
q_wFood3  0.04878  0.0634 -0.8320  0.160
q_wFood4  0.14937 -0.0231  0.0175 -1.029
> 
> elas( estResultLaP, method = "EU" )

Demand Elasticities (formulas of Eales and Unnevehr)
Expenditure Elasticities
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   2.047    1.252    0.409    0.147 

Marshallian (uncompensated) Price Elasticities
          pFood1  pFood2  pFood3  pFood4
q_wFood1 -0.6782 -0.4532 -0.0335  0.1648
q_wFood2 -0.6997 -0.2163  0.0172 -0.1012
q_wFood3 -0.0784  0.0261 -0.9079 -0.0397
q_wFood4  0.1467 -0.0583 -0.0151 -1.0733

Hicksian (compensated) Price Elasticities
          pFood1  pFood2  pFood3 pFood4
q_wFood1 -0.0380 -0.0385  0.2397  0.884
q_wFood2 -0.3081  0.0373  0.1843  0.339
q_wFood3  0.0496  0.1090 -0.8533  0.104
q_wFood4  0.1926 -0.0286  0.0045 -1.022
> 
> elas( estResultLaL, method = "EU" )

Demand Elasticities (formulas of Eales and Unnevehr)
Expenditure Elasticities
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   2.040    1.237    0.389    0.170 

Marshallian (uncompensated) Price Elasticities
          pFood1  pFood2  pFood3  pFood4
q_wFood1 -0.7087 -0.4663 -0.0308  0.2058
q_wFood2 -0.7195 -0.2172  0.0293 -0.0926
q_wFood3 -0.0722  0.0445 -0.9034 -0.0689
q_wFood4  0.1829 -0.0533 -0.0262 -1.1034

Hicksian (compensated) Price Elasticities
          pFood1  pFood2   pFood3  pFood4
q_wFood1 -0.0710 -0.0531  0.24149  0.9230
q_wFood2 -0.3328  0.0334  0.19449  0.3424
q_wFood3  0.0494  0.1233 -0.85150  0.0678
q_wFood4  0.2361 -0.0189 -0.00344 -1.0436
Warning message:
In aidsPx(priceIndex, priceNames, data = data, coef = coef, base = list(prices = basePrices,  :
  the base expenditure shares specified by element 'shares' of argument 'base' do not sum up to 1 (deviation from 1 = 0.001)
> 
> elas( estResultLaLs, method = "EU" )

Demand Elasticities (formulas of Eales and Unnevehr)
Expenditure Elasticities
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   2.040    1.237    0.389    0.170 

Marshallian (uncompensated) Price Elasticities
          pFood1  pFood2  pFood3  pFood4
q_wFood1 -0.7087 -0.4663 -0.0308  0.2058
q_wFood2 -0.7195 -0.2172  0.0293 -0.0926
q_wFood3 -0.0722  0.0445 -0.9034 -0.0689
q_wFood4  0.1829 -0.0533 -0.0262 -1.1034

Hicksian (compensated) Price Elasticities
          pFood1  pFood2   pFood3  pFood4
q_wFood1 -0.0710 -0.0531  0.24149  0.9230
q_wFood2 -0.3328  0.0334  0.19449  0.3424
q_wFood3  0.0494  0.1233 -0.85150  0.0678
q_wFood4  0.2361 -0.0189 -0.00344 -1.0436
Warning message:
In aidsPx(priceIndex, priceNames, data = data, coef = coef, base = list(shares = baseShares)) :
  the base expenditure shares specified by element 'shares' of argument 'base' do not sum up to 1 (deviation from 1 = 0.001)
> 
> elas( estResultLaT, method = "EU" )

Demand Elasticities (formulas of Eales and Unnevehr)
Expenditure Elasticities
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   2.045    1.245    0.399    0.157 

Marshallian (uncompensated) Price Elasticities
          pFood1  pFood2  pFood3  pFood4
q_wFood1 -0.6932 -0.4600 -0.0323  0.1854
q_wFood2 -0.7100 -0.2166  0.0230 -0.0965
q_wFood3 -0.0756  0.0350 -0.9055 -0.0539
q_wFood4  0.1649 -0.0556 -0.0205 -1.0889

Hicksian (compensated) Price Elasticities
          pFood1  pFood2    pFood3  pFood4
q_wFood1 -0.0538 -0.0458  0.240668  0.9041
q_wFood2 -0.3208  0.0356  0.189172  0.3410
q_wFood3  0.0491  0.1157 -0.852328  0.0862
q_wFood4  0.2142 -0.0237  0.000555 -1.0336
> 
> cat( "\nLA: Elasticity formula of Green + Alston\n" )

LA: Elasticity formula of Green + Alston
> ela <- aidsElas( estResultLA$coef, shares = wMeans, prices = pMeans, method = "GA",
+    priceIndex = "S" )
> print( ela )

Demand Elasticities (formulas of Green and Alston / Buse (first set) for Stone price index)
Expenditure Elasticities
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   2.075    1.283    0.434    0.114 

Marshallian (uncompensated) Price Elasticities
          pFood1  pFood2  pFood3 pFood4
q_wFood1 -0.9801 -0.6586 -0.1833 -0.253
q_wFood2 -0.7801 -0.2663 -0.0556 -0.181
q_wFood3  0.0886  0.0858 -0.8149  0.206
q_wFood4  0.3891  0.1292  0.1216 -0.754

Hicksian (compensated) Price Elasticities
         pFood1   pFood2  pFood3 pFood4
q_wFood1 -0.336 -0.24283  0.0951  0.484
q_wFood2 -0.382 -0.00918  0.1166  0.274
q_wFood3  0.223  0.17280 -0.7567  0.361
q_wFood4  0.425  0.15215  0.1369 -0.714
> 
> cat( "\nLA: Elasticity formula of Buse\n" )

LA: Elasticity formula of Buse
> ela <- aidsElas( estResultLA$coef, shares = wMeans, prices = pMeans, method = "B1",
+    priceIndex = "S" )
> print( ela )

Demand Elasticities (formulas of Green and Alston / Buse (first set) for Stone price index)
Expenditure Elasticities
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   2.075    1.283    0.434    0.114 

Marshallian (uncompensated) Price Elasticities
          pFood1  pFood2  pFood3 pFood4
q_wFood1 -0.9801 -0.6586 -0.1833 -0.253
q_wFood2 -0.7801 -0.2663 -0.0556 -0.181
q_wFood3  0.0886  0.0858 -0.8149  0.206
q_wFood4  0.3891  0.1292  0.1216 -0.754

Hicksian (compensated) Price Elasticities
         pFood1   pFood2  pFood3 pFood4
q_wFood1 -0.336 -0.24283  0.0951  0.484
q_wFood2 -0.382 -0.00918  0.1166  0.274
q_wFood3  0.223  0.17280 -0.7567  0.361
q_wFood4  0.425  0.15215  0.1369 -0.714
> 
> elas( estResultLaS, method = "B1" )

Demand Elasticities (formulas of Green and Alston / Buse (first set) for Stone price index)
Expenditure Elasticities
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   2.051    1.280    0.402    0.130 

Marshallian (uncompensated) Price Elasticities
         pFood1 pFood2  pFood3 pFood4
q_wFood1 -0.999 -0.657 -0.1776 -0.217
q_wFood2 -0.779 -0.281 -0.0203 -0.199
q_wFood3  0.102  0.146 -0.8264  0.177
q_wFood4  0.410  0.116  0.1039 -0.759

Hicksian (compensated) Price Elasticities
         pFood1  pFood2  pFood3 pFood4
q_wFood1 -0.357 -0.2418  0.0961  0.503
q_wFood2 -0.379 -0.0221  0.1505  0.250
q_wFood3  0.228  0.2270 -0.7728  0.318
q_wFood4  0.450  0.1419  0.1212 -0.713
> 
> elas( estResultLaSl, method = "B1" )

Demand Elasticities (formulas of Green and Alston / Buse (first set) for Stone price index)
Expenditure Elasticities
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   2.066    1.279    0.431    0.100 

Marshallian (uncompensated) Price Elasticities
          pFood1  pFood2  pFood3 pFood4
q_wFood1 -0.9832 -0.6562 -0.1810 -0.245
q_wFood2 -0.7692 -0.2783 -0.0546 -0.177
q_wFood3  0.0906  0.0882 -0.8143  0.204
q_wFood4  0.3976  0.1343  0.1229 -0.755

Hicksian (compensated) Price Elasticities
         pFood1  pFood2  pFood3 pFood4
q_wFood1 -0.336 -0.2360  0.0947  0.477
q_wFood2 -0.368 -0.0181  0.1162  0.270
q_wFood3  0.226  0.1759 -0.7568  0.355
q_wFood4  0.429  0.1547  0.1363 -0.720
> 
> elas( estResultLaP, method = "B1" )

Demand Elasticities (formulas of Green and Alston / Buse (first set) for Paasche price index)
Expenditure Elasticities
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   2.078    1.260    0.392    0.122 

Marshallian (uncompensated) Price Elasticities
         pFood1 pFood2 pFood3 pFood4
q_wFood1 -1.003 -0.686 -0.180 -0.209
q_wFood2 -0.778 -0.272 -0.018 -0.191
q_wFood3  0.105  0.157 -0.826  0.171
q_wFood4  0.411  0.131  0.104 -0.769

Hicksian (compensated) Price Elasticities
         pFood1  pFood2  pFood3 pFood4
q_wFood1 -0.353 -0.2651  0.0976  0.521
q_wFood2 -0.384 -0.0173  0.1501  0.251
q_wFood3  0.227  0.2368 -0.7732  0.309
q_wFood4  0.450  0.1560  0.1203 -0.726
> 
> elas( estResultLaL, method = "B1" )

Demand Elasticities (formulas of Green and Alston / Buse (first set) for Laspeyres price index)
Expenditure Elasticities
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   2.040    1.237    0.389    0.170 

Marshallian (uncompensated) Price Elasticities
         pFood1  pFood2   pFood3 pFood4
q_wFood1  -1.02 -0.6452 -0.17023 -0.207
q_wFood2  -0.79 -0.2581 -0.00249 -0.187
q_wFood3   0.11  0.1496 -0.82154  0.174
q_wFood4   0.43  0.0894  0.08502 -0.774

Hicksian (compensated) Price Elasticities
         pFood1   pFood2 pFood3 pFood4
q_wFood1 -0.381 -0.23200  0.102  0.510
q_wFood2 -0.404 -0.00745  0.163  0.248
q_wFood3  0.231  0.22837 -0.770  0.310
q_wFood4  0.483  0.12385  0.108 -0.714
Warning message:
In aidsPx(priceIndex, priceNames, data = data, coef = coef, base = list(prices = basePrices,  :
  the base expenditure shares specified by element 'shares' of argument 'base' do not sum up to 1 (deviation from 1 = 0.001)
> 
> elas( estResultLaLs, method = "B1" )

Demand Elasticities (formulas of Green and Alston / Buse (first set) for Laspeyres price index)
Expenditure Elasticities
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   2.040    1.237    0.389    0.170 

Marshallian (uncompensated) Price Elasticities
         pFood1  pFood2   pFood3 pFood4
q_wFood1  -1.02 -0.6452 -0.17023 -0.207
q_wFood2  -0.79 -0.2581 -0.00249 -0.187
q_wFood3   0.11  0.1496 -0.82154  0.174
q_wFood4   0.43  0.0894  0.08502 -0.774

Hicksian (compensated) Price Elasticities
         pFood1   pFood2 pFood3 pFood4
q_wFood1 -0.381 -0.23200  0.102  0.510
q_wFood2 -0.404 -0.00745  0.163  0.248
q_wFood3  0.231  0.22837 -0.770  0.310
q_wFood4  0.483  0.12385  0.108 -0.714
Warning message:
In aidsPx(priceIndex, priceNames, data = data, coef = coef, base = list(shares = baseShares)) :
  the base expenditure shares specified by element 'shares' of argument 'base' do not sum up to 1 (deviation from 1 = 0.001)
> 
> elas( estResultLaT, method = "B1" )

Demand Elasticities (formulas of Green and Alston / Buse (first set) for Tornqvist price index)
Expenditure Elasticities
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   2.060    1.248    0.390    0.145 

Marshallian (uncompensated) Price Elasticities
         pFood1 pFood2  pFood3 pFood4
q_wFood1 -1.011 -0.666 -0.1752 -0.209
q_wFood2 -0.784 -0.265 -0.0105 -0.189
q_wFood3  0.107  0.153 -0.8233  0.173
q_wFood4  0.421  0.110  0.0948 -0.771

Hicksian (compensated) Price Elasticities
         pFood1 pFood2  pFood3 pFood4
q_wFood1 -0.367 -0.249  0.0997  0.515
q_wFood2 -0.394 -0.012  0.1561  0.250
q_wFood3  0.229  0.232 -0.7712  0.310
q_wFood4  0.467  0.140  0.1142 -0.720
> 
> cat( "\nLA: Elasticity formula of Buse (alternative formula)\n" )

LA: Elasticity formula of Buse (alternative formula)
> ela <- aidsElas( estResultLA$coef, shares = wMeans, prices = pMeans, method = "B2",
+    priceIndex = "S" )
> print( ela )

Demand Elasticities (formulas of Buse (second set) for Stone price index)
Expenditure Elasticities
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   2.075    1.283    0.434    0.115 

Marshallian (uncompensated) Price Elasticities
          pFood1 pFood2  pFood3 pFood4
q_wFood1 -0.9711 -0.657 -0.1852 -0.262
q_wFood2 -0.7778 -0.266 -0.0561 -0.184
q_wFood3  0.0838  0.085 -0.8139  0.211
q_wFood4  0.3817  0.128  0.1232 -0.747

Hicksian (compensated) Price Elasticities
         pFood1   pFood2  pFood3 pFood4
q_wFood1 -0.327 -0.24140  0.0931  0.476
q_wFood2 -0.379 -0.00881  0.1160  0.272
q_wFood3  0.219  0.17205 -0.7556  0.365
q_wFood4  0.417  0.15097  0.1386 -0.707
> 
> elas( estResultLaS, method = "B2" )

Demand Elasticities (formulas of Buse (second set) for Stone price index)
Expenditure Elasticities
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   2.051    1.280    0.402    0.130 

Marshallian (uncompensated) Price Elasticities
          pFood1 pFood2  pFood3 pFood4
q_wFood1 -0.9904 -0.656 -0.1797 -0.225
q_wFood2 -0.7766 -0.281 -0.0208 -0.201
q_wFood3  0.0973  0.145 -0.8252  0.181
q_wFood4  0.4024  0.114  0.1056 -0.752

Hicksian (compensated) Price Elasticities
         pFood1  pFood2 pFood3 pFood4
q_wFood1 -0.349 -0.2404  0.094  0.495
q_wFood2 -0.376 -0.0217  0.150  0.248
q_wFood3  0.223  0.2262 -0.772  0.322
q_wFood4  0.443  0.1407  0.123 -0.707
> 
> elas( estResultLaSl, method = "B2" )

Demand Elasticities (formulas of Buse (second set) for Stone price index)
Expenditure Elasticities
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   2.066    1.279    0.431    0.101 

Marshallian (uncompensated) Price Elasticities
          pFood1  pFood2  pFood3 pFood4
q_wFood1 -0.9739 -0.6547 -0.1831 -0.254
q_wFood2 -0.7668 -0.2779 -0.0551 -0.180
q_wFood3  0.0856  0.0873 -0.8132  0.209
q_wFood4  0.3897  0.1329  0.1247 -0.748

Hicksian (compensated) Price Elasticities
         pFood1  pFood2  pFood3 pFood4
q_wFood1 -0.327 -0.2345  0.0926  0.469
q_wFood2 -0.366 -0.0177  0.1156  0.268
q_wFood3  0.221  0.1750 -0.7557  0.360
q_wFood4  0.421  0.1534  0.1381 -0.713
> 
> elas( estResultLaP, method = "B2" )

Demand Elasticities (formulas of Buse (second set) for Paasche price index)
Expenditure Elasticities
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   2.077    1.259    0.393    0.123 

Marshallian (uncompensated) Price Elasticities
          pFood1 pFood2  pFood3 pFood4
q_wFood1 -0.9474 -0.677 -0.1928 -0.260
q_wFood2 -0.7646 -0.270 -0.0212 -0.204
q_wFood3  0.0734  0.152 -0.8181  0.200
q_wFood4  0.3660  0.124  0.1147 -0.727

Hicksian (compensated) Price Elasticities
         pFood1  pFood2  pFood3 pFood4
q_wFood1 -0.298 -0.2560  0.0843  0.470
q_wFood2 -0.371 -0.0151  0.1469  0.239
q_wFood3  0.196  0.2317 -0.7657  0.338
q_wFood4  0.404  0.1486  0.1311 -0.684
> 
> elas( estResultLaL, method = "B2" )

Demand Elasticities (formulas of Buse (second set) for Laspeyres price index)
Expenditure Elasticities
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   2.040    1.237    0.389    0.170 

Marshallian (uncompensated) Price Elasticities
         pFood1  pFood2   pFood3 pFood4
q_wFood1  -1.02 -0.6452 -0.17023 -0.207
q_wFood2  -0.79 -0.2581 -0.00249 -0.187
q_wFood3   0.11  0.1496 -0.82154  0.174
q_wFood4   0.43  0.0894  0.08502 -0.774

Hicksian (compensated) Price Elasticities
         pFood1   pFood2 pFood3 pFood4
q_wFood1 -0.381 -0.23200  0.102  0.510
q_wFood2 -0.404 -0.00745  0.163  0.248
q_wFood3  0.231  0.22837 -0.770  0.310
q_wFood4  0.483  0.12385  0.108 -0.714
Warning message:
In aidsPx(priceIndex, priceNames, data = data, coef = coef, base = list(prices = basePrices,  :
  the base expenditure shares specified by element 'shares' of argument 'base' do not sum up to 1 (deviation from 1 = 0.001)
> 
> elas( estResultLaLs, method = "B2" )

Demand Elasticities (formulas of Buse (second set) for Laspeyres price index)
Expenditure Elasticities
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   2.040    1.237    0.389    0.170 

Marshallian (uncompensated) Price Elasticities
         pFood1  pFood2   pFood3 pFood4
q_wFood1  -1.02 -0.6452 -0.17023 -0.207
q_wFood2  -0.79 -0.2581 -0.00249 -0.187
q_wFood3   0.11  0.1496 -0.82154  0.174
q_wFood4   0.43  0.0894  0.08502 -0.774

Hicksian (compensated) Price Elasticities
         pFood1   pFood2 pFood3 pFood4
q_wFood1 -0.381 -0.23200  0.102  0.510
q_wFood2 -0.404 -0.00745  0.163  0.248
q_wFood3  0.231  0.22837 -0.770  0.310
q_wFood4  0.483  0.12385  0.108 -0.714
Warning message:
In aidsPx(priceIndex, priceNames, data = data, coef = coef, base = list(shares = baseShares)) :
  the base expenditure shares specified by element 'shares' of argument 'base' do not sum up to 1 (deviation from 1 = 0.001)
> 
> elas( estResultLaT, method = "B2" )

Demand Elasticities (formulas of Buse (second set) for Tornqvist price index)
Expenditure Elasticities
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   2.060    1.248    0.390    0.145 

Marshallian (uncompensated) Price Elasticities
          pFood1 pFood2 pFood3 pFood4
q_wFood1 -0.9833 -0.662 -0.182 -0.234
q_wFood2 -0.7780 -0.264 -0.012 -0.195
q_wFood3  0.0913  0.151 -0.819  0.187
q_wFood4  0.3988  0.107  0.100 -0.751

Hicksian (compensated) Price Elasticities
         pFood1 pFood2  pFood3 pFood4
q_wFood1 -0.339 -0.244  0.0929  0.490
q_wFood2 -0.388 -0.011  0.1545  0.244
q_wFood3  0.213  0.230 -0.7673  0.324
q_wFood4  0.444  0.136  0.1197 -0.700
> 
> aidsElas( coef( estResultTl ), prices = pMeans, shares = wMeans )

Demand Elasticities (original AIDS formulas)
Expenditure Elasticities
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   2.065    1.234    0.395    0.166 

Marshallian (uncompensated) Price Elasticities
         pFood1 pFood2   pFood3 pFood4
q_wFood1 -1.012 -0.678 -0.17676 -0.198
q_wFood2 -0.790 -0.250 -0.00839 -0.186
q_wFood3  0.109  0.157 -0.82620  0.165
q_wFood4  0.415  0.110  0.09354 -0.784

Hicksian (compensated) Price Elasticities
         pFood1   pFood2 pFood3 pFood4
q_wFood1 -0.371 -0.26473  0.100  0.535
q_wFood2 -0.407 -0.00221  0.157  0.252
q_wFood3  0.232  0.23583 -0.773  0.306
q_wFood4  0.466  0.14356  0.116 -0.725
> aidsElas( coef( estResultTl ), prices = pMeans, totExp = xtMean )

Demand Elasticities (original AIDS formulas)
Expenditure Elasticities
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   2.058    1.232    0.392    0.157 

Marshallian (uncompensated) Price Elasticities
         pFood1 pFood2  pFood3 pFood4
q_wFood1 -1.012 -0.674 -0.1756 -0.197
q_wFood2 -0.782 -0.257 -0.0083 -0.184
q_wFood3  0.109  0.157 -0.8254  0.166
q_wFood4  0.419  0.112  0.0945 -0.782

Hicksian (compensated) Price Elasticities
         pFood1   pFood2  pFood3 pFood4
q_wFood1 -0.369 -0.25723  0.0991  0.527
q_wFood2 -0.397 -0.00797  0.1561  0.249
q_wFood3  0.232  0.23683 -0.7730  0.304
q_wFood4  0.468  0.14330  0.1155 -0.727
> 
> aidsElas( coef( estResultLaS ), shares = wMeans, method = "Ch",
+    priceIndex = "S" )

Demand Elasticities (formulas of Goddard / Chalfant for Stone price index)
Expenditure Elasticities
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   2.044    1.279    0.414    0.152 

Marshallian (uncompensated) Price Elasticities
          pFood1 pFood2  pFood3 pFood4
q_wFood1 -0.9884 -0.660 -0.1773 -0.218
q_wFood2 -0.7847 -0.273 -0.0201 -0.201
q_wFood3  0.0957  0.143 -0.8283  0.175
q_wFood4  0.3963  0.112  0.1013 -0.762

Hicksian (compensated) Price Elasticities
         pFood1  pFood2  pFood3 pFood4
q_wFood1 -0.354 -0.2503  0.0969  0.508
q_wFood2 -0.388 -0.0165  0.1515  0.253
q_wFood3  0.224  0.2262 -0.7728  0.322
q_wFood4  0.443  0.1426  0.1217 -0.708
> aidsElas( coef( estResultLaS ), prices = pMeans, totExp = xtMean,
+    method = "Ch", priceIndex = "S" )

Demand Elasticities (formulas of Goddard / Chalfant for Stone price index)
Expenditure Elasticities
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   2.036    1.276    0.411    0.142 

Marshallian (uncompensated) Price Elasticities
          pFood1 pFood2  pFood3 pFood4
q_wFood1 -0.9910 -0.657 -0.1752 -0.213
q_wFood2 -0.7767 -0.281 -0.0196 -0.198
q_wFood3  0.0977  0.145 -0.8278  0.174
q_wFood4  0.4029  0.115  0.1019 -0.763

Hicksian (compensated) Price Elasticities
         pFood1  pFood2  pFood3 pFood4
q_wFood1 -0.354 -0.2447  0.0965  0.502
q_wFood2 -0.378 -0.0229  0.1506  0.250
q_wFood3  0.226  0.2286 -0.7730  0.318
q_wFood4  0.447  0.1442  0.1209 -0.713
> 
> aidsElas( coef( estResultLaS ), prices = pMeans, shares = wMeans,
+    method = "B1", priceIndex = "S" )

Demand Elasticities (formulas of Green and Alston / Buse (first set) for Stone price index)
Expenditure Elasticities
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   2.060    1.283    0.405    0.139 

Marshallian (uncompensated) Price Elasticities
         pFood1 pFood2  pFood3 pFood4
q_wFood1 -0.997 -0.660 -0.1797 -0.223
q_wFood2 -0.787 -0.273 -0.0207 -0.203
q_wFood3  0.100  0.143 -0.8269  0.178
q_wFood4  0.403  0.112  0.1034 -0.758

Hicksian (compensated) Price Elasticities
         pFood1  pFood2  pFood3 pFood4
q_wFood1 -0.357 -0.2475  0.0965  0.508
q_wFood2 -0.389 -0.0157  0.1514  0.253
q_wFood3  0.226  0.2246 -0.7725  0.322
q_wFood4  0.446  0.1403  0.1220 -0.708
> aidsElas( coef( estResultLaS ), prices = pMeans, totExp = xtMean,
+    method = "B1", priceIndex = "S" )

Demand Elasticities (formulas of Green and Alston / Buse (first set) for Stone price index)
Expenditure Elasticities
q_wFood1 q_wFood2 q_wFood3 q_wFood4 
   2.051    1.280    0.402    0.130 

Marshallian (uncompensated) Price Elasticities
         pFood1 pFood2  pFood3 pFood4
q_wFood1 -0.999 -0.657 -0.1776 -0.217
q_wFood2 -0.779 -0.281 -0.0203 -0.199
q_wFood3  0.102  0.146 -0.8264  0.177
q_wFood4  0.410  0.116  0.1039 -0.759

Hicksian (compensated) Price Elasticities
         pFood1  pFood2  pFood3 pFood4
q_wFood1 -0.357 -0.2418  0.0961  0.503
q_wFood2 -0.379 -0.0221  0.1505  0.250
q_wFood3  0.228  0.2270 -0.7728  0.318
q_wFood4  0.450  0.1419  0.1212 -0.713
> 
> 
> ############# Price indices ##############
> options( digits = 5 )
> cat( "\n************** Price indices **************\n" )

************** Price indices **************
> cat( "\nStone index\n" )

Stone index
> pxS <- aidsPx( "S", pNames, shareNames = wNames, data = Blanciforti86 )
> print( pxS )
  1947   1948   1949   1950   1951   1952   1953   1954   1955   1956   1957 
4.0453 4.1253 4.0850 4.1068 4.2053 4.2255 4.2187 4.2221 4.2000 4.2050 4.2372 
  1958   1959   1960   1961   1962   1963   1964   1965   1966   1967   1968 
4.2728 4.2551 4.2663 4.2815 4.2884 4.3078 4.3188 4.3374 4.3881 4.4015 4.4357 
  1969   1970   1971   1972   1973   1974   1975   1976   1977   1978   1979 
4.4797 4.5305 4.5703 4.6052 4.7429 4.8765 4.9622 4.9943 5.0585 5.1532     NA 
  1980   1981 
    NA     NA 
> 
> cat( "\nStone index with lagged shares\n" )

Stone index with lagged shares
> pxSL <- aidsPx( "SL", pNames, shareNames = wNames, data = Blanciforti86 )
> print( pxSL )
  1947   1948   1949   1950   1951   1952   1953   1954   1955   1956   1957 
    NA 4.1280 4.0861 4.1003 4.2153 4.2211 4.2183 4.2186 4.2042 4.2038 4.2377 
  1958   1959   1960   1961   1962   1963   1964   1965   1966   1967   1968 
4.2727 4.2549 4.2663 4.2816 4.2885 4.3035 4.3226 4.3376 4.3886 4.3964 4.4358 
  1969   1970   1971   1972   1973   1974   1975   1976   1977   1978   1979 
4.4845 4.5351 4.5619 4.6098 4.7409 4.8760 4.9610 5.0007 5.0565 5.1498     NA 
  1980   1981 
    NA     NA 
> 
> cat( "\nPaasche index\n" )

Paasche index
> pxP <- aidsPx( "P", pNames, shareNames = wNames, data = Blanciforti86 )
> print( pxP )
    1947     1948     1949     1950     1951     1952     1953     1954 
0.000000 0.083512 0.044760 0.061564 0.168431 0.184889 0.177701 0.177342 
    1955     1956     1957     1958     1959     1960     1961     1962 
0.160284 0.165760 0.198634 0.233756 0.216878 0.228398 0.243559 0.250609 
    1963     1964     1965     1966     1967     1968     1969     1970 
0.265651 0.281360 0.299877 0.348917 0.359147 0.393046 0.439949 0.494065 
    1971     1972     1973     1974     1975     1976     1977     1978 
0.527593 0.564467 0.701564 0.836062 0.923102 0.958894 1.024138 1.114765 
    1979     1980     1981 
      NA       NA       NA 
attr(,"basePrices")
[1] 59.6 53.8 52.1 58.0
> 
> pxP2 <- aidsPx( "P", pNames, data = Blanciforti86, shareNames = wNames,
+    base = row.names(Blanciforti86) == "1970" )
> print( pxP2 )
     1947      1948      1949      1950      1951      1952      1953      1954 
-0.497591 -0.413203 -0.453005 -0.435114 -0.327861 -0.311381 -0.318179 -0.318870 
     1955      1956      1957      1958      1959      1960      1961      1962 
-0.336639 -0.332069 -0.299356 -0.263285 -0.280930 -0.269985 -0.254731 -0.247475 
     1963      1964      1965      1966      1967      1968      1969      1970 
-0.232894 -0.217108 -0.198324 -0.147209 -0.138569 -0.104392 -0.055459  0.000000 
     1971      1972      1973      1974      1975      1976      1977      1978 
 0.031448  0.070744  0.209187  0.341675  0.427339  0.464534  0.528474  0.619680 
     1979      1980      1981 
       NA        NA        NA 
attr(,"basePrices")
[1] 91.0 90.7 94.9 96.3
> 
> cat( "\nLaspeyres index\n" )

Laspeyres index
> pxL <- aidsPx( "L", pNames, shareNames = wNames, data = Blanciforti86 )
> print( pxL )
    1947     1948     1949     1950     1951     1952     1953     1954 
0.000000 0.082673 0.043879 0.059165 0.168011 0.183637 0.178556 0.179207 
    1955     1956     1957     1958     1959     1960     1961     1962 
0.161968 0.165313 0.198943 0.231635 0.214045 0.225344 0.241491 0.247878 
    1963     1964     1965     1966     1967     1968     1969     1970 
0.261214 0.275695 0.294634 0.347009 0.357702 0.390401 0.440420 0.497591 
    1971     1972     1973     1974     1975     1976     1977     1978 
0.529707 0.564467 0.692068 0.836029 0.923714 0.967625 1.036346 1.121479 
    1979     1980     1981 
      NA       NA       NA 
attr(,"basePrices")
[1] 59.6 53.8 52.1 58.0
attr(,"baseShares")
[1] 0.298 0.172 0.134 0.397
> 
> cat( "\nLaspeyres index, simplified\n" )

Laspeyres index, simplified
> pxLs <- aidsPx( "Ls", pNames, shareNames = wNames, data = Blanciforti86 )
> print( pxLs )
  1947   1948   1949   1950   1951   1952   1953   1954   1955   1956   1957 
4.0453 4.1280 4.0892 4.1045 4.2133 4.2289 4.2239 4.2245 4.2073 4.2106 4.2443 
  1958   1959   1960   1961   1962   1963   1964   1965   1966   1967   1968 
4.2769 4.2594 4.2707 4.2868 4.2932 4.3065 4.3210 4.3399 4.3923 4.4030 4.4357 
  1969   1970   1971   1972   1973   1974   1975   1976   1977   1978   1979 
4.4857 4.5429 4.5750 4.6098 4.7374 4.8813 4.9690 5.0129 5.0817 5.1668     NA 
  1980   1981 
    NA     NA 
attr(,"baseShares")
[1] 0.298 0.172 0.134 0.397
> print( pxL - pxLs )
   1947    1948    1949    1950    1951    1952    1953    1954    1955    1956 
-4.0453 -4.0453 -4.0453 -4.0453 -4.0453 -4.0453 -4.0453 -4.0453 -4.0453 -4.0453 
   1957    1958    1959    1960    1961    1962    1963    1964    1965    1966 
-4.0453 -4.0453 -4.0453 -4.0453 -4.0453 -4.0453 -4.0453 -4.0453 -4.0453 -4.0453 
   1967    1968    1969    1970    1971    1972    1973    1974    1975    1976 
-4.0453 -4.0453 -4.0453 -4.0453 -4.0453 -4.0453 -4.0453 -4.0453 -4.0453 -4.0453 
   1977    1978    1979    1980    1981 
-4.0453 -4.0453      NA      NA      NA 
attr(,"baseShares")
[1] 0.298 0.172 0.134 0.397
attr(,"basePrices")
[1] 59.6 53.8 52.1 58.0
> 
> pxLs2 <- aidsPx( "Ls", pNames, data = Blanciforti86, shareNames = wNames,
+    base = c( 1:32 ) )
> print( pxLs2 )
  1947   1948   1949   1950   1951   1952   1953   1954   1955   1956   1957 
4.0398 4.1220 4.0854 4.0993 4.2069 4.2252 4.2170 4.2165 4.1992 4.2027 4.2367 
  1958   1959   1960   1961   1962   1963   1964   1965   1966   1967   1968 
4.2733 4.2553 4.2662 4.2813 4.2887 4.3028 4.3169 4.3367 4.3888 4.3975 4.4312 
  1969   1970   1971   1972   1973   1974   1975   1976   1977   1978   1979 
4.4806 4.5364 4.5682 4.6056 4.7372 4.8778 4.9628 5.0033 5.0689 5.1579     NA 
  1980   1981 
    NA     NA 
attr(,"baseShares")
[1] 0.31038 0.20034 0.13412 0.35525
> 
> cat( "\nTornqvist index\n" )

Tornqvist index
> pxT <- aidsPx( "T", pNames, shareNames = wNames, data = Blanciforti86 )
> print( pxT )
    1947     1948     1949     1950     1951     1952     1953     1954 
0.000000 0.083092 0.044319 0.060364 0.168221 0.184263 0.178128 0.178274 
    1955     1956     1957     1958     1959     1960     1961     1962 
0.161126 0.165537 0.198788 0.232696 0.215461 0.226871 0.242525 0.249244 
    1963     1964     1965     1966     1967     1968     1969     1970 
0.263432 0.278527 0.297256 0.347963 0.358424 0.391724 0.440184 0.495828 
    1971     1972     1973     1974     1975     1976     1977     1978 
0.528650 0.564467 0.696816 0.836045 0.923408 0.963260 1.030242 1.118122 
    1979     1980     1981 
      NA       NA       NA 
attr(,"basePrices")
[1] 59.6 53.8 52.1 58.0
attr(,"baseShares")
[1] 0.298 0.172 0.134 0.397
> 
> pxT2 <- aidsPx( "T", pNames, data = Blanciforti86, shareNames = wNames,
+    base = list( prices = rep( 100, 4 ), shares = rep( 0.25, 4 ) ) )
> print( pxT2 )
     1947      1948      1949      1950      1951      1952      1953      1954 
-0.574001 -0.491661 -0.525397 -0.512172 -0.407146 -0.386022 -0.393438 -0.393417 
     1955      1956      1957      1958      1959      1960      1961      1962 
-0.407250 -0.400546 -0.368403 -0.331076 -0.347027 -0.335026 -0.320091 -0.311583 
     1963      1964      1965      1966      1967      1968      1969      1970 
-0.295413 -0.280565 -0.262170 -0.212854 -0.204120 -0.170387 -0.124459 -0.070264 
     1971      1972      1973      1974      1975      1976      1977      1978 
-0.037490  0.000000  0.134206  0.279529  0.363613  0.395931  0.457063  0.548316 
     1979      1980      1981 
       NA        NA        NA 
attr(,"basePrices")
[1] 100 100 100 100
attr(,"baseShares")
[1] 0.25 0.25 0.25 0.25
> 
> cat( "\nTranslog index\n" )

Translog index
> pxTL <- aidsPx( "TL", pNames, shareNames = wNames, data = Blanciforti86,
+    coef = c( list( alpha0 = 0 ), estResultLA$coef ) )
> print( pxTL )
  1947   1948   1949   1950   1951   1952   1953   1954   1955   1956   1957 
4.0181 4.0769 4.0359 4.0435 4.1570 4.1705 4.2183 4.2387 4.2513 4.2870 4.2872 
  1958   1959   1960   1961   1962   1963   1964   1965   1966   1967   1968 
4.2582 4.2588 4.2883 4.3193 4.3088 4.3373 4.3742 4.3577 4.3902 4.4379 4.4704 
  1969   1970   1971   1972   1973   1974   1975   1976   1977   1978   1979 
4.5018 4.5715 4.6248 4.6052 4.6426 4.8924 4.9988 5.0830 5.2161 5.2321     NA 
  1980   1981 
    NA     NA 
> 
> # Translog index with 1 demand shifter
> pxTLtrend <- aidsPx( "TL", pNames, data = Blanciforti86,
+    coef = c( list( alpha0 = 0 ), estResultLAtrend$coef ),
+    shifterNames = c( "trend" ) )
> print( pxTLtrend )
  1947   1948   1949   1950   1951   1952   1953   1954   1955   1956   1957 
4.0143 4.0895 4.0721 4.0728 4.1705 4.2121 4.1873 4.1813 4.1712 4.1830 4.2134 
  1958   1959   1960   1961   1962   1963   1964   1965   1966   1967   1968 
4.2734 4.2558 4.2676 4.2763 4.2906 4.3149 4.3295 4.3505 4.3956 4.3923 4.4357 
  1969   1970   1971   1972   1973   1974   1975   1976   1977   1978   1979 
4.4740 4.5185 4.5520 4.6052 4.7632 4.8930 4.9563 4.9664 5.0096 5.1263     NA 
  1980   1981 
    NA     NA 
> 
> # Translog index with 2 demand shifters
> pxTLtrend2 <- aidsPx( "TL", pNames, data = Blanciforti86,
+    coef = c( list( alpha0 = 0 ), estResultLAtrend2$coef ),
+    shifterNames = c( "trend", "trend2" ) )
> print( pxTLtrend2 )
  1947   1948   1949   1950   1951   1952   1953   1954   1955   1956   1957 
4.0234 4.1035 4.0794 4.0858 4.1861 4.2193 4.1970 4.1918 4.1779 4.1851 4.2186 
  1958   1959   1960   1961   1962   1963   1964   1965   1966   1967   1968 
4.2747 4.2562 4.2666 4.2764 4.2899 4.3099 4.3228 4.3456 4.3940 4.3920 4.4320 
  1969   1970   1971   1972   1973   1974   1975   1976   1977   1978   1979 
4.4746 4.5216 4.5532 4.6052 4.7623 4.8886 4.9579 4.9727 5.0163 5.1300     NA 
  1980   1981 
    NA     NA 
> 
> 
> ########### fitted values #################
> fitted( estResultAIDS )
$shares
     wFitted1 wFitted2 wFitted3 wFitted4
1948  0.31759  0.17323  0.13528  0.37390
1949  0.30869  0.18391  0.13544  0.37195
1950  0.31392  0.16998  0.13671  0.37939
1951  0.31540  0.16556  0.13704  0.38200
1952  0.30431  0.18255  0.13629  0.37685
1953  0.30678  0.18486  0.13676  0.37160
1954  0.29951  0.18327  0.13908  0.37814
1955  0.30001  0.19587  0.13775  0.36636
1956  0.29379  0.21041  0.13718  0.35862
1957  0.29855  0.19759  0.13788  0.36598
1958  0.29435  0.19549  0.13765  0.37251
1959  0.30128  0.20024  0.13616  0.36231
1960  0.30060  0.20608  0.13573  0.35760
1961  0.29883  0.20563  0.13650  0.35905
1962  0.30424  0.20432  0.13552  0.35592
1963  0.29783  0.21540  0.13511  0.35167
1964  0.29382  0.22333  0.13481  0.34804
1965  0.30340  0.21496  0.13370  0.34793
1966  0.31353  0.20645  0.13274  0.34728
1967  0.31825  0.21032  0.13205  0.33938
1968  0.31470  0.21940  0.13081  0.33509
1969  0.32398  0.20931  0.13021  0.33650
1970  0.32785  0.20719  0.13004  0.33492
1971  0.31898  0.21305  0.13128  0.33669
1972  0.32655  0.20894  0.12915  0.33536
1973  0.33523  0.19727  0.12749  0.34002
1974  0.31826  0.21348  0.13134  0.33691
1975  0.32361  0.20431  0.13251  0.33956
1976  0.32995  0.20661  0.13100  0.33244
1977  0.31239  0.21747  0.13318  0.33697
1978  0.31781  0.21253  0.13161  0.33805

$quant
   qFitted1 qFitted2 qFitted3 qFitted4
1    1.5320  1.01966  0.76854   1.9634
2    1.5194  1.03264  0.74850   2.0028
3    1.4770  0.99304  0.74081   2.0007
4    1.4672  0.98009  0.75233   1.9695
5    1.4677  1.00855  0.75063   2.0015
6    1.5637  1.05531  0.73823   1.9023
7    1.5158  1.03594  0.71533   1.8650
8    1.6318  1.10282  0.70562   1.8418
9    1.7014  1.14795  0.70439   1.8027
10   1.6300  1.10516  0.69665   1.8568
11   1.5103  1.05035  0.70149   1.9844
12   1.6248  1.10495  0.69490   1.9735
13   1.6770  1.13341  0.69437   1.9475
14   1.6752  1.13327  0.68917   1.9141
15   1.7016  1.14278  0.68426   1.9632
16   1.7290  1.16445  0.68766   1.9501
17   1.7663  1.18523  0.69680   1.9078
18   1.7633  1.17599  0.70102   1.9713
19   1.7803  1.17375  0.70949   1.9944
20   1.9050  1.22906  0.70794   1.9231
21   1.9277  1.24268  0.73073   1.9224
22   1.9237  1.23143  0.74311   1.9333
23   1.9649  1.24588  0.74736   1.8968
24   1.9443  1.24411  0.73573   1.8662
25   1.9165  1.22624  0.75800   1.9682
26   1.7947  1.16077  0.76836   2.1497
27   1.9026  1.23195  0.69407   2.0047
28   1.9210  1.23320  0.67918   1.9552
29   2.0470  1.28088  0.72346   1.8220
30   2.0074  1.27076  0.74565   1.6640
31   1.9434  1.24163  0.75123   1.8101

> fitted( estResultLA )
$shares
     wFitted1 wFitted2 wFitted3 wFitted4
1947       NA       NA       NA       NA
1948  0.31697  0.17308  0.13545  0.37450
1949  0.30928  0.18405  0.13536  0.37131
1950  0.31495  0.17022  0.13650  0.37834
1951  0.31428  0.16541  0.13733  0.38298
1952  0.30645  0.18300  0.13588  0.37467
1953  0.30692  0.18495  0.13679  0.37134
1954  0.29912  0.18337  0.13925  0.37825
1955  0.29802  0.19566  0.13827  0.36805
1956  0.29243  0.21032  0.13758  0.35968
1957  0.29788  0.19763  0.13809  0.36640
1958  0.29497  0.19581  0.13759  0.37163
1959  0.30168  0.20045  0.13610  0.36177
1960  0.30069  0.20622  0.13573  0.35736
1961  0.29865  0.20575  0.13657  0.35903
1962  0.30446  0.20448  0.13546  0.35560
1963  0.29773  0.21551  0.13516  0.35160
1964  0.29196  0.22314  0.13529  0.34961
1965  0.30343  0.21503  0.13370  0.34784
1966  0.31396  0.20651  0.13260  0.34694
1967  0.31854  0.21029  0.13192  0.33926
1968  0.31337  0.21906  0.13108  0.33649
1969  0.32290  0.20894  0.13039  0.33777
1970  0.32826  0.20703  0.12987  0.33484
1971  0.32073  0.21320  0.13084  0.33523
1972  0.32563  0.20855  0.12930  0.33653
1973  0.33433  0.19684  0.12758  0.34124
1974  0.31916  0.21358  0.13104  0.33621
1975  0.32416  0.20436  0.13226  0.33922
1976  0.32990  0.20639  0.13090  0.33282
1977  0.31344  0.21750  0.13296  0.33609
1978  0.31974  0.21269  0.13116  0.33640

$quant
   qFitted1 qFitted2 qFitted3 qFitted4
1        NA       NA       NA       NA
2    1.5291  1.01882  0.76951   1.9666
3    1.5222  1.03344  0.74806   1.9993
4    1.4819  0.99440  0.73966   1.9952
5    1.4620  0.97919  0.75390   1.9746
6    1.4780  1.01102  0.74842   1.9899
7    1.5644  1.05582  0.73837   1.9009
8    1.5139  1.03653  0.71620   1.8656
9    1.6209  1.10167  0.70825   1.8502
10   1.6935  1.14745  0.70643   1.8080
11   1.6263  1.10542  0.69770   1.8589
12   1.5135  1.05206  0.70119   1.9797
13   1.6269  1.10610  0.69458   1.9705
14   1.6776  1.13419  0.69441   1.9462
15   1.6742  1.13393  0.68955   1.9140
16   1.7028  1.14364  0.68398   1.9615
17   1.7284  1.16506  0.68793   1.9498
18   1.7551  1.18419  0.69929   1.9164
19   1.7634  1.17634  0.70104   1.9708
20   1.7827  1.17407  0.70877   1.9924
21   1.9067  1.22889  0.70723   1.9225
22   1.9195  1.24073  0.73226   1.9305
23   1.9173  1.22926  0.74413   1.9406
24   1.9674  1.24495  0.74635   1.8964
25   1.9549  1.24499  0.73326   1.8581
26   1.9111  1.22397  0.75884   1.9751
27   1.7898  1.15827  0.76894   2.1575
28   1.9080  1.23251  0.69250   2.0006
29   1.9242  1.23345  0.67786   1.9533
30   2.0467  1.27951  0.72289   1.8241
31   2.0142  1.27095  0.74442   1.6597
32   1.9552  1.24257  0.74865   1.8013

> fitted( estResultLaSNa )
$shares
     wFitted1 wFitted2 wFitted3 wFitted4
1947  0.31576  0.18784  0.13322  0.36317
1948  0.31687  0.17203  0.13521  0.37589
1949  0.30849  0.18317  0.13562  0.37272
1950  0.31170  0.16895  0.13700  0.38235
1951  0.31657  0.16488  0.13641  0.38214
1952  0.30390  0.18173  0.13664  0.37772
1953  0.30634  0.18400  0.13675  0.37291
1954  0.29789  0.18241  0.13933  0.38037
1955  0.29946  0.19533  0.13774  0.36746
1956  0.29244  0.20971  0.13760  0.36024
1957  0.29807  0.19723  0.13789  0.36680
1958  0.29415  0.19538  0.13804  0.37243
1959  0.30091  0.20021  0.13636  0.36252
1960  0.30017  0.20601  0.13595  0.35786
1961  0.29836  0.20555  0.13667  0.35942
1962  0.30386  0.20444  0.13557  0.35613
1963  0.29585  0.21521  0.13585  0.35309
1964  0.29299  0.22315  0.13544  0.34842
1965  0.30274  0.21487  0.13409  0.34830
1966  0.31313  0.20631  0.13278  0.34778
1967  0.31633  0.20981  0.13218  0.34168
1968  0.31280  0.21862  0.13128  0.33730
1969  0.32369  0.20864  0.13001  0.33767
1970  0.32914  0.20665  0.12926  0.33496
1971  0.31764  0.21216  0.13132  0.33889
1972  0.32606  0.20811  0.12910  0.33674
1973  0.33146  0.19605  0.12834  0.34415
1974  0.31794  0.21364  0.13122  0.33720
1975  0.32306  0.20450  0.13197  0.34047
1976  0.33187  0.20632  0.12967  0.33214
1977  0.31377  0.21640  0.13238  0.33745
1978  0.31858  0.21166  0.13112  0.33863

$quant
   qFitted1 qFitted2 qFitted3 qFitted4
1    1.6450  1.08412  0.79394   1.9442
2    1.5286  1.01263  0.76813   1.9739
3    1.5183  1.02850  0.74946   2.0070
4    1.4666  0.98700  0.74240   2.0163
5    1.4727  0.97608  0.74886   1.9702
6    1.4657  1.00403  0.75260   2.0061
7    1.5615  1.05044  0.73815   1.9089
8    1.5076  1.03111  0.71660   1.8760
9    1.6288  1.09980  0.70555   1.8473
10   1.6936  1.14416  0.70657   1.8108
11   1.6274  1.10316  0.69671   1.8610
12   1.5093  1.04975  0.70350   1.9840
13   1.6228  1.10476  0.69590   1.9746
14   1.6747  1.13306  0.69552   1.9489
15   1.6726  1.13284  0.69003   1.9161
16   1.6995  1.14345  0.68454   1.9644
17   1.7175  1.16343  0.69145   1.9580
18   1.7613  1.18428  0.70004   1.9099
19   1.7594  1.17548  0.70306   1.9734
20   1.7781  1.17295  0.70970   1.9972
21   1.8935  1.22610  0.70865   1.9362
22   1.9160  1.23828  0.73339   1.9351
23   1.9219  1.22747  0.74195   1.9400
24   1.9727  1.24263  0.74285   1.8971
25   1.9361  1.23887  0.73594   1.8784
26   1.9136  1.22139  0.75766   1.9763
27   1.7745  1.15360  0.77350   2.1758
28   1.9007  1.23287  0.69342   2.0064
29   1.9177  1.23434  0.67640   1.9604
30   2.0589  1.27912  0.71609   1.8204
31   2.0163  1.26454  0.74116   1.6664
32   1.9481  1.23651  0.74845   1.8133

> fitted( estResultLaLsNa )
$shares
     wFitted1 wFitted2 wFitted3 wFitted4
1947  0.31672  0.18760  0.13282  0.36286
1948  0.31644  0.17156  0.13515  0.37685
1949  0.30721  0.18281  0.13587  0.37412
1950  0.31254  0.16884  0.13669  0.38193
1951  0.31434  0.16418  0.13681  0.38466
1952  0.30271  0.18146  0.13690  0.37893
1953  0.30618  0.18399  0.13677  0.37306
1954  0.29917  0.18290  0.13908  0.37884
1955  0.29982  0.19574  0.13776  0.36668
1956  0.29395  0.21051  0.13741  0.35812
1957  0.29836  0.19768  0.13795  0.36601
1958  0.29350  0.19563  0.13833  0.37254
1959  0.30068  0.20043  0.13652  0.36236
1960  0.30033  0.20635  0.13604  0.35728
1961  0.29868  0.20600  0.13673  0.35858
1962  0.30384  0.20471  0.13568  0.35577
1963  0.29797  0.21599  0.13550  0.35054
1964  0.29451  0.22392  0.13526  0.34631
1965  0.30333  0.21520  0.13405  0.34742
1966  0.31283  0.20622  0.13285  0.34810
1967  0.31797  0.21003  0.13177  0.34023
1968  0.31477  0.21889  0.13080  0.33554
1969  0.32347  0.20827  0.12996  0.33831
1970  0.32735  0.20594  0.12955  0.33716
1971  0.31880  0.21221  0.13099  0.33800
1972  0.32573  0.20759  0.12902  0.33765
1973  0.33191  0.19531  0.12797  0.34481
1974  0.31766  0.21353  0.13129  0.33752
1975  0.32290  0.20438  0.13200  0.34072
1976  0.32931  0.20560  0.13018  0.33491
1977  0.31156  0.21618  0.13294  0.33933
1978  0.31745  0.21134  0.13135  0.33986

$quant
   qFitted1 qFitted2 qFitted3 qFitted4
1    1.6500  1.08268  0.79157   1.9426
2    1.5265  1.00988  0.76780   1.9789
3    1.5120  1.02646  0.75085   2.0145
4    1.4705  0.98639  0.74071   2.0141
5    1.4623  0.97195  0.75107   1.9832
6    1.4600  1.00254  0.75400   2.0125
7    1.5607  1.05034  0.73825   1.9097
8    1.5141  1.03388  0.71533   1.8685
9    1.6307  1.10209  0.70563   1.8434
10   1.7024  1.14853  0.70559   1.8002
11   1.6290  1.10569  0.69700   1.8569
12   1.5059  1.05111  0.70496   1.9846
13   1.6215  1.10603  0.69671   1.9738
14   1.6755  1.13494  0.69595   1.9458
15   1.6744  1.13534  0.69037   1.9116
16   1.6994  1.14494  0.68510   1.9624
17   1.7298  1.16764  0.68967   1.9439
18   1.7704  1.18834  0.69914   1.8983
19   1.7628  1.17729  0.70285   1.9684
20   1.7764  1.17243  0.71012   1.9990
21   1.9033  1.22735  0.70646   1.9280
22   1.9281  1.23981  0.73066   1.9250
23   1.9206  1.22530  0.74165   1.9437
24   1.9620  1.23836  0.74455   1.9095
25   1.9432  1.23922  0.73410   1.8735
26   1.9117  1.21832  0.75724   1.9817
27   1.7769  1.14924  0.77130   2.1800
28   1.8990  1.23220  0.69382   2.0083
29   1.9167  1.23363  0.67653   1.9619
30   2.0430  1.27462  0.71894   1.8356
31   2.0021  1.26322  0.74430   1.6757
32   1.9412  1.23464  0.74972   1.8199

> 
> 
> ########### aidsCalc #################
> options( digits = 3 )
> fittedAIDS <- aidsCalc( pNames, "xFood", data = Blanciforti86[ -1, ],
+    coef = estResultAIDS$coef )
> print( fittedAIDS )
$shares
        w1    w2    w3    w4
1948 0.318 0.173 0.135 0.374
1949 0.309 0.184 0.135 0.372
1950 0.314 0.170 0.137 0.379
1951 0.315 0.166 0.137 0.382
1952 0.304 0.183 0.136 0.377
1953 0.307 0.185 0.137 0.372
1954 0.300 0.183 0.139 0.378
1955 0.300 0.196 0.138 0.366
1956 0.294 0.210 0.137 0.359
1957 0.299 0.198 0.138 0.366
1958 0.294 0.195 0.138 0.373
1959 0.301 0.200 0.136 0.362
1960 0.301 0.206 0.136 0.358
1961 0.299 0.206 0.136 0.359
1962 0.304 0.204 0.136 0.356
1963 0.298 0.215 0.135 0.352
1964 0.294 0.223 0.135 0.348
1965 0.303 0.215 0.134 0.348
1966 0.314 0.206 0.133 0.347
1967 0.318 0.210 0.132 0.339
1968 0.315 0.219 0.131 0.335
1969 0.324 0.209 0.130 0.337
1970 0.328 0.207 0.130 0.335
1971 0.319 0.213 0.131 0.337
1972 0.327 0.209 0.129 0.335
1973 0.335 0.197 0.127 0.340
1974 0.318 0.213 0.131 0.337
1975 0.324 0.204 0.133 0.340
1976 0.330 0.207 0.131 0.332
1977 0.312 0.217 0.133 0.337
1978 0.318 0.213 0.132 0.338
1979    NA    NA    NA    NA
1980    NA    NA    NA    NA
1981    NA    NA    NA    NA

$quant
       q1    q2    q3   q4
1948 1.53 1.020 0.769 1.96
1949 1.52 1.033 0.748 2.00
1950 1.48 0.993 0.741 2.00
1951 1.47 0.980 0.752 1.97
1952 1.47 1.009 0.751 2.00
1953 1.56 1.055 0.738 1.90
1954 1.52 1.036 0.715 1.87
1955 1.63 1.103 0.706 1.84
1956 1.70 1.148 0.704 1.80
1957 1.63 1.105 0.697 1.86
1958 1.51 1.050 0.701 1.98
1959 1.62 1.105 0.695 1.97
1960 1.68 1.133 0.694 1.95
1961 1.68 1.133 0.689 1.91
1962 1.70 1.143 0.684 1.96
1963 1.73 1.164 0.688 1.95
1964 1.77 1.185 0.697 1.91
1965 1.76 1.176 0.701 1.97
1966 1.78 1.174 0.709 1.99
1967 1.91 1.229 0.708 1.92
1968 1.93 1.243 0.731 1.92
1969 1.92 1.231 0.743 1.93
1970 1.96 1.246 0.747 1.90
1971 1.94 1.244 0.736 1.87
1972 1.92 1.226 0.758 1.97
1973 1.79 1.161 0.768 2.15
1974 1.90 1.232 0.694 2.00
1975 1.92 1.233 0.679 1.96
1976 2.05 1.281 0.723 1.82
1977 2.01 1.271 0.746 1.66
1978 1.94 1.242 0.751 1.81
1979   NA    NA    NA   NA
1980   NA    NA    NA   NA
1981   NA    NA    NA   NA

> if( max( abs( fittedAIDS$shares[ !is.na( fittedAIDS$shares ) ] -
+    estResultAIDS$wFitted ) ) > 1e-5 ) {
+    stop( "fitted shares of AIDS are wrong" )
+ }
> if( max( abs( fittedAIDS$quant[ !is.na( fittedAIDS$quant ) ] -
+    estResultAIDS$qFitted ) ) > 1e-5 ) {
+    stop( "fitted quantities of AIDS are wrong" )
+ }
> fittedAIDSTX <- aidsCalc( pNames, "xFood", data = Blanciforti86[ -1, ],
+    coef = estResultAIDSTX$coef )
> print( fittedAIDSTX )
$shares
        w1    w2    w3    w4
1948 0.318 0.173 0.135 0.374
1949 0.309 0.184 0.135 0.372
1950 0.314 0.170 0.137 0.379
1951 0.315 0.166 0.137 0.382
1952 0.304 0.183 0.136 0.377
1953 0.307 0.185 0.137 0.372
1954 0.300 0.183 0.139 0.378
1955 0.300 0.196 0.138 0.366
1956 0.294 0.210 0.137 0.359
1957 0.299 0.198 0.138 0.366
1958 0.294 0.195 0.138 0.373
1959 0.301 0.200 0.136 0.362
1960 0.301 0.206 0.136 0.358
1961 0.299 0.206 0.136 0.359
1962 0.304 0.204 0.136 0.356
1963 0.298 0.215 0.135 0.352
1964 0.294 0.223 0.135 0.348
1965 0.303 0.215 0.134 0.348
1966 0.314 0.206 0.133 0.347
1967 0.318 0.210 0.132 0.339
1968 0.315 0.219 0.131 0.335
1969 0.324 0.209 0.130 0.337
1970 0.328 0.207 0.130 0.335
1971 0.319 0.213 0.131 0.337
1972 0.327 0.209 0.129 0.335
1973 0.335 0.197 0.127 0.340
1974 0.318 0.213 0.131 0.337
1975 0.324 0.204 0.133 0.340
1976 0.330 0.207 0.131 0.332
1977 0.312 0.217 0.133 0.337
1978 0.318 0.213 0.132 0.338
1979    NA    NA    NA    NA
1980    NA    NA    NA    NA
1981    NA    NA    NA    NA

$quant
       q1    q2    q3   q4
1948 1.53 1.020 0.769 1.96
1949 1.52 1.033 0.748 2.00
1950 1.48 0.993 0.741 2.00
1951 1.47 0.980 0.752 1.97
1952 1.47 1.009 0.751 2.00
1953 1.56 1.055 0.738 1.90
1954 1.52 1.036 0.715 1.87
1955 1.63 1.103 0.706 1.84
1956 1.70 1.148 0.704 1.80
1957 1.63 1.105 0.697 1.86
1958 1.51 1.050 0.701 1.98
1959 1.62 1.105 0.695 1.97
1960 1.68 1.133 0.694 1.95
1961 1.68 1.133 0.689 1.91
1962 1.70 1.143 0.684 1.96
1963 1.73 1.164 0.688 1.95
1964 1.77 1.185 0.697 1.91
1965 1.76 1.176 0.701 1.97
1966 1.78 1.174 0.709 1.99
1967 1.91 1.229 0.708 1.92
1968 1.93 1.243 0.731 1.92
1969 1.92 1.231 0.743 1.93
1970 1.96 1.246 0.747 1.90
1971 1.94 1.244 0.736 1.87
1972 1.92 1.226 0.758 1.97
1973 1.79 1.161 0.768 2.15
1974 1.90 1.232 0.694 2.00
1975 1.92 1.233 0.679 1.96
1976 2.05 1.281 0.723 1.82
1977 2.01 1.271 0.746 1.66
1978 1.94 1.242 0.751 1.81
1979   NA    NA    NA   NA
1980   NA    NA    NA   NA
1981   NA    NA    NA   NA

> print( all.equal( fittedAIDS, fittedAIDSTX ) )
[1] TRUE
> 
> fittedTl <- aidsCalc( pNames, "xFood", data = Blanciforti86[ set, ],
+    coef = coef( estResultTl ) )
> print( fittedTl )
$shares
        w1    w2    w3    w4
1947 0.317 0.188 0.133 0.362
1948 0.317 0.172 0.135 0.376
1949 0.308 0.183 0.136 0.374
1950 0.313 0.169 0.137 0.381
1951 0.315 0.164 0.137 0.384
1952 0.303 0.182 0.137 0.378
1953 0.306 0.184 0.137 0.373
1954 0.299 0.183 0.139 0.379
1955 0.300 0.196 0.138 0.367
1956 0.294 0.210 0.137 0.358
1957 0.298 0.198 0.138 0.366
1958 0.293 0.196 0.138 0.373
1959 0.300 0.200 0.137 0.363
1960 0.300 0.206 0.136 0.358
1961 0.298 0.206 0.137 0.359
1962 0.303 0.205 0.136 0.356
1963 0.297 0.216 0.136 0.352
1964 0.293 0.224 0.135 0.348
1965 0.302 0.215 0.134 0.348
1966 0.313 0.206 0.133 0.348
1967 0.318 0.210 0.132 0.341
1968 0.314 0.219 0.131 0.336
1969 0.323 0.208 0.130 0.338
1970 0.328 0.206 0.130 0.337
1971 0.319 0.212 0.131 0.338
1972 0.326 0.208 0.129 0.338
1973 0.333 0.196 0.128 0.343
1974 0.317 0.213 0.131 0.338
1975 0.323 0.204 0.132 0.341
1976 0.330 0.205 0.130 0.334
1977 0.313 0.216 0.132 0.338
1978 0.318 0.211 0.131 0.339

$quant
       q1    q2    q3   q4
1947 1.65 1.084 0.792 1.94
1948 1.53 1.011 0.768 1.98
1949 1.51 1.028 0.751 2.01
1950 1.47 0.988 0.741 2.01
1951 1.46 0.973 0.752 1.98
1952 1.46 1.004 0.754 2.01
1953 1.56 1.051 0.738 1.91
1954 1.51 1.034 0.715 1.87
1955 1.63 1.102 0.705 1.84
1956 1.70 1.148 0.705 1.80
1957 1.63 1.106 0.697 1.86
1958 1.50 1.052 0.705 1.99
1959 1.62 1.106 0.697 1.98
1960 1.67 1.134 0.696 1.95
1961 1.67 1.135 0.690 1.91
1962 1.70 1.144 0.685 1.97
1963 1.72 1.167 0.690 1.95
1964 1.76 1.187 0.700 1.91
1965 1.76 1.176 0.704 1.97
1966 1.77 1.172 0.710 2.00
1967 1.90 1.226 0.707 1.93
1968 1.92 1.239 0.731 1.93
1969 1.92 1.225 0.742 1.94
1970 1.96 1.238 0.745 1.91
1971 1.94 1.239 0.734 1.87
1972 1.91 1.218 0.758 1.98
1973 1.79 1.151 0.770 2.17
1974 1.90 1.231 0.694 2.01
1975 1.92 1.232 0.676 1.96
1976 2.05 1.274 0.718 1.83
1977 2.01 1.264 0.742 1.67
1978 1.94 1.234 0.749 1.82

> predictedTl <- predict( estResultTl, observedShares = TRUE )
> all.equal( fittedTl, predictedTl )
[1] TRUE
> predictedTl2 <- predict( estResultTl )
> all.equal( fittedTl, predictedTl2 )
[1] TRUE
> 
> # LA-AIDS with Stone price price index with lagged shares
> fittedLA <- aidsCalc( pNames, "xFood", data = Blanciforti86[ set, ],
+    coef = estResultLA$coef, priceIndex = estResultLA$lnp )
> print( fittedLA )
$shares
        w1    w2    w3    w4
1947    NA    NA    NA    NA
1948 0.317 0.173 0.135 0.374
1949 0.309 0.184 0.135 0.371
1950 0.315 0.170 0.136 0.378
1951 0.314 0.165 0.137 0.383
1952 0.306 0.183 0.136 0.375
1953 0.307 0.185 0.137 0.371
1954 0.299 0.183 0.139 0.378
1955 0.298 0.196 0.138 0.368
1956 0.292 0.210 0.138 0.360
1957 0.298 0.198 0.138 0.366
1958 0.295 0.196 0.138 0.372
1959 0.302 0.200 0.136 0.362
1960 0.301 0.206 0.136 0.357
1961 0.299 0.206 0.137 0.359
1962 0.304 0.204 0.135 0.356
1963 0.298 0.216 0.135 0.352
1964 0.292 0.223 0.135 0.350
1965 0.303 0.215 0.134 0.348
1966 0.314 0.207 0.133 0.347
1967 0.319 0.210 0.132 0.339
1968 0.313 0.219 0.131 0.336
1969 0.323 0.209 0.130 0.338
1970 0.328 0.207 0.130 0.335
1971 0.321 0.213 0.131 0.335
1972 0.326 0.209 0.129 0.337
1973 0.334 0.197 0.128 0.341
1974 0.319 0.214 0.131 0.336
1975 0.324 0.204 0.132 0.339
1976 0.330 0.206 0.131 0.333
1977 0.313 0.218 0.133 0.336
1978 0.320 0.213 0.131 0.336

$quant
       q1    q2    q3   q4
1947   NA    NA    NA   NA
1948 1.53 1.019 0.770 1.97
1949 1.52 1.033 0.748 2.00
1950 1.48 0.994 0.740 2.00
1951 1.46 0.979 0.754 1.97
1952 1.48 1.011 0.748 1.99
1953 1.56 1.056 0.738 1.90
1954 1.51 1.037 0.716 1.87
1955 1.62 1.102 0.708 1.85
1956 1.69 1.147 0.706 1.81
1957 1.63 1.105 0.698 1.86
1958 1.51 1.052 0.701 1.98
1959 1.63 1.106 0.695 1.97
1960 1.68 1.134 0.694 1.95
1961 1.67 1.134 0.690 1.91
1962 1.70 1.144 0.684 1.96
1963 1.73 1.165 0.688 1.95
1964 1.76 1.184 0.699 1.92
1965 1.76 1.176 0.701 1.97
1966 1.78 1.174 0.709 1.99
1967 1.91 1.229 0.707 1.92
1968 1.92 1.241 0.732 1.93
1969 1.92 1.229 0.744 1.94
1970 1.97 1.245 0.746 1.90
1971 1.95 1.245 0.733 1.86
1972 1.91 1.224 0.759 1.98
1973 1.79 1.158 0.769 2.16
1974 1.91 1.233 0.693 2.00
1975 1.92 1.233 0.678 1.95
1976 2.05 1.280 0.723 1.82
1977 2.01 1.271 0.744 1.66
1978 1.96 1.243 0.749 1.80

> if( max( abs( fittedLA$shares[ -1, ] - estResultLA$wFitted[ setWo1, ] ),
+       na.rm = TRUE ) > 1e-5 ) {
+    stop( "fitted shares of LA-AIDS are wrong" )
+ }
> if( max( abs( fittedLA$quant[ -1, ] - estResultLA$qFitted[ setWo1, ] ),
+       na.rm = TRUE ) > 1e-5 ) {
+    stop( "fitted quantities of LA-AIDS are wrong" )
+ }
> fittedLATX <- aidsCalc( pNames, "xFood", data = Blanciforti86[ set, ],
+    coef = estResultLATX$coef, priceIndex = estResultLATX$lnp )
> print( fittedLATX )
$shares
        w1    w2    w3    w4
1947    NA    NA    NA    NA
1948 0.317 0.173 0.135 0.374
1949 0.309 0.184 0.135 0.371
1950 0.315 0.170 0.136 0.378
1951 0.314 0.165 0.137 0.383
1952 0.306 0.183 0.136 0.375
1953 0.307 0.185 0.137 0.371
1954 0.299 0.183 0.139 0.378
1955 0.298 0.196 0.138 0.368
1956 0.292 0.210 0.138 0.360
1957 0.298 0.198 0.138 0.366
1958 0.295 0.196 0.138 0.372
1959 0.302 0.200 0.136 0.362
1960 0.301 0.206 0.136 0.357
1961 0.299 0.206 0.137 0.359
1962 0.304 0.204 0.135 0.356
1963 0.298 0.216 0.135 0.352
1964 0.292 0.223 0.135 0.350
1965 0.303 0.215 0.134 0.348
1966 0.314 0.207 0.133 0.347
1967 0.319 0.210 0.132 0.339
1968 0.313 0.219 0.131 0.336
1969 0.323 0.209 0.130 0.338
1970 0.328 0.207 0.130 0.335
1971 0.321 0.213 0.131 0.335
1972 0.326 0.209 0.129 0.337
1973 0.334 0.197 0.128 0.341
1974 0.319 0.214 0.131 0.336
1975 0.324 0.204 0.132 0.339
1976 0.330 0.206 0.131 0.333
1977 0.313 0.218 0.133 0.336
1978 0.320 0.213 0.131 0.336

$quant
       q1    q2    q3   q4
1947   NA    NA    NA   NA
1948 1.53 1.019 0.770 1.97
1949 1.52 1.033 0.748 2.00
1950 1.48 0.994 0.740 2.00
1951 1.46 0.979 0.754 1.97
1952 1.48 1.011 0.748 1.99
1953 1.56 1.056 0.738 1.90
1954 1.51 1.037 0.716 1.87
1955 1.62 1.102 0.708 1.85
1956 1.69 1.147 0.706 1.81
1957 1.63 1.105 0.698 1.86
1958 1.51 1.052 0.701 1.98
1959 1.63 1.106 0.695 1.97
1960 1.68 1.134 0.694 1.95
1961 1.67 1.134 0.690 1.91
1962 1.70 1.144 0.684 1.96
1963 1.73 1.165 0.688 1.95
1964 1.76 1.184 0.699 1.92
1965 1.76 1.176 0.701 1.97
1966 1.78 1.174 0.709 1.99
1967 1.91 1.229 0.707 1.92
1968 1.92 1.241 0.732 1.93
1969 1.92 1.229 0.744 1.94
1970 1.97 1.245 0.746 1.90
1971 1.95 1.245 0.733 1.86
1972 1.91 1.224 0.759 1.98
1973 1.79 1.158 0.769 2.16
1974 1.91 1.233 0.693 2.00
1975 1.92 1.233 0.678 1.95
1976 2.05 1.280 0.723 1.82
1977 2.01 1.271 0.744 1.66
1978 1.96 1.243 0.749 1.80

> print( all.equal( fittedLA, fittedLATX ) )
[1] TRUE
> 
> # LA-AIDS with Stone price index
> # obsereved shares in the Stone price index
> fittedLaSNa <- aidsCalc( pNames, "xFood", data = Blanciforti86[ set, ],
+    coef = estResultLaSNa$coef, priceIndex = estResultLaSNa$lnp )
> print( fittedLaSNa )
$shares
        w1    w2    w3    w4
1947 0.316 0.188 0.133 0.363
1948 0.317 0.172 0.135 0.376
1949 0.308 0.183 0.136 0.373
1950 0.312 0.169 0.137 0.382
1951 0.317 0.165 0.136 0.382
1952 0.304 0.182 0.137 0.378
1953 0.306 0.184 0.137 0.373
1954 0.298 0.182 0.139 0.380
1955 0.299 0.195 0.138 0.367
1956 0.292 0.210 0.138 0.360
1957 0.298 0.197 0.138 0.367
1958 0.294 0.195 0.138 0.372
1959 0.301 0.200 0.136 0.363
1960 0.300 0.206 0.136 0.358
1961 0.298 0.206 0.137 0.359
1962 0.304 0.204 0.136 0.356
1963 0.296 0.215 0.136 0.353
1964 0.293 0.223 0.135 0.348
1965 0.303 0.215 0.134 0.348
1966 0.313 0.206 0.133 0.348
1967 0.316 0.210 0.132 0.342
1968 0.313 0.219 0.131 0.337
1969 0.324 0.209 0.130 0.338
1970 0.329 0.207 0.129 0.335
1971 0.318 0.212 0.131 0.339
1972 0.326 0.208 0.129 0.337
1973 0.331 0.196 0.128 0.344
1974 0.318 0.214 0.131 0.337
1975 0.323 0.205 0.132 0.340
1976 0.332 0.206 0.130 0.332
1977 0.314 0.216 0.132 0.337
1978 0.319 0.212 0.131 0.339

$quant
       q1    q2    q3   q4
1947 1.65 1.084 0.794 1.94
1948 1.53 1.013 0.768 1.97
1949 1.52 1.029 0.749 2.01
1950 1.47 0.987 0.742 2.02
1951 1.47 0.976 0.749 1.97
1952 1.47 1.004 0.753 2.01
1953 1.56 1.050 0.738 1.91
1954 1.51 1.031 0.717 1.88
1955 1.63 1.100 0.706 1.85
1956 1.69 1.144 0.707 1.81
1957 1.63 1.103 0.697 1.86
1958 1.51 1.050 0.703 1.98
1959 1.62 1.105 0.696 1.97
1960 1.67 1.133 0.696 1.95
1961 1.67 1.133 0.690 1.92
1962 1.70 1.143 0.685 1.96
1963 1.72 1.163 0.691 1.96
1964 1.76 1.184 0.700 1.91
1965 1.76 1.175 0.703 1.97
1966 1.78 1.173 0.710 2.00
1967 1.89 1.226 0.709 1.94
1968 1.92 1.238 0.733 1.94
1969 1.92 1.227 0.742 1.94
1970 1.97 1.243 0.743 1.90
1971 1.94 1.239 0.736 1.88
1972 1.91 1.221 0.758 1.98
1973 1.77 1.154 0.774 2.18
1974 1.90 1.233 0.693 2.01
1975 1.92 1.234 0.676 1.96
1976 2.06 1.279 0.716 1.82
1977 2.02 1.265 0.741 1.67
1978 1.95 1.237 0.748 1.81

> all.equal( fittedLaSNa$shares, estResultLaSNa$wFitted )
[1] "Names: 4 string mismatches"
> all.equal( fittedLaSNa$quant, estResultLaSNa$qFitted )
[1] "Names: 4 string mismatches"                                                      
[2] "Attributes: < Component \"row.names\": Modes: character, numeric >"              
[3] "Attributes: < Component \"row.names\": target is character, current is numeric >"
> predictedLaSNa <- predict( estResultLaSNa, observedShares = TRUE )
> all.equal( fittedLaSNa$shares, predictedLaSNa$shares[ set, ] )
[1] TRUE
> all.equal( fittedLaSNa$quant, predictedLaSNa$quant[ set, ] )
[1] TRUE
> # fitted shares in the Stone price index
> fittedLaSNa2 <- aidsCalc( pNames, "xFood", data = Blanciforti86[ set, ],
+    coef = estResultLaSNa$coef, priceIndex = "S" )
> print( fittedLaSNa2 )
$shares
        w1    w2    w3    w4
1947 0.317 0.188 0.133 0.362
1948 0.317 0.172 0.135 0.376
1949 0.308 0.183 0.136 0.373
1950 0.313 0.169 0.137 0.381
1951 0.315 0.165 0.137 0.384
1952 0.304 0.182 0.137 0.378
1953 0.307 0.184 0.137 0.373
1954 0.299 0.183 0.139 0.379
1955 0.299 0.195 0.138 0.368
1956 0.293 0.210 0.138 0.360
1957 0.298 0.197 0.138 0.367
1958 0.294 0.195 0.138 0.372
1959 0.301 0.200 0.136 0.362
1960 0.300 0.206 0.136 0.358
1961 0.298 0.206 0.137 0.359
1962 0.304 0.204 0.136 0.356
1963 0.297 0.215 0.136 0.352
1964 0.293 0.223 0.135 0.348
1965 0.303 0.215 0.134 0.348
1966 0.313 0.206 0.133 0.348
1967 0.318 0.210 0.132 0.340
1968 0.314 0.219 0.131 0.336
1969 0.324 0.209 0.130 0.338
1970 0.328 0.206 0.130 0.336
1971 0.319 0.212 0.131 0.338
1972 0.326 0.208 0.129 0.337
1973 0.332 0.196 0.128 0.343
1974 0.318 0.214 0.131 0.337
1975 0.323 0.205 0.132 0.340
1976 0.330 0.206 0.130 0.334
1977 0.311 0.216 0.133 0.340
1978 0.318 0.212 0.131 0.339

$quant
       q1    q2    q3   q4
1947 1.65 1.086 0.792 1.94
1948 1.53 1.013 0.768 1.97
1949 1.52 1.028 0.750 2.01
1950 1.47 0.988 0.740 2.01
1951 1.46 0.974 0.752 1.98
1952 1.47 1.004 0.752 2.01
1953 1.56 1.051 0.738 1.91
1954 1.51 1.032 0.715 1.87
1955 1.63 1.100 0.706 1.85
1956 1.70 1.144 0.706 1.81
1957 1.63 1.103 0.697 1.86
1958 1.51 1.050 0.703 1.98
1959 1.62 1.105 0.696 1.97
1960 1.67 1.133 0.695 1.95
1961 1.67 1.133 0.690 1.92
1962 1.70 1.143 0.685 1.96
1963 1.73 1.165 0.690 1.95
1964 1.76 1.184 0.700 1.91
1965 1.76 1.176 0.703 1.97
1966 1.78 1.173 0.710 2.00
1967 1.90 1.228 0.706 1.93
1968 1.93 1.240 0.731 1.93
1969 1.92 1.228 0.742 1.94
1970 1.96 1.241 0.745 1.90
1971 1.94 1.240 0.734 1.87
1972 1.91 1.221 0.758 1.98
1973 1.78 1.155 0.772 2.17
1974 1.90 1.233 0.694 2.01
1975 1.92 1.235 0.676 1.96
1976 2.05 1.277 0.718 1.83
1977 2.00 1.262 0.744 1.68
1978 1.94 1.236 0.750 1.82

> B86LaSNa2 <- cbind( Blanciforti86[ set, c( pNames, "xFood" ) ],
+    fittedLaSNa2$shares )
> lnp <- aidsPx( "S", pNames, shareNames = c( "w1", "w2", "w3", "w4" ),
+    data = B86LaSNa2 )
> fittedLaSNa2b <- aidsCalc( pNames, "xFood", data = Blanciforti86[ set, ],
+    coef = estResultLaSNa$coef, priceIndex = lnp )
> all.equal( fittedLaSNa2, fittedLaSNa2b )
[1] TRUE
> predictedLaSNa2 <- predict( estResultLaSNa )
> all.equal( fittedLaSNa2$shares, predictedLaSNa2$shares[ set, ] )
[1] TRUE
> all.equal( fittedLaSNa2$quant, predictedLaSNa2$quant[ set, ] )
[1] TRUE
> 
> # LA-AIDS with Stone price index with lagged shares
> # observed shares in the Stone price index
> fittedLaSl <- aidsCalc( pNames, "xFood", data = Blanciforti86[ set, ],
+    coef = estResultLaSl$coef, priceIndex = estResultLaSl$lnp )
> print( fittedLaSl )
$shares
        w1    w2    w3    w4
1947    NA    NA    NA    NA
1948 0.317 0.173 0.135 0.374
1949 0.309 0.184 0.135 0.371
1950 0.315 0.170 0.136 0.378
1951 0.314 0.165 0.137 0.383
1952 0.306 0.183 0.136 0.375
1953 0.307 0.185 0.137 0.371
1954 0.299 0.183 0.139 0.378
1955 0.298 0.196 0.138 0.368
1956 0.292 0.210 0.138 0.360
1957 0.298 0.198 0.138 0.366
1958 0.295 0.196 0.138 0.372
1959 0.302 0.200 0.136 0.362
1960 0.301 0.206 0.136 0.357
1961 0.299 0.206 0.137 0.359
1962 0.304 0.204 0.135 0.356
1963 0.298 0.216 0.135 0.352
1964 0.292 0.223 0.135 0.350
1965 0.303 0.215 0.134 0.348
1966 0.314 0.207 0.133 0.347
1967 0.319 0.210 0.132 0.339
1968 0.313 0.219 0.131 0.336
1969 0.323 0.209 0.130 0.338
1970 0.328 0.207 0.130 0.335
1971 0.321 0.213 0.131 0.335
1972 0.326 0.209 0.129 0.337
1973 0.334 0.197 0.128 0.341
1974 0.319 0.214 0.131 0.336
1975 0.324 0.204 0.132 0.339
1976 0.330 0.206 0.131 0.333
1977 0.313 0.218 0.133 0.336
1978 0.320 0.213 0.131 0.336

$quant
       q1    q2    q3   q4
1947   NA    NA    NA   NA
1948 1.53 1.019 0.770 1.97
1949 1.52 1.033 0.748 2.00
1950 1.48 0.994 0.740 2.00
1951 1.46 0.979 0.754 1.97
1952 1.48 1.011 0.748 1.99
1953 1.56 1.056 0.738 1.90
1954 1.51 1.037 0.716 1.87
1955 1.62 1.102 0.708 1.85
1956 1.69 1.147 0.706 1.81
1957 1.63 1.105 0.698 1.86
1958 1.51 1.052 0.701 1.98
1959 1.63 1.106 0.695 1.97
1960 1.68 1.134 0.694 1.95
1961 1.67 1.134 0.690 1.91
1962 1.70 1.144 0.684 1.96
1963 1.73 1.165 0.688 1.95
1964 1.76 1.184 0.699 1.92
1965 1.76 1.176 0.701 1.97
1966 1.78 1.174 0.709 1.99
1967 1.91 1.229 0.707 1.92
1968 1.92 1.241 0.732 1.93
1969 1.92 1.229 0.744 1.94
1970 1.97 1.245 0.746 1.90
1971 1.95 1.245 0.733 1.86
1972 1.91 1.224 0.759 1.98
1973 1.79 1.158 0.769 2.16
1974 1.91 1.233 0.693 2.00
1975 1.92 1.233 0.678 1.95
1976 2.05 1.280 0.723 1.82
1977 2.01 1.271 0.744 1.66
1978 1.96 1.243 0.749 1.80

> all.equal( fittedLaSl$shares, estResultLaSl$wFitted, check.attributes = FALSE )
[1] TRUE
> all.equal( fittedLaSl$quant, estResultLaSl$qFitted, check.attributes = FALSE )
[1] TRUE
> predictedLaSl <- predict( estResultLaSl, observedShares = TRUE )
> all.equal( fittedLaSl, predictedLaSl )
[1] TRUE
> # fitted shares in the Stone price index
> fittedLaSl2 <- aidsCalc( pNames, "xFood", data = Blanciforti86[ set, ],
+    coef = estResultLaSl$coef, priceIndex = "SL" )
> print( fittedLaSl2 )
$shares
        w1    w2    w3    w4
1947 0.318 0.189 0.133 0.360
1948 0.318 0.173 0.135 0.373
1949 0.309 0.184 0.135 0.372
1950 0.315 0.170 0.137 0.378
1951 0.316 0.166 0.137 0.382
1952 0.305 0.183 0.136 0.376
1953 0.307 0.185 0.137 0.371
1954 0.299 0.183 0.139 0.378
1955 0.299 0.196 0.138 0.367
1956 0.292 0.210 0.138 0.360
1957 0.298 0.198 0.138 0.366
1958 0.295 0.196 0.138 0.372
1959 0.302 0.200 0.136 0.362
1960 0.301 0.206 0.136 0.357
1961 0.299 0.206 0.137 0.359
1962 0.304 0.204 0.135 0.356
1963 0.298 0.216 0.135 0.351
1964 0.293 0.223 0.135 0.348
1965 0.303 0.215 0.134 0.348
1966 0.314 0.207 0.133 0.347
1967 0.318 0.210 0.132 0.339
1968 0.315 0.219 0.131 0.335
1969 0.325 0.209 0.130 0.336
1970 0.328 0.207 0.130 0.335
1971 0.319 0.213 0.131 0.336
1972 0.327 0.209 0.129 0.335
1973 0.335 0.197 0.128 0.341
1974 0.319 0.214 0.131 0.336
1975 0.324 0.204 0.132 0.339
1976 0.330 0.206 0.131 0.333
1977 0.311 0.217 0.133 0.338
1978 0.318 0.212 0.132 0.338

$quant
       q1    q2    q3   q4
1947 1.66 1.094 0.791 1.93
1948 1.54 1.020 0.768 1.96
1949 1.52 1.033 0.748 2.00
1950 1.48 0.994 0.740 2.00
1951 1.47 0.981 0.752 1.97
1952 1.47 1.009 0.751 2.00
1953 1.56 1.056 0.738 1.90
1954 1.51 1.037 0.716 1.86
1955 1.63 1.103 0.707 1.85
1956 1.69 1.147 0.707 1.81
1957 1.63 1.106 0.697 1.86
1958 1.51 1.052 0.701 1.98
1959 1.63 1.106 0.695 1.97
1960 1.68 1.134 0.694 1.95
1961 1.67 1.134 0.689 1.91
1962 1.70 1.144 0.684 1.96
1963 1.73 1.165 0.688 1.95
1964 1.76 1.186 0.698 1.91
1965 1.76 1.176 0.701 1.97
1966 1.78 1.174 0.709 1.99
1967 1.91 1.229 0.707 1.92
1968 1.93 1.242 0.730 1.92
1969 1.93 1.231 0.742 1.93
1970 1.97 1.245 0.746 1.90
1971 1.95 1.244 0.735 1.86
1972 1.92 1.225 0.757 1.97
1973 1.79 1.159 0.769 2.16
1974 1.91 1.232 0.693 2.00
1975 1.92 1.233 0.678 1.95
1976 2.05 1.280 0.723 1.82
1977 2.00 1.269 0.747 1.67
1978 1.94 1.241 0.751 1.81

> B86LaSl2 <- cbind( Blanciforti86[ set, c( pNames, "xFood" ) ],
+    fittedLaSl2$shares )
> lnp <- aidsPx( "SL", pNames, shareNames = c( "w1", "w2", "w3", "w4" ),
+    data = B86LaSl2 )
> fittedLaSl2b <- aidsCalc( pNames, "xFood", data = Blanciforti86[ set, ],
+    coef = estResultLaSl$coef, priceIndex = lnp )
> all.equal( fittedLaSl2$shares[-1,], fittedLaSl2b$shares[-1,] )
[1] TRUE
> all.equal( fittedLaSl2$quant[-1,], fittedLaSl2b$quant[-1,] )
[1] TRUE
> predictedLaSl2 <- predict( estResultLaSl )
> all.equal( fittedLaSl2, predictedLaSl2 )
[1] TRUE
> 
> # LA-AIDS with Paasche price index
> # obsereved shares in the Paasche price index
> fittedLaP <- aidsCalc( pNames, "xFood", data = Blanciforti86[ set, ],
+    coef = estResultLaP$coef, priceIndex = estResultLaP$lnp )
> print( fittedLaP )
$shares
        w1    w2    w3    w4
1947 0.317 0.188 0.133 0.362
1948 0.317 0.172 0.135 0.376
1949 0.308 0.183 0.136 0.373
1950 0.313 0.169 0.137 0.381
1951 0.315 0.165 0.137 0.384
1952 0.303 0.182 0.137 0.378
1953 0.307 0.184 0.137 0.373
1954 0.299 0.183 0.139 0.379
1955 0.300 0.196 0.138 0.367
1956 0.293 0.210 0.138 0.360
1957 0.298 0.197 0.138 0.367
1958 0.293 0.196 0.138 0.373
1959 0.300 0.200 0.137 0.363
1960 0.299 0.206 0.136 0.358
1961 0.298 0.206 0.137 0.360
1962 0.303 0.204 0.136 0.357
1963 0.297 0.216 0.136 0.352
1964 0.292 0.223 0.136 0.349
1965 0.302 0.215 0.134 0.349
1966 0.313 0.206 0.133 0.348
1967 0.317 0.210 0.132 0.341
1968 0.314 0.219 0.131 0.336
1969 0.324 0.208 0.130 0.338
1970 0.328 0.206 0.129 0.336
1971 0.319 0.212 0.131 0.338
1972 0.326 0.208 0.129 0.337
1973 0.331 0.196 0.128 0.345
1974 0.318 0.214 0.131 0.337
1975 0.323 0.204 0.132 0.341
1976 0.331 0.206 0.130 0.333
1977 0.313 0.216 0.133 0.338
1978 0.319 0.212 0.131 0.339

$quant
       q1    q2    q3   q4
1947 1.65 1.085 0.792 1.94
1948 1.53 1.013 0.768 1.97
1949 1.52 1.029 0.750 2.01
1950 1.47 0.988 0.741 2.01
1951 1.47 0.975 0.751 1.98
1952 1.46 1.005 0.753 2.01
1953 1.56 1.051 0.738 1.91
1954 1.52 1.034 0.715 1.87
1955 1.63 1.101 0.705 1.85
1956 1.69 1.146 0.706 1.81
1957 1.63 1.104 0.697 1.86
1958 1.51 1.051 0.704 1.99
1959 1.62 1.105 0.697 1.98
1960 1.67 1.133 0.696 1.95
1961 1.67 1.133 0.691 1.92
1962 1.70 1.143 0.685 1.97
1963 1.72 1.165 0.690 1.95
1964 1.76 1.185 0.701 1.91
1965 1.76 1.175 0.704 1.98
1966 1.78 1.172 0.710 2.00
1967 1.90 1.226 0.707 1.93
1968 1.92 1.239 0.732 1.93
1969 1.92 1.226 0.742 1.94
1970 1.97 1.240 0.744 1.90
1971 1.94 1.239 0.734 1.87
1972 1.92 1.220 0.757 1.98
1973 1.77 1.152 0.774 2.18
1974 1.90 1.232 0.693 2.01
1975 1.92 1.233 0.676 1.96
1976 2.05 1.276 0.717 1.83
1977 2.01 1.263 0.742 1.67
1978 1.95 1.236 0.748 1.81

> all.equal( fittedLaP$shares, estResultLaP$wFitted, check.attributes = FALSE )
[1] TRUE
> all.equal( fittedLaP$quant, estResultLaP$qFitted, check.attributes = FALSE )
[1] TRUE
> predictedLaP <- predict( estResultLaP, observedShares = TRUE )
> all.equal( fittedLaP, predictedLaP )
[1] TRUE
> # fitted shares in the Stone price index
> fittedLaP2 <- aidsCalc( pNames, "xFood", data = Blanciforti86[ set, ],
+    coef = estResultLaP$coef, priceIndex = "P",
+    basePrices = as.numeric( Blanciforti86[ 1, pNames ] ) )
> print( fittedLaP2 )
$shares
        w1    w2    w3    w4
1947 0.317 0.188 0.133 0.362
1948 0.317 0.172 0.135 0.376
1949 0.308 0.183 0.136 0.373
1950 0.313 0.169 0.137 0.381
1951 0.315 0.165 0.137 0.384
1952 0.304 0.182 0.137 0.378
1953 0.306 0.184 0.137 0.373
1954 0.299 0.183 0.139 0.379
1955 0.299 0.195 0.138 0.367
1956 0.292 0.210 0.138 0.360
1957 0.298 0.197 0.138 0.367
1958 0.294 0.196 0.138 0.373
1959 0.300 0.200 0.136 0.363
1960 0.300 0.206 0.136 0.358
1961 0.298 0.206 0.137 0.360
1962 0.303 0.204 0.136 0.356
1963 0.297 0.216 0.136 0.352
1964 0.292 0.223 0.136 0.349
1965 0.302 0.215 0.134 0.349
1966 0.313 0.206 0.133 0.348
1967 0.318 0.210 0.132 0.340
1968 0.314 0.219 0.131 0.336
1969 0.324 0.208 0.130 0.338
1970 0.328 0.206 0.130 0.336
1971 0.319 0.212 0.131 0.338
1972 0.326 0.208 0.129 0.337
1973 0.332 0.196 0.128 0.344
1974 0.318 0.213 0.131 0.338
1975 0.324 0.204 0.132 0.340
1976 0.331 0.206 0.130 0.333
1977 0.312 0.216 0.133 0.339
1978 0.318 0.211 0.131 0.339

$quant
       q1    q2    q3   q4
1947 1.65 1.085 0.792 1.94
1948 1.53 1.013 0.768 1.97
1949 1.52 1.029 0.750 2.01
1950 1.47 0.989 0.741 2.01
1951 1.46 0.974 0.752 1.98
1952 1.46 1.005 0.753 2.01
1953 1.56 1.051 0.738 1.91
1954 1.51 1.033 0.715 1.87
1955 1.63 1.101 0.706 1.85
1956 1.69 1.146 0.706 1.81
1957 1.63 1.104 0.697 1.86
1958 1.51 1.051 0.704 1.99
1959 1.62 1.105 0.696 1.98
1960 1.67 1.133 0.696 1.95
1961 1.67 1.133 0.690 1.92
1962 1.70 1.144 0.685 1.97
1963 1.72 1.165 0.690 1.95
1964 1.76 1.185 0.701 1.91
1965 1.76 1.176 0.703 1.98
1966 1.78 1.172 0.710 2.00
1967 1.90 1.227 0.706 1.93
1968 1.92 1.239 0.731 1.93
1969 1.92 1.226 0.742 1.94
1970 1.97 1.240 0.744 1.90
1971 1.95 1.239 0.734 1.87
1972 1.91 1.220 0.758 1.98
1973 1.78 1.153 0.773 2.17
1974 1.90 1.231 0.694 2.01
1975 1.92 1.233 0.676 1.96
1976 2.05 1.276 0.718 1.83
1977 2.01 1.262 0.744 1.67
1978 1.95 1.235 0.749 1.82

> B86LaP2 <- cbind( Blanciforti86[ set, c( pNames, "xFood" ) ],
+    fittedLaP2$shares )
> lnp <- aidsPx( "P", pNames, shareNames = c( "w1", "w2", "w3", "w4" ),
+    data = B86LaP2 )
> fittedLaP2b <- aidsCalc( pNames, "xFood", data = Blanciforti86[ set, ],
+    coef = estResultLaP$coef, priceIndex = lnp )
> all.equal( fittedLaP2, fittedLaP2b, check.attributes = FALSE )
[1] TRUE
> predictedLaP2 <- predict( estResultLaP )
> all.equal( fittedLaP2, predictedLaP2 )
[1] TRUE
> 
> # LA-AIDS with Laspeyres price index
> fittedLaL <- aidsCalc( pNames, "xFood", data = Blanciforti86[ set, ],
+    coef = estResultLaL$coef, priceIndex = estResultLaL$lnp )
> print( fittedLaL )
$shares
        w1    w2    w3    w4
1947 0.317 0.188 0.133 0.363
1948 0.316 0.172 0.135 0.377
1949 0.307 0.183 0.136 0.374
1950 0.313 0.169 0.137 0.382
1951 0.314 0.164 0.137 0.385
1952 0.303 0.181 0.137 0.379
1953 0.306 0.184 0.137 0.373
1954 0.299 0.183 0.139 0.379
1955 0.300 0.196 0.138 0.367
1956 0.294 0.211 0.137 0.358
1957 0.298 0.198 0.138 0.366
1958 0.293 0.196 0.138 0.373
1959 0.301 0.200 0.137 0.362
1960 0.300 0.206 0.136 0.357
1961 0.299 0.206 0.137 0.359
1962 0.304 0.205 0.136 0.356
1963 0.298 0.216 0.136 0.351
1964 0.295 0.224 0.135 0.346
1965 0.303 0.215 0.134 0.347
1966 0.313 0.206 0.133 0.348
1967 0.318 0.210 0.132 0.340
1968 0.315 0.219 0.131 0.336
1969 0.323 0.208 0.130 0.338
1970 0.327 0.206 0.130 0.337
1971 0.319 0.212 0.131 0.338
1972 0.326 0.208 0.129 0.338
1973 0.332 0.195 0.128 0.345
1974 0.318 0.214 0.131 0.338
1975 0.323 0.204 0.132 0.341
1976 0.329 0.206 0.130 0.335
1977 0.312 0.216 0.133 0.339
1978 0.317 0.211 0.131 0.340

$quant
       q1    q2    q3   q4
1947 1.65 1.083 0.792 1.94
1948 1.53 1.010 0.768 1.98
1949 1.51 1.026 0.751 2.01
1950 1.47 0.986 0.741 2.01
1951 1.46 0.972 0.751 1.98
1952 1.46 1.003 0.754 2.01
1953 1.56 1.050 0.738 1.91
1954 1.51 1.034 0.715 1.87
1955 1.63 1.102 0.706 1.84
1956 1.70 1.149 0.706 1.80
1957 1.63 1.106 0.697 1.86
1958 1.51 1.051 0.705 1.98
1959 1.62 1.106 0.697 1.97
1960 1.68 1.135 0.696 1.95
1961 1.67 1.135 0.690 1.91
1962 1.70 1.145 0.685 1.96
1963 1.73 1.168 0.690 1.94
1964 1.77 1.188 0.699 1.90
1965 1.76 1.177 0.703 1.97
1966 1.78 1.172 0.710 2.00
1967 1.90 1.227 0.706 1.93
1968 1.93 1.240 0.731 1.92
1969 1.92 1.225 0.742 1.94
1970 1.96 1.238 0.745 1.91
1971 1.94 1.239 0.734 1.87
1972 1.91 1.218 0.757 1.98
1973 1.78 1.149 0.771 2.18
1974 1.90 1.232 0.694 2.01
1975 1.92 1.234 0.677 1.96
1976 2.04 1.275 0.719 1.84
1977 2.00 1.263 0.744 1.68
1978 1.94 1.235 0.750 1.82

> all.equal( fittedLaL$shares, estResultLaL$wFitted[ set, ],
+    check.attributes = FALSE )
[1] TRUE
> all.equal( fittedLaL$quant, estResultLaL$qFitted[ set, ],
+    check.attributes = FALSE )
[1] TRUE
> predictedLaL <- predict( estResultLaL, observedShares = TRUE )
Warning message:
In aidsPx(priceIndex = object$priceIndex, priceNames = object$priceNames,  :
  the base expenditure shares specified by element 'shares' of argument 'base' do not sum up to 1 (deviation from 1 = 0.001)
> all.equal( fittedLaL, predictedLaL )
[1] TRUE
> fittedLaL2 <- aidsCalc( pNames, "xFood", data = Blanciforti86[ set, ],
+    coef = estResultLaL$coef, priceIndex = "L",
+    basePrices = as.numeric( Blanciforti86[ 1, pNames ] ),
+    baseShares = as.numeric( Blanciforti86[ 1, wNames ] ) )
Warning message:
In aidsPx(priceIndex, priceNames, data = data, coef = coef, base = list(prices = basePrices,  :
  the base expenditure shares specified by element 'shares' of argument 'base' do not sum up to 1 (deviation from 1 = 0.001)
> all.equal( estResultLaL$wFitted, fittedLaL2$shares,
+    check.attributes = FALSE )
[1] TRUE
> all.equal( estResultLaL$qFitted, fittedLaL2$quant,
+    check.attributes = FALSE )
[1] TRUE
> predictedLaL2 <- predict( estResultLaL )
Warning message:
In aidsPx(priceIndex, priceNames, data = data, coef = coef, base = list(prices = basePrices,  :
  the base expenditure shares specified by element 'shares' of argument 'base' do not sum up to 1 (deviation from 1 = 0.001)
> all.equal( fittedLaL2, predictedLaL2 )
[1] TRUE
> 
> # LA-AIDS with simplified Laspeyres price index and NAs
> fittedLaLsNa <- aidsCalc( pNames, "xFood", data = Blanciforti86[ set, ],
+    coef = estResultLaLsNa$coef, priceIndex = estResultLaLsNa$lnp )
> print( fittedLaLsNa )
$shares
        w1    w2    w3    w4
1947 0.317 0.188 0.133 0.363
1948 0.316 0.172 0.135 0.377
1949 0.307 0.183 0.136 0.374
1950 0.313 0.169 0.137 0.382
1951 0.314 0.164 0.137 0.385
1952 0.303 0.181 0.137 0.379
1953 0.306 0.184 0.137 0.373
1954 0.299 0.183 0.139 0.379
1955 0.300 0.196 0.138 0.367
1956 0.294 0.211 0.137 0.358
1957 0.298 0.198 0.138 0.366
1958 0.293 0.196 0.138 0.373
1959 0.301 0.200 0.137 0.362
1960 0.300 0.206 0.136 0.357
1961 0.299 0.206 0.137 0.359
1962 0.304 0.205 0.136 0.356
1963 0.298 0.216 0.136 0.351
1964 0.295 0.224 0.135 0.346
1965 0.303 0.215 0.134 0.347
1966 0.313 0.206 0.133 0.348
1967 0.318 0.210 0.132 0.340
1968 0.315 0.219 0.131 0.336
1969 0.323 0.208 0.130 0.338
1970 0.327 0.206 0.130 0.337
1971 0.319 0.212 0.131 0.338
1972 0.326 0.208 0.129 0.338
1973 0.332 0.195 0.128 0.345
1974 0.318 0.214 0.131 0.338
1975 0.323 0.204 0.132 0.341
1976 0.329 0.206 0.130 0.335
1977 0.312 0.216 0.133 0.339
1978 0.317 0.211 0.131 0.340

$quant
       q1    q2    q3   q4
1947 1.65 1.083 0.792 1.94
1948 1.53 1.010 0.768 1.98
1949 1.51 1.026 0.751 2.01
1950 1.47 0.986 0.741 2.01
1951 1.46 0.972 0.751 1.98
1952 1.46 1.003 0.754 2.01
1953 1.56 1.050 0.738 1.91
1954 1.51 1.034 0.715 1.87
1955 1.63 1.102 0.706 1.84
1956 1.70 1.149 0.706 1.80
1957 1.63 1.106 0.697 1.86
1958 1.51 1.051 0.705 1.98
1959 1.62 1.106 0.697 1.97
1960 1.68 1.135 0.696 1.95
1961 1.67 1.135 0.690 1.91
1962 1.70 1.145 0.685 1.96
1963 1.73 1.168 0.690 1.94
1964 1.77 1.188 0.699 1.90
1965 1.76 1.177 0.703 1.97
1966 1.78 1.172 0.710 2.00
1967 1.90 1.227 0.706 1.93
1968 1.93 1.240 0.731 1.92
1969 1.92 1.225 0.742 1.94
1970 1.96 1.238 0.745 1.91
1971 1.94 1.239 0.734 1.87
1972 1.91 1.218 0.757 1.98
1973 1.78 1.149 0.771 2.18
1974 1.90 1.232 0.694 2.01
1975 1.92 1.234 0.677 1.96
1976 2.04 1.275 0.719 1.84
1977 2.00 1.263 0.744 1.68
1978 1.94 1.235 0.750 1.82

> all.equal( fittedLaLsNa$shares, estResultLaLsNa$wFitted[ set, ],
+    check.attributes = FALSE )
[1] TRUE
> all.equal( fittedLaLsNa$quant, estResultLaLsNa$qFitted[ set, ],
+    check.attributes = FALSE )
[1] TRUE
> predictedLaLsNa <- predict( estResultLaLsNa, observedShares = TRUE )
Warning message:
In aidsPx(priceIndex = object$priceIndex, priceNames = object$priceNames,  :
  the base expenditure shares specified by element 'shares' of argument 'base' do not sum up to 1 (deviation from 1 = 0.001)
> all.equal( fittedLaLsNa$shares, predictedLaLsNa$shares[ set, ],
+    check.attributes = FALSE )
[1] TRUE
> all.equal( fittedLaLsNa$quant, predictedLaLsNa$quant[ set, ],
+    check.attributes = FALSE )
[1] TRUE
> fittedLaLsNa2 <- aidsCalc( pNames, "xFood", data = Blanciforti86[ set, ],
+    coef = estResultLaLsNa$coef, priceIndex = "Ls",
+    baseShares = as.numeric( Blanciforti86[ 1, wNames ] ) )
Warning message:
In aidsPx(priceIndex, priceNames, data = data, coef = coef, base = list(shares = baseShares)) :
  the base expenditure shares specified by element 'shares' of argument 'base' do not sum up to 1 (deviation from 1 = 0.001)
> all.equal( estResultLaLsNa$wFitted, fittedLaLsNa2$shares,
+    check.attributes = FALSE )
[1] TRUE
> all.equal( estResultLaLsNa$qFitted, fittedLaLsNa2$quant,
+    check.attributes = FALSE )
[1] TRUE
> predictedLaLsNa2 <- predict( estResultLaLsNa )
Warning message:
In aidsPx(priceIndex, priceNames, data = data, coef = coef, base = list(shares = baseShares)) :
  the base expenditure shares specified by element 'shares' of argument 'base' do not sum up to 1 (deviation from 1 = 0.001)
> all.equal( fittedLaLsNa2$shares, predictedLaLsNa2$shares[ set, ],
+    check.attributes = FALSE )
[1] TRUE
> all.equal( fittedLaLsNa2$quant, predictedLaLsNa2$quant[ set, ],
+    check.attributes = FALSE )
[1] TRUE
> 
> # LA-AIDS with Tornqvist price index
> # obsereved shares in the Paasche price index
> fittedLaT <- aidsCalc( pNames, "xFood", data = Blanciforti86[ set, ],
+    coef = estResultLaT$coef, priceIndex = estResultLaT$lnp )
> print( fittedLaT )
$shares
        w1    w2    w3    w4
1947 0.317 0.188 0.133 0.362
1948 0.317 0.172 0.135 0.376
1949 0.308 0.183 0.136 0.374
1950 0.313 0.169 0.137 0.382
1951 0.315 0.164 0.137 0.384
1952 0.303 0.182 0.137 0.378
1953 0.306 0.184 0.137 0.373
1954 0.299 0.183 0.139 0.379
1955 0.300 0.196 0.138 0.367
1956 0.293 0.210 0.137 0.359
1957 0.298 0.198 0.138 0.366
1958 0.293 0.196 0.138 0.373
1959 0.300 0.200 0.137 0.363
1960 0.300 0.206 0.136 0.358
1961 0.298 0.206 0.137 0.359
1962 0.304 0.205 0.136 0.356
1963 0.297 0.216 0.136 0.351
1964 0.293 0.224 0.135 0.348
1965 0.303 0.215 0.134 0.348
1966 0.313 0.206 0.133 0.348
1967 0.318 0.210 0.132 0.341
1968 0.314 0.219 0.131 0.336
1969 0.324 0.208 0.130 0.338
1970 0.328 0.206 0.130 0.337
1971 0.319 0.212 0.131 0.338
1972 0.326 0.208 0.129 0.337
1973 0.332 0.196 0.128 0.345
1974 0.318 0.214 0.131 0.337
1975 0.323 0.204 0.132 0.341
1976 0.330 0.206 0.130 0.334
1977 0.312 0.216 0.133 0.339
1978 0.318 0.211 0.131 0.339

$quant
       q1    q2    q3   q4
1947 1.65 1.084 0.792 1.94
1948 1.53 1.011 0.768 1.98
1949 1.51 1.028 0.750 2.01
1950 1.47 0.987 0.741 2.01
1951 1.46 0.973 0.751 1.98
1952 1.46 1.004 0.754 2.01
1953 1.56 1.051 0.738 1.91
1954 1.51 1.034 0.715 1.87
1955 1.63 1.102 0.706 1.84
1956 1.70 1.147 0.706 1.80
1957 1.63 1.105 0.697 1.86
1958 1.51 1.051 0.705 1.99
1959 1.62 1.105 0.697 1.98
1960 1.67 1.134 0.696 1.95
1961 1.67 1.134 0.690 1.91
1962 1.70 1.144 0.685 1.96
1963 1.73 1.166 0.690 1.95
1964 1.76 1.187 0.700 1.91
1965 1.76 1.176 0.703 1.97
1966 1.78 1.172 0.710 2.00
1967 1.90 1.227 0.707 1.93
1968 1.93 1.239 0.731 1.93
1969 1.92 1.226 0.742 1.94
1970 1.97 1.239 0.744 1.91
1971 1.94 1.239 0.734 1.87
1972 1.91 1.219 0.757 1.98
1973 1.78 1.150 0.773 2.18
1974 1.90 1.232 0.693 2.01
1975 1.92 1.233 0.676 1.96
1976 2.05 1.275 0.718 1.83
1977 2.01 1.263 0.743 1.67
1978 1.94 1.235 0.749 1.82

> all.equal( fittedLaT$shares, estResultLaT$wFitted, check.attributes = FALSE )
[1] TRUE
> all.equal( fittedLaT$quant, estResultLaT$qFitted, check.attributes = FALSE )
[1] TRUE
> predictedLaT <- predict( estResultLaT, observedShares = TRUE )
Warning message:
In aidsPx(priceIndex = object$priceIndex, priceNames = object$priceNames,  :
  the base expenditure shares specified by element 'shares' of argument 'base' do not sum up to 1 (deviation from 1 = 0.001)
> all.equal( fittedLaT, predictedLaT )
[1] TRUE
> # fitted shares in the Tornqvist price index
> fittedLaT2 <- aidsCalc( pNames, "xFood", data = Blanciforti86[ set, ],
+    coef = estResultLaT$coef, priceIndex = "T",
+    basePrices = as.numeric( Blanciforti86[ 1, pNames ] ),
+    baseShares = as.numeric( Blanciforti86[ 1, wNames ] ) )
> print( fittedLaT2 )
$shares
        w1    w2    w3    w4
1947 0.317 0.188 0.133 0.362
1948 0.317 0.172 0.135 0.376
1949 0.308 0.183 0.136 0.374
1950 0.313 0.169 0.137 0.381
1951 0.314 0.164 0.137 0.384
1952 0.303 0.182 0.137 0.378
1953 0.306 0.184 0.137 0.373
1954 0.299 0.183 0.139 0.379
1955 0.300 0.196 0.138 0.367
1956 0.293 0.210 0.137 0.359
1957 0.298 0.198 0.138 0.366
1958 0.293 0.196 0.138 0.373
1959 0.301 0.200 0.136 0.363
1960 0.300 0.206 0.136 0.358
1961 0.298 0.206 0.137 0.359
1962 0.304 0.205 0.136 0.356
1963 0.297 0.216 0.136 0.351
1964 0.293 0.224 0.135 0.348
1965 0.303 0.215 0.134 0.348
1966 0.313 0.206 0.133 0.348
1967 0.318 0.210 0.132 0.340
1968 0.315 0.219 0.131 0.336
1969 0.324 0.208 0.130 0.338
1970 0.328 0.206 0.130 0.337
1971 0.319 0.212 0.131 0.338
1972 0.326 0.208 0.129 0.337
1973 0.332 0.196 0.128 0.344
1974 0.318 0.213 0.131 0.338
1975 0.323 0.204 0.132 0.340
1976 0.330 0.206 0.130 0.334
1977 0.312 0.216 0.133 0.339
1978 0.318 0.211 0.131 0.340

$quant
       q1    q2    q3   q4
1947 1.65 1.084 0.792 1.94
1948 1.53 1.011 0.768 1.98
1949 1.51 1.027 0.750 2.01
1950 1.47 0.987 0.741 2.01
1951 1.46 0.973 0.751 1.98
1952 1.46 1.004 0.753 2.01
1953 1.56 1.051 0.738 1.91
1954 1.51 1.034 0.715 1.87
1955 1.63 1.101 0.706 1.85
1956 1.70 1.147 0.706 1.80
1957 1.63 1.105 0.697 1.86
1958 1.51 1.051 0.705 1.99
1959 1.62 1.106 0.697 1.98
1960 1.67 1.134 0.696 1.95
1961 1.67 1.134 0.690 1.91
1962 1.70 1.144 0.685 1.96
1963 1.73 1.166 0.690 1.95
1964 1.76 1.187 0.700 1.91
1965 1.76 1.176 0.703 1.97
1966 1.78 1.172 0.710 2.00
1967 1.90 1.227 0.706 1.93
1968 1.93 1.239 0.731 1.93
1969 1.92 1.226 0.742 1.94
1970 1.96 1.239 0.744 1.91
1971 1.94 1.239 0.734 1.87
1972 1.91 1.219 0.757 1.98
1973 1.78 1.151 0.772 2.18
1974 1.90 1.232 0.694 2.01
1975 1.92 1.233 0.676 1.96
1976 2.05 1.275 0.718 1.83
1977 2.00 1.263 0.744 1.68
1978 1.94 1.235 0.749 1.82

> B86LaT2 <- cbind( Blanciforti86[ set, c( pNames, "xFood" ) ],
+    fittedLaT2$shares )
> lnp <- aidsPx( "T", pNames, shareNames = c( "w1", "w2", "w3", "w4" ),
+    data = B86LaT2, base = list(
+    prices = as.numeric( Blanciforti86[ 1, pNames ] ),
+    shares = as.numeric( Blanciforti86[ 1, wNames ] ) ) )
Warning message:
In aidsPx("T", pNames, shareNames = c("w1", "w2", "w3", "w4"), data = B86LaT2,  :
  the base expenditure shares specified by element 'shares' of argument 'base' do not sum up to 1 (deviation from 1 = 0.001)
> fittedLaT2b <- aidsCalc( pNames, "xFood", data = Blanciforti86[ set, ],
+    coef = estResultLaT$coef, priceIndex = lnp )
> all.equal( fittedLaT2, fittedLaT2b, check.attributes = FALSE )
[1] TRUE
> predictedLaT2 <- predict( estResultLaT )
> all.equal( fittedLaT2, predictedLaT2 )
[1] TRUE
> 
> # prediction with different data
> B86new <- Blanciforti86[ 2 * c( 1:floor( nrow( Blanciforti86 ) / 2 ) ),
+    c( pNames, wNames, "xFood" ) ]
> B86new$pFood1 <- B86new$pFood1 * 1.1
> B86new$xFood <- B86new$xFood * 1.05
> 
> predNewAIDS <- predict( estResultTl, newdata = B86new, observedShares = TRUE )
> print( predNewAIDS )
$shares
        w1    w2    w3    w4
1948 0.333 0.159 0.133 0.376
1950 0.329 0.156 0.134 0.381
1952 0.319 0.169 0.134 0.377
1954 0.315 0.170 0.137 0.379
1956 0.309 0.198 0.135 0.358
1958 0.309 0.183 0.136 0.372
1960 0.316 0.194 0.133 0.357
1962 0.319 0.192 0.133 0.356
1964 0.309 0.211 0.133 0.347
1966 0.329 0.193 0.130 0.348
1968 0.330 0.206 0.128 0.335
1970 0.343 0.193 0.127 0.336
1972 0.342 0.195 0.126 0.337
1974 0.334 0.201 0.129 0.337
1976 0.346 0.193 0.128 0.334
1978 0.334 0.198 0.129 0.339
1980    NA    NA    NA    NA

$quant
       q1    q2    q3   q4
1948 1.53 0.983 0.791 2.07
1950 1.48 0.959 0.763 2.11
1952 1.47 0.981 0.776 2.10
1954 1.52 1.010 0.738 1.96
1956 1.71 1.132 0.727 1.89
1958 1.52 1.032 0.726 2.08
1960 1.68 1.118 0.717 2.04
1962 1.71 1.127 0.706 2.06
1964 1.77 1.175 0.721 2.00
1966 1.78 1.155 0.731 2.10
1968 1.93 1.225 0.752 2.02
1970 1.96 1.219 0.766 2.00
1972 1.92 1.201 0.779 2.07
1974 1.90 1.216 0.714 2.11
1976 2.05 1.254 0.740 1.92
1978 1.95 1.217 0.772 1.91
1980   NA    NA    NA   NA

> predNewAIDS2 <- predict( estResultTl, newdata = B86new )
> all.equal( predNewAIDS, predNewAIDS2 )
[1] TRUE
> 
> predict( estResultLaS, newdata = B86new, observedShares = TRUE )
$shares
        w1    w2    w3    w4
1948 0.333 0.160 0.133 0.374
1950 0.328 0.157 0.134 0.381
1952 0.320 0.169 0.134 0.376
1954 0.314 0.170 0.137 0.379
1956 0.309 0.198 0.135 0.358
1958 0.310 0.183 0.135 0.371
1960 0.317 0.194 0.133 0.356
1962 0.320 0.192 0.133 0.354
1964 0.310 0.211 0.133 0.347
1966 0.329 0.194 0.130 0.347
1968 0.329 0.206 0.129 0.336
1970 0.345 0.194 0.127 0.334
1972 0.341 0.196 0.127 0.336
1974 0.334 0.201 0.129 0.336
1976 0.347 0.194 0.127 0.331
1978 0.334 0.199 0.129 0.338
1980    NA    NA    NA    NA

$quant
       q1    q2    q3   q4
1948 1.53 0.988 0.791 2.06
1950 1.47 0.961 0.765 2.11
1952 1.47 0.983 0.775 2.10
1954 1.52 1.010 0.739 1.96
1956 1.71 1.132 0.727 1.89
1958 1.52 1.033 0.725 2.08
1960 1.69 1.119 0.716 2.04
1962 1.71 1.129 0.704 2.05
1964 1.78 1.176 0.720 2.00
1966 1.78 1.158 0.731 2.09
1968 1.92 1.227 0.755 2.02
1970 1.97 1.227 0.765 1.99
1972 1.91 1.206 0.781 2.07
1974 1.90 1.220 0.714 2.10
1976 2.06 1.263 0.738 1.91
1978 1.95 1.223 0.771 1.90
1980   NA    NA    NA   NA

> predict( estResultLaS, newdata = B86new )
$shares
        w1    w2    w3    w4
1948 0.331 0.159 0.133 0.376
1950 0.328 0.157 0.134 0.381
1952 0.319 0.169 0.134 0.377
1954 0.315 0.170 0.137 0.379
1956 0.309 0.198 0.135 0.358
1958 0.310 0.183 0.135 0.371
1960 0.316 0.194 0.133 0.357
1962 0.320 0.192 0.133 0.355
1964 0.310 0.211 0.133 0.347
1966 0.329 0.194 0.130 0.347
1968 0.330 0.207 0.128 0.335
1970 0.343 0.194 0.127 0.336
1972 0.341 0.196 0.127 0.336
1974 0.333 0.201 0.129 0.337
1976 0.345 0.194 0.128 0.333
1978 0.334 0.199 0.129 0.338
1980    NA    NA    NA    NA

$quant
       q1    q2    q3   q4
1948 1.53 0.986 0.793 2.07
1950 1.47 0.961 0.765 2.11
1952 1.47 0.982 0.776 2.10
1954 1.52 1.010 0.738 1.96
1956 1.71 1.132 0.727 1.89
1958 1.52 1.033 0.725 2.08
1960 1.68 1.119 0.716 2.04
1962 1.71 1.128 0.705 2.06
1964 1.78 1.176 0.720 1.99
1966 1.78 1.158 0.731 2.09
1968 1.93 1.229 0.753 2.02
1970 1.96 1.225 0.768 2.00
1972 1.91 1.206 0.781 2.07
1974 1.90 1.219 0.715 2.10
1976 2.04 1.260 0.741 1.92
1978 1.95 1.222 0.772 1.90
1980   NA    NA    NA   NA

> 
> predict( estResultLaSl, newdata = B86new, observedShares = TRUE )
$shares
        w1    w2    w3    w4
1948    NA    NA    NA    NA
1950 0.331 0.158 0.134 0.377
1952 0.320 0.170 0.134 0.376
1954 0.316 0.171 0.137 0.376
1956 0.308 0.198 0.135 0.359
1958 0.313 0.184 0.135 0.369
1960 0.318 0.194 0.133 0.355
1962 0.322 0.192 0.133 0.353
1964 0.311 0.211 0.132 0.346
1966 0.331 0.194 0.130 0.344
1968 0.332 0.207 0.128 0.333
1970 0.344 0.195 0.128 0.334
1972 0.345 0.197 0.126 0.332
1974 0.335 0.201 0.129 0.335
1976 0.346 0.194 0.128 0.331
1978 0.336 0.201 0.129 0.335
1980    NA    NA    NA    NA

$quant
       q1    q2    q3   q4
1948   NA    NA    NA   NA
1950 1.49 0.969 0.763 2.09
1952 1.47 0.988 0.775 2.09
1954 1.53 1.016 0.738 1.95
1956 1.70 1.134 0.729 1.89
1958 1.53 1.037 0.722 2.06
1960 1.69 1.121 0.715 2.03
1962 1.72 1.130 0.704 2.04
1964 1.78 1.178 0.718 1.99
1966 1.80 1.161 0.729 2.08
1968 1.94 1.232 0.752 2.00
1970 1.97 1.229 0.770 1.99
1972 1.93 1.213 0.777 2.05
1974 1.91 1.220 0.714 2.09
1976 2.05 1.264 0.745 1.91
1978 1.96 1.230 0.771 1.88
1980   NA    NA    NA   NA

> predict( estResultLaSl, newdata = B86new )
$shares
        w1    w2    w3    w4
1948 0.333 0.161 0.133 0.373
1950 0.329 0.158 0.134 0.378
1952 0.320 0.170 0.134 0.375
1954 0.315 0.171 0.137 0.377
1956 0.309 0.198 0.135 0.358
1958 0.312 0.184 0.135 0.370
1960 0.318 0.194 0.133 0.355
1962 0.321 0.192 0.133 0.354
1964 0.311 0.211 0.132 0.345
1966 0.331 0.194 0.130 0.345
1968 0.332 0.207 0.128 0.333
1970 0.345 0.195 0.127 0.333
1972 0.343 0.196 0.127 0.334
1974 0.335 0.201 0.129 0.335
1976 0.346 0.194 0.128 0.331
1978 0.334 0.200 0.129 0.336
1980    NA    NA    NA    NA

$quant
       q1    q2    q3   q4
1948 1.53 0.994 0.794 2.06
1950 1.48 0.967 0.765 2.10
1952 1.47 0.988 0.775 2.09
1954 1.52 1.016 0.739 1.95
1956 1.71 1.135 0.728 1.89
1958 1.53 1.036 0.723 2.07
1960 1.69 1.121 0.715 2.03
1962 1.71 1.129 0.705 2.05
1964 1.78 1.178 0.718 1.99
1966 1.79 1.160 0.730 2.08
1968 1.94 1.232 0.752 2.01
1970 1.97 1.230 0.769 1.98
1972 1.92 1.211 0.780 2.06
1974 1.91 1.220 0.714 2.09
1976 2.05 1.264 0.745 1.91
1978 1.95 1.228 0.774 1.89
1980   NA    NA    NA   NA

> 
> predict( estResultLaP, newdata = B86new, observedShares = TRUE )
$shares
        w1    w2    w3    w4
1948 0.333 0.160 0.133 0.375
1950 0.329 0.157 0.134 0.381
1952 0.319 0.169 0.134 0.377
1954 0.315 0.170 0.136 0.378
1956 0.309 0.198 0.135 0.359
1958 0.310 0.183 0.136 0.372
1960 0.316 0.194 0.133 0.357
1962 0.320 0.192 0.133 0.355
1964 0.309 0.211 0.133 0.347
1966 0.329 0.194 0.130 0.347
1968 0.330 0.206 0.128 0.335
1970 0.344 0.194 0.127 0.335
1972 0.341 0.195 0.127 0.337
1974 0.334 0.201 0.129 0.337
1976 0.346 0.193 0.128 0.333
1978 0.334 0.199 0.129 0.338
1980    NA    NA    NA    NA

$quant
       q1    q2    q3   q4
1948 1.53 0.986 0.791 2.07
1950 1.48 0.961 0.764 2.11
1952 1.47 0.982 0.776 2.10
1954 1.52 1.011 0.737 1.96
1956 1.71 1.132 0.727 1.89
1958 1.52 1.033 0.726 2.08
1960 1.68 1.118 0.717 2.04
1962 1.71 1.127 0.706 2.06
1964 1.77 1.175 0.721 2.00
1966 1.78 1.156 0.731 2.09
1968 1.93 1.226 0.753 2.02
1970 1.97 1.223 0.767 1.99
1972 1.91 1.203 0.781 2.07
1974 1.90 1.217 0.715 2.10
1976 2.05 1.258 0.740 1.92
1978 1.95 1.220 0.772 1.90
1980   NA    NA    NA   NA

> predict( estResultLaP, newdata = B86new )
$shares
        w1    w2    w3    w4
1948 0.332 0.159 0.133 0.376
1950 0.328 0.157 0.134 0.381
1952 0.319 0.169 0.134 0.377
1954 0.315 0.170 0.137 0.378
1956 0.309 0.198 0.135 0.358
1958 0.310 0.183 0.136 0.372
1960 0.316 0.194 0.133 0.357
1962 0.320 0.192 0.133 0.355
1964 0.309 0.211 0.133 0.347
1966 0.329 0.194 0.130 0.347
1968 0.330 0.206 0.128 0.335
1970 0.344 0.194 0.127 0.336
1972 0.342 0.195 0.127 0.336
1974 0.333 0.201 0.129 0.337
1976 0.346 0.193 0.128 0.333
1978 0.334 0.199 0.129 0.338
1980    NA    NA    NA    NA

$quant
       q1    q2    q3   q4
1948 1.53 0.985 0.793 2.07
1950 1.47 0.960 0.765 2.11
1952 1.47 0.982 0.777 2.10
1954 1.52 1.011 0.737 1.96
1956 1.71 1.132 0.727 1.89
1958 1.52 1.033 0.725 2.08
1960 1.68 1.118 0.717 2.04
1962 1.71 1.127 0.705 2.06
1964 1.78 1.175 0.721 2.00
1966 1.78 1.156 0.732 2.09
1968 1.93 1.227 0.753 2.02
1970 1.97 1.222 0.767 2.00
1972 1.91 1.203 0.781 2.07
1974 1.90 1.217 0.715 2.10
1976 2.05 1.258 0.740 1.92
1978 1.95 1.220 0.771 1.90
1980   NA    NA    NA   NA

> 
> predict( estResultLaL, newdata = B86new, observedShares = TRUE )
$shares
        w1    w2    w3    w4
1948 0.332 0.159 0.133 0.377
1950 0.328 0.156 0.134 0.382
1952 0.318 0.169 0.134 0.379
1954 0.314 0.170 0.136 0.379
1956 0.309 0.198 0.135 0.358
1958 0.309 0.183 0.136 0.373
1960 0.316 0.193 0.133 0.357
1962 0.319 0.192 0.133 0.356
1964 0.310 0.211 0.133 0.346
1966 0.328 0.193 0.130 0.348
1968 0.330 0.206 0.128 0.336
1970 0.343 0.193 0.127 0.337
1972 0.341 0.195 0.126 0.338
1974 0.333 0.201 0.129 0.338
1976 0.345 0.193 0.128 0.335
1978 0.333 0.198 0.129 0.340
1980    NA    NA    NA    NA

$quant
       q1    q2    q3   q4
1948 1.53 0.981 0.791 2.08
1950 1.47 0.957 0.763 2.12
1952 1.46 0.978 0.777 2.11
1954 1.52 1.009 0.737 1.96
1956 1.71 1.132 0.727 1.89
1958 1.51 1.031 0.726 2.08
1960 1.68 1.117 0.717 2.04
1962 1.70 1.126 0.706 2.06
1964 1.78 1.176 0.720 1.99
1966 1.78 1.154 0.731 2.10
1968 1.93 1.225 0.752 2.02
1970 1.96 1.219 0.766 2.01
1972 1.91 1.200 0.779 2.08
1974 1.90 1.216 0.714 2.11
1976 2.04 1.254 0.740 1.93
1978 1.94 1.217 0.772 1.91
1980   NA    NA    NA   NA

Warning message:
In aidsPx(priceIndex = object$priceIndex, priceNames = object$priceNames,  :
  the base expenditure shares specified by element 'shares' of argument 'base' do not sum up to 1 (deviation from 1 = 0.001)
> predict( estResultLaL, newdata = B86new )
$shares
        w1    w2    w3    w4
1948 0.332 0.159 0.133 0.377
1950 0.328 0.156 0.134 0.382
1952 0.318 0.169 0.134 0.379
1954 0.314 0.170 0.136 0.379
1956 0.309 0.198 0.135 0.358
1958 0.309 0.183 0.136 0.373
1960 0.316 0.193 0.133 0.357
1962 0.319 0.192 0.133 0.356
1964 0.310 0.211 0.133 0.346
1966 0.328 0.193 0.130 0.348
1968 0.330 0.206 0.128 0.336
1970 0.343 0.193 0.127 0.337
1972 0.341 0.195 0.126 0.338
1974 0.333 0.201 0.129 0.338
1976 0.345 0.193 0.128 0.335
1978 0.333 0.198 0.129 0.340
1980    NA    NA    NA    NA

$quant
       q1    q2    q3   q4
1948 1.53 0.981 0.791 2.08
1950 1.47 0.957 0.763 2.12
1952 1.46 0.978 0.777 2.11
1954 1.52 1.009 0.737 1.96
1956 1.71 1.132 0.727 1.89
1958 1.51 1.031 0.726 2.08
1960 1.68 1.117 0.717 2.04
1962 1.70 1.126 0.706 2.06
1964 1.78 1.176 0.720 1.99
1966 1.78 1.154 0.731 2.10
1968 1.93 1.225 0.752 2.02
1970 1.96 1.219 0.766 2.01
1972 1.91 1.200 0.779 2.08
1974 1.90 1.216 0.714 2.11
1976 2.04 1.254 0.740 1.93
1978 1.94 1.217 0.772 1.91
1980   NA    NA    NA   NA

Warning message:
In aidsPx(priceIndex, priceNames, data = data, coef = coef, base = list(prices = basePrices,  :
  the base expenditure shares specified by element 'shares' of argument 'base' do not sum up to 1 (deviation from 1 = 0.001)
> 
> predict( estResultLaLs, newdata = B86new, observedShares = TRUE )
$shares
        w1    w2    w3    w4
1948 0.332 0.159 0.133 0.377
1950 0.328 0.156 0.134 0.382
1952 0.318 0.169 0.134 0.379
1954 0.314 0.170 0.136 0.379
1956 0.309 0.198 0.135 0.358
1958 0.309 0.183 0.136 0.373
1960 0.316 0.193 0.133 0.357
1962 0.319 0.192 0.133 0.356
1964 0.310 0.211 0.133 0.346
1966 0.328 0.193 0.130 0.348
1968 0.330 0.206 0.128 0.336
1970 0.343 0.193 0.127 0.337
1972 0.341 0.195 0.126 0.338
1974 0.333 0.201 0.129 0.338
1976 0.345 0.193 0.128 0.335
1978 0.333 0.198 0.129 0.340
1980    NA    NA    NA    NA

$quant
       q1    q2    q3   q4
1948 1.53 0.981 0.791 2.08
1950 1.47 0.957 0.763 2.12
1952 1.46 0.978 0.777 2.11
1954 1.52 1.009 0.737 1.96
1956 1.71 1.132 0.727 1.89
1958 1.51 1.031 0.726 2.08
1960 1.68 1.117 0.717 2.04
1962 1.70 1.126 0.706 2.06
1964 1.78 1.176 0.720 1.99
1966 1.78 1.154 0.731 2.10
1968 1.93 1.225 0.752 2.02
1970 1.96 1.219 0.766 2.01
1972 1.91 1.200 0.779 2.08
1974 1.90 1.216 0.714 2.11
1976 2.04 1.254 0.740 1.93
1978 1.94 1.217 0.772 1.91
1980   NA    NA    NA   NA

Warning message:
In aidsPx(priceIndex = object$priceIndex, priceNames = object$priceNames,  :
  the base expenditure shares specified by element 'shares' of argument 'base' do not sum up to 1 (deviation from 1 = 0.001)
> predict( estResultLaLs, newdata = B86new )
$shares
        w1    w2    w3    w4
1948 0.332 0.159 0.133 0.377
1950 0.328 0.156 0.134 0.382
1952 0.318 0.169 0.134 0.379
1954 0.314 0.170 0.136 0.379
1956 0.309 0.198 0.135 0.358
1958 0.309 0.183 0.136 0.373
1960 0.316 0.193 0.133 0.357
1962 0.319 0.192 0.133 0.356
1964 0.310 0.211 0.133 0.346
1966 0.328 0.193 0.130 0.348
1968 0.330 0.206 0.128 0.336
1970 0.343 0.193 0.127 0.337
1972 0.341 0.195 0.126 0.338
1974 0.333 0.201 0.129 0.338
1976 0.345 0.193 0.128 0.335
1978 0.333 0.198 0.129 0.340
1980    NA    NA    NA    NA

$quant
       q1    q2    q3   q4
1948 1.53 0.981 0.791 2.08
1950 1.47 0.957 0.763 2.12
1952 1.46 0.978 0.777 2.11
1954 1.52 1.009 0.737 1.96
1956 1.71 1.132 0.727 1.89
1958 1.51 1.031 0.726 2.08
1960 1.68 1.117 0.717 2.04
1962 1.70 1.126 0.706 2.06
1964 1.78 1.176 0.720 1.99
1966 1.78 1.154 0.731 2.10
1968 1.93 1.225 0.752 2.02
1970 1.96 1.219 0.766 2.01
1972 1.91 1.200 0.779 2.08
1974 1.90 1.216 0.714 2.11
1976 2.04 1.254 0.740 1.93
1978 1.94 1.217 0.772 1.91
1980   NA    NA    NA   NA

Warning message:
In aidsPx(priceIndex, priceNames, data = data, coef = coef, base = list(shares = baseShares)) :
  the base expenditure shares specified by element 'shares' of argument 'base' do not sum up to 1 (deviation from 1 = 0.001)
> 
> predict( estResultLaT, newdata = B86new, observedShares = TRUE )
$shares
        w1    w2    w3    w4
1948 0.332 0.159 0.133 0.376
1950 0.328 0.156 0.134 0.381
1952 0.319 0.169 0.134 0.378
1954 0.315 0.170 0.136 0.379
1956 0.309 0.198 0.135 0.358
1958 0.309 0.183 0.136 0.372
1960 0.316 0.194 0.133 0.357
1962 0.319 0.192 0.133 0.356
1964 0.309 0.211 0.133 0.347
1966 0.328 0.193 0.130 0.348
1968 0.330 0.206 0.128 0.336
1970 0.343 0.193 0.127 0.336
1972 0.341 0.195 0.127 0.337
1974 0.333 0.201 0.129 0.337
1976 0.346 0.193 0.128 0.334
1978 0.333 0.199 0.129 0.339
1980    NA    NA    NA    NA

$quant
       q1    q2    q3   q4
1948 1.53 0.983 0.791 2.07
1950 1.47 0.959 0.764 2.11
1952 1.47 0.980 0.776 2.11
1954 1.52 1.010 0.737 1.96
1956 1.71 1.132 0.727 1.89
1958 1.51 1.032 0.726 2.08
1960 1.68 1.118 0.717 2.04
1962 1.70 1.127 0.706 2.06
1964 1.77 1.175 0.721 2.00
1966 1.78 1.155 0.731 2.10
1968 1.93 1.226 0.753 2.02
1970 1.96 1.221 0.766 2.00
1972 1.91 1.201 0.780 2.08
1974 1.90 1.216 0.714 2.11
1976 2.05 1.256 0.740 1.92
1978 1.95 1.219 0.772 1.91
1980   NA    NA    NA   NA

Warning message:
In aidsPx(priceIndex = object$priceIndex, priceNames = object$priceNames,  :
  the base expenditure shares specified by element 'shares' of argument 'base' do not sum up to 1 (deviation from 1 = 0.001)
> predict( estResultLaT, newdata = B86new )
$shares
        w1    w2    w3    w4
1948 0.332 0.159 0.133 0.377
1950 0.328 0.156 0.134 0.382
1952 0.319 0.169 0.134 0.378
1954 0.315 0.170 0.137 0.379
1956 0.309 0.198 0.135 0.358
1958 0.309 0.183 0.136 0.372
1960 0.316 0.194 0.133 0.357
1962 0.319 0.192 0.133 0.356
1964 0.310 0.211 0.133 0.347
1966 0.328 0.193 0.130 0.348
1968 0.330 0.206 0.128 0.335
1970 0.343 0.193 0.127 0.336
1972 0.341 0.195 0.127 0.337
1974 0.333 0.201 0.129 0.337
1976 0.345 0.193 0.128 0.334
1978 0.333 0.199 0.129 0.339
1980    NA    NA    NA    NA

$quant
       q1    q2    q3   q4
1948 1.53 0.983 0.792 2.08
1950 1.47 0.958 0.764 2.11
1952 1.47 0.980 0.777 2.11
1954 1.52 1.010 0.737 1.96
1956 1.71 1.132 0.727 1.89
1958 1.51 1.032 0.726 2.08
1960 1.68 1.118 0.717 2.04
1962 1.71 1.127 0.706 2.06
1964 1.78 1.176 0.720 2.00
1966 1.78 1.155 0.731 2.10
1968 1.93 1.226 0.752 2.02
1970 1.96 1.221 0.767 2.00
1972 1.91 1.201 0.780 2.08
1974 1.90 1.216 0.714 2.11
1976 2.05 1.256 0.740 1.92
1978 1.95 1.219 0.772 1.91
1980   NA    NA    NA   NA

> 
> 
> ###############  aidsUtility  #################
> coefTl <- coef( estResultTl )
> aidsUtility( pNames, "xFood", coef = coefTl, data = Blanciforti86[ set, ] )
 [1] 1.70 1.66 1.67 1.65 1.64 1.65 1.66 1.64 1.66 1.68 1.66 1.66 1.69 1.70 1.69
[16] 1.70 1.71 1.71 1.72 1.73 1.75 1.76 1.76 1.77 1.76 1.77 1.77 1.76 1.75 1.77
[31] 1.73 1.75
> coefTl$beta0 <- 2
> aidsUtility( pNames, "xFood", coef = coefTl, data = Blanciforti86[ set, ] )
 [1] 0.849 0.832 0.834 0.826 0.822 0.827 0.830 0.818 0.832 0.838 0.832 0.829
[13] 0.843 0.848 0.844 0.851 0.855 0.857 0.862 0.866 0.876 0.881 0.882 0.883
[25] 0.878 0.885 0.884 0.882 0.877 0.884 0.866 0.873
> 
> aidsUtility( pNames, "xFood", coef = coef( estResultAIDS ),
+    data = Blanciforti86[ setWo1, ] )
 [1] 1.66 1.67 1.65 1.64 1.65 1.66 1.64 1.66 1.68 1.66 1.66 1.69 1.70 1.69 1.70
[16] 1.71 1.71 1.72 1.73 1.75 1.76 1.76 1.77 1.76 1.77 1.77 1.76 1.75 1.77 1.73
[31] 1.75
> 
> aidsUtility( pNames, "xFood", coef = coef( estResultAIDShom ),
+    data = Blanciforti86[ setWo1, ] )
 [1] 1.66 1.67 1.65 1.64 1.65 1.66 1.64 1.66 1.68 1.66 1.66 1.69 1.70 1.69 1.70
[16] 1.71 1.71 1.72 1.73 1.75 1.76 1.76 1.77 1.76 1.77 1.77 1.76 1.75 1.77 1.73
[31] 1.75
> 
> aidsUtility( pNames, "xFood", coef = coef( estResultAIDSunr ),
+    data = Blanciforti86[ setWo1, ] )
 [1] 1.67 1.67 1.66 1.65 1.66 1.66 1.63 1.66 1.66 1.66 1.66 1.69 1.69 1.68 1.70
[16] 1.71 1.71 1.72 1.73 1.75 1.76 1.76 1.76 1.75 1.77 1.78 1.76 1.75 1.76 1.71
[31] 1.74
> 
> aidsUtility( pNames, "xFood", coef = coef( estResultAIDSNa ),
+    data = Blanciforti86[ setWo1, ] )
 [1] 1.66 1.67 1.65 1.64 1.65 1.66 1.64 1.66 1.68 1.66 1.66 1.69 1.70 1.69 1.70
[16] 1.71 1.71 1.72 1.73 1.75 1.76 1.76 1.77 1.76 1.77 1.77 1.76 1.75 1.77 1.73
[31] 1.75
> 
> 
> ###############  aidsUtilityDeriv  #################
> coefTl <- coef( estResultTl )
> aidsUtilityDeriv( pNames, "xFood", coef = coefTl,
+    data = Blanciforti86[ set, ] )
     pFood1   pFood2    pFood3   pFood4   xFood
1  -0.00524 -0.00344 -0.002515 -0.00616 0.00318
2  -0.00455 -0.00301 -0.002288 -0.00588 0.00298
3  -0.00466 -0.00317 -0.002313 -0.00620 0.00308
4  -0.00452 -0.00303 -0.002276 -0.00618 0.00307
5  -0.00408 -0.00271 -0.002093 -0.00552 0.00279
6  -0.00396 -0.00272 -0.002044 -0.00545 0.00271
7  -0.00437 -0.00294 -0.002068 -0.00535 0.00280
8  -0.00440 -0.00301 -0.002078 -0.00543 0.00291
9  -0.00477 -0.00323 -0.002065 -0.00540 0.00293
10 -0.00499 -0.00337 -0.002069 -0.00529 0.00293
11 -0.00458 -0.00311 -0.001961 -0.00523 0.00281
12 -0.00397 -0.00277 -0.001859 -0.00524 0.00264
13 -0.00427 -0.00292 -0.001838 -0.00521 0.00264
14 -0.00437 -0.00296 -0.001817 -0.00509 0.00261
15 -0.00437 -0.00297 -0.001805 -0.00501 0.00261
16 -0.00430 -0.00290 -0.001735 -0.00498 0.00253
17 -0.00431 -0.00291 -0.001725 -0.00487 0.00250
18 -0.00437 -0.00295 -0.001738 -0.00473 0.00248
19 -0.00415 -0.00278 -0.001662 -0.00466 0.00236
20 -0.00390 -0.00258 -0.001563 -0.00440 0.00220
21 -0.00417 -0.00269 -0.001548 -0.00423 0.00219
22 -0.00403 -0.00259 -0.001532 -0.00404 0.00209
23 -0.00378 -0.00241 -0.001461 -0.00383 0.00197
24 -0.00367 -0.00232 -0.001393 -0.00357 0.00187
25 -0.00361 -0.00230 -0.001363 -0.00348 0.00186
26 -0.00326 -0.00208 -0.001291 -0.00338 0.00170
27 -0.00252 -0.00163 -0.001087 -0.00306 0.00141
28 -0.00250 -0.00162 -0.000916 -0.00265 0.00132
29 -0.00237 -0.00153 -0.000837 -0.00243 0.00124
30 -0.00247 -0.00153 -0.000864 -0.00221 0.00120
31 -0.00245 -0.00154 -0.000901 -0.00203 0.00122
32 -0.00204 -0.00130 -0.000786 -0.00191 0.00105
> aidsUtilityDeriv( pNames, "xFood", coef = coefTl,
+    data = Blanciforti86[ set, ], rel = TRUE )
   pFood1  pFood2  pFood3 pFood4 xFood
1  -0.184 -0.1090 -0.0771 -0.210 0.581
2  -0.185 -0.1003 -0.0789 -0.219 0.583
3  -0.179 -0.1065 -0.0790 -0.217 0.582
4  -0.183 -0.0989 -0.0799 -0.223 0.585
5  -0.185 -0.0969 -0.0806 -0.226 0.589
6  -0.177 -0.1063 -0.0801 -0.221 0.585
7  -0.184 -0.1108 -0.0823 -0.224 0.602
8  -0.185 -0.1132 -0.0860 -0.234 0.619
9  -0.186 -0.1213 -0.0853 -0.227 0.619
10 -0.184 -0.1318 -0.0860 -0.225 0.626
11 -0.184 -0.1223 -0.0853 -0.226 0.619
12 -0.175 -0.1171 -0.0828 -0.223 0.598
13 -0.179 -0.1192 -0.0812 -0.216 0.595
14 -0.179 -0.1233 -0.0813 -0.214 0.598
15 -0.181 -0.1248 -0.0829 -0.218 0.606
16 -0.180 -0.1217 -0.0807 -0.212 0.595
17 -0.177 -0.1289 -0.0810 -0.210 0.597
18 -0.177 -0.1350 -0.0817 -0.210 0.603
19 -0.178 -0.1263 -0.0788 -0.205 0.587
20 -0.181 -0.1192 -0.0768 -0.201 0.578
21 -0.186 -0.1228 -0.0771 -0.199 0.585
22 -0.183 -0.1271 -0.0761 -0.195 0.581
23 -0.186 -0.1196 -0.0747 -0.194 0.574
24 -0.189 -0.1189 -0.0748 -0.195 0.578
25 -0.188 -0.1249 -0.0771 -0.199 0.589
26 -0.184 -0.1173 -0.0730 -0.191 0.565
27 -0.179 -0.1047 -0.0684 -0.184 0.535
28 -0.182 -0.1222 -0.0752 -0.194 0.573
29 -0.188 -0.1189 -0.0768 -0.198 0.582
30 -0.196 -0.1217 -0.0770 -0.198 0.592
31 -0.197 -0.1359 -0.0833 -0.212 0.629
32 -0.190 -0.1263 -0.0784 -0.203 0.598
> 
> coefTl$beta0 <- 2
> aidsUtilityDeriv( pNames, "xFood", coef = coefTl,
+    data = Blanciforti86[ set, ] )
     pFood1    pFood2    pFood3    pFood4    xFood
1  -0.00262 -0.001721 -0.001257 -0.003079 0.001588
2  -0.00228 -0.001506 -0.001144 -0.002942 0.001489
3  -0.00233 -0.001584 -0.001157 -0.003099 0.001541
4  -0.00226 -0.001517 -0.001138 -0.003089 0.001536
5  -0.00204 -0.001356 -0.001047 -0.002758 0.001393
6  -0.00198 -0.001361 -0.001022 -0.002723 0.001356
7  -0.00219 -0.001472 -0.001034 -0.002673 0.001401
8  -0.00220 -0.001503 -0.001039 -0.002714 0.001453
9  -0.00239 -0.001613 -0.001032 -0.002699 0.001464
10 -0.00250 -0.001684 -0.001034 -0.002643 0.001467
11 -0.00229 -0.001556 -0.000980 -0.002615 0.001407
12 -0.00198 -0.001386 -0.000929 -0.002618 0.001318
13 -0.00214 -0.001458 -0.000919 -0.002605 0.001319
14 -0.00218 -0.001481 -0.000909 -0.002544 0.001305
15 -0.00218 -0.001483 -0.000902 -0.002503 0.001307
16 -0.00215 -0.001449 -0.000868 -0.002488 0.001266
17 -0.00215 -0.001457 -0.000862 -0.002436 0.001249
18 -0.00219 -0.001474 -0.000869 -0.002366 0.001241
19 -0.00208 -0.001389 -0.000831 -0.002331 0.001181
20 -0.00195 -0.001289 -0.000781 -0.002200 0.001100
21 -0.00208 -0.001344 -0.000774 -0.002114 0.001096
22 -0.00201 -0.001297 -0.000766 -0.002019 0.001047
23 -0.00189 -0.001206 -0.000731 -0.001914 0.000985
24 -0.00184 -0.001158 -0.000697 -0.001785 0.000936
25 -0.00180 -0.001150 -0.000682 -0.001740 0.000929
26 -0.00163 -0.001038 -0.000646 -0.001688 0.000852
27 -0.00126 -0.000813 -0.000544 -0.001531 0.000706
28 -0.00125 -0.000812 -0.000458 -0.001327 0.000660
29 -0.00119 -0.000763 -0.000418 -0.001214 0.000619
30 -0.00123 -0.000767 -0.000432 -0.001103 0.000602
31 -0.00122 -0.000768 -0.000451 -0.001014 0.000608
32 -0.00102 -0.000648 -0.000393 -0.000953 0.000525
> aidsUtilityDeriv( pNames, "xFood", coef = coefTl,
+    data = Blanciforti86[ set, ], rel = TRUE )
   pFood1  pFood2  pFood3 pFood4 xFood
1  -0.184 -0.1090 -0.0771 -0.210 0.581
2  -0.185 -0.1003 -0.0789 -0.219 0.583
3  -0.179 -0.1065 -0.0790 -0.217 0.582
4  -0.183 -0.0989 -0.0799 -0.223 0.585
5  -0.185 -0.0969 -0.0806 -0.226 0.589
6  -0.177 -0.1063 -0.0801 -0.221 0.585
7  -0.184 -0.1108 -0.0823 -0.224 0.602
8  -0.185 -0.1132 -0.0860 -0.234 0.619
9  -0.186 -0.1213 -0.0853 -0.227 0.619
10 -0.184 -0.1318 -0.0860 -0.225 0.626
11 -0.184 -0.1223 -0.0853 -0.226 0.619
12 -0.175 -0.1171 -0.0828 -0.223 0.598
13 -0.179 -0.1192 -0.0812 -0.216 0.595
14 -0.179 -0.1233 -0.0813 -0.214 0.598
15 -0.181 -0.1248 -0.0829 -0.218 0.606
16 -0.180 -0.1217 -0.0807 -0.212 0.595
17 -0.177 -0.1289 -0.0810 -0.210 0.597
18 -0.177 -0.1350 -0.0817 -0.210 0.603
19 -0.178 -0.1263 -0.0788 -0.205 0.587
20 -0.181 -0.1192 -0.0768 -0.201 0.578
21 -0.186 -0.1228 -0.0771 -0.199 0.585
22 -0.183 -0.1271 -0.0761 -0.195 0.581
23 -0.186 -0.1196 -0.0747 -0.194 0.574
24 -0.189 -0.1189 -0.0748 -0.195 0.578
25 -0.188 -0.1249 -0.0771 -0.199 0.589
26 -0.184 -0.1173 -0.0730 -0.191 0.565
27 -0.179 -0.1047 -0.0684 -0.184 0.535
28 -0.182 -0.1222 -0.0752 -0.194 0.573
29 -0.188 -0.1189 -0.0768 -0.198 0.582
30 -0.196 -0.1217 -0.0770 -0.198 0.592
31 -0.197 -0.1359 -0.0833 -0.212 0.629
32 -0.190 -0.1263 -0.0784 -0.203 0.598
> 
> aidsUtilityDeriv( pNames, "xFood", coef = coef( estResultAIDS ),
+    data = Blanciforti86[ setWo1, ] )
     pFood1   pFood2    pFood3   pFood4   xFood
1  -0.00457 -0.00304 -0.002295 -0.00586 0.00299
2  -0.00469 -0.00319 -0.002309 -0.00618 0.00308
3  -0.00455 -0.00306 -0.002280 -0.00616 0.00308
4  -0.00410 -0.00274 -0.002101 -0.00550 0.00279
5  -0.00398 -0.00274 -0.002037 -0.00543 0.00271
6  -0.00439 -0.00296 -0.002072 -0.00534 0.00281
7  -0.00441 -0.00302 -0.002082 -0.00543 0.00291
8  -0.00478 -0.00323 -0.002069 -0.00540 0.00293
9  -0.00500 -0.00337 -0.002068 -0.00529 0.00294
10 -0.00459 -0.00311 -0.001963 -0.00523 0.00282
11 -0.00398 -0.00277 -0.001849 -0.00523 0.00264
12 -0.00428 -0.00291 -0.001832 -0.00520 0.00264
13 -0.00438 -0.00296 -0.001812 -0.00508 0.00261
14 -0.00438 -0.00296 -0.001801 -0.00500 0.00261
15 -0.00431 -0.00289 -0.001731 -0.00497 0.00253
16 -0.00431 -0.00291 -0.001716 -0.00487 0.00250
17 -0.00438 -0.00294 -0.001728 -0.00473 0.00248
18 -0.00416 -0.00277 -0.001654 -0.00465 0.00236
19 -0.00391 -0.00258 -0.001559 -0.00438 0.00220
20 -0.00417 -0.00269 -0.001551 -0.00421 0.00219
21 -0.00403 -0.00260 -0.001529 -0.00402 0.00209
22 -0.00379 -0.00243 -0.001464 -0.00381 0.00197
23 -0.00368 -0.00233 -0.001399 -0.00355 0.00187
24 -0.00361 -0.00231 -0.001367 -0.00347 0.00186
25 -0.00327 -0.00209 -0.001292 -0.00335 0.00170
26 -0.00253 -0.00164 -0.001084 -0.00303 0.00141
27 -0.00251 -0.00162 -0.000915 -0.00264 0.00132
28 -0.00238 -0.00153 -0.000840 -0.00242 0.00124
29 -0.00247 -0.00154 -0.000872 -0.00220 0.00121
30 -0.00245 -0.00155 -0.000908 -0.00203 0.00122
31 -0.00204 -0.00130 -0.000789 -0.00190 0.00105
> aidsUtilityDeriv( pNames, "xFood", coef = coef( estResultAIDS ),
+    data = Blanciforti86[ setWo1, ], rel = TRUE )
   pFood1  pFood2  pFood3 pFood4 xFood
1  -0.186 -0.1013 -0.0791 -0.219 0.585
2  -0.180 -0.1071 -0.0789 -0.217 0.582
3  -0.184 -0.0996 -0.0801 -0.222 0.586
4  -0.186 -0.0978 -0.0809 -0.226 0.591
5  -0.178 -0.1069 -0.0798 -0.221 0.586
6  -0.185 -0.1115 -0.0825 -0.224 0.603
7  -0.186 -0.1136 -0.0862 -0.234 0.620
8  -0.186 -0.1215 -0.0854 -0.227 0.620
9  -0.184 -0.1319 -0.0860 -0.225 0.627
10 -0.185 -0.1223 -0.0854 -0.227 0.619
11 -0.176 -0.1169 -0.0823 -0.223 0.598
12 -0.179 -0.1190 -0.0810 -0.215 0.595
13 -0.180 -0.1231 -0.0811 -0.214 0.597
14 -0.181 -0.1246 -0.0827 -0.218 0.606
15 -0.181 -0.1214 -0.0805 -0.212 0.594
16 -0.178 -0.1285 -0.0806 -0.210 0.596
17 -0.177 -0.1346 -0.0812 -0.210 0.603
18 -0.178 -0.1261 -0.0785 -0.204 0.587
19 -0.181 -0.1193 -0.0767 -0.201 0.578
20 -0.186 -0.1230 -0.0772 -0.198 0.585
21 -0.183 -0.1274 -0.0760 -0.195 0.581
22 -0.186 -0.1202 -0.0748 -0.193 0.574
23 -0.189 -0.1198 -0.0752 -0.194 0.578
24 -0.188 -0.1255 -0.0773 -0.198 0.589
25 -0.185 -0.1181 -0.0730 -0.190 0.565
26 -0.179 -0.1056 -0.0682 -0.182 0.535
27 -0.182 -0.1221 -0.0751 -0.193 0.572
28 -0.188 -0.1189 -0.0771 -0.198 0.582
29 -0.196 -0.1225 -0.0777 -0.197 0.593
30 -0.197 -0.1370 -0.0839 -0.212 0.630
31 -0.190 -0.1271 -0.0787 -0.202 0.598
> 
> aidsUtilityDeriv( pNames, "xFood", coef = coef( estResultAIDShom ),
+    data = Blanciforti86[ setWo1, ] )
     pFood1   pFood2    pFood3   pFood4   xFood
1  -0.00459 -0.00308 -0.002218 -0.00589 0.00299
2  -0.00470 -0.00319 -0.002254 -0.00621 0.00308
3  -0.00455 -0.00310 -0.002211 -0.00618 0.00308
4  -0.00410 -0.00279 -0.002027 -0.00552 0.00279
5  -0.00399 -0.00274 -0.001985 -0.00547 0.00271
6  -0.00440 -0.00298 -0.002028 -0.00536 0.00281
7  -0.00441 -0.00305 -0.002044 -0.00545 0.00291
8  -0.00479 -0.00325 -0.002052 -0.00541 0.00293
9  -0.00501 -0.00336 -0.002070 -0.00531 0.00294
10 -0.00459 -0.00312 -0.001953 -0.00524 0.00282
11 -0.00398 -0.00276 -0.001834 -0.00526 0.00264
12 -0.00428 -0.00290 -0.001828 -0.00522 0.00264
13 -0.00438 -0.00294 -0.001815 -0.00509 0.00261
14 -0.00438 -0.00295 -0.001805 -0.00501 0.00261
15 -0.00430 -0.00288 -0.001737 -0.00497 0.00253
16 -0.00432 -0.00287 -0.001732 -0.00488 0.00250
17 -0.00439 -0.00290 -0.001749 -0.00475 0.00248
18 -0.00417 -0.00274 -0.001666 -0.00466 0.00236
19 -0.00392 -0.00256 -0.001561 -0.00439 0.00220
20 -0.00418 -0.00268 -0.001558 -0.00421 0.00219
21 -0.00405 -0.00257 -0.001538 -0.00403 0.00209
22 -0.00380 -0.00241 -0.001460 -0.00381 0.00197
23 -0.00369 -0.00233 -0.001393 -0.00355 0.00187
24 -0.00363 -0.00230 -0.001368 -0.00347 0.00186
25 -0.00328 -0.00207 -0.001285 -0.00336 0.00170
26 -0.00254 -0.00162 -0.001068 -0.00304 0.00141
27 -0.00251 -0.00161 -0.000924 -0.00264 0.00132
28 -0.00237 -0.00153 -0.000847 -0.00241 0.00124
29 -0.00247 -0.00155 -0.000873 -0.00219 0.00121
30 -0.00246 -0.00155 -0.000908 -0.00203 0.00122
31 -0.00205 -0.00130 -0.000786 -0.00190 0.00105
> aidsUtilityDeriv( pNames, "xFood", coef = coef( estResultAIDShom ),
+    data = Blanciforti86[ setWo1, ], rel = TRUE )
   pFood1  pFood2  pFood3 pFood4 xFood
1  -0.186 -0.1025 -0.0765 -0.220 0.585
2  -0.180 -0.1072 -0.0770 -0.218 0.582
3  -0.184 -0.1010 -0.0777 -0.223 0.586
4  -0.186 -0.0996 -0.0781 -0.227 0.591
5  -0.179 -0.1069 -0.0778 -0.222 0.586
6  -0.185 -0.1123 -0.0808 -0.225 0.604
7  -0.186 -0.1148 -0.0846 -0.235 0.620
8  -0.186 -0.1220 -0.0848 -0.228 0.621
9  -0.185 -0.1314 -0.0861 -0.226 0.628
10 -0.185 -0.1227 -0.0849 -0.227 0.620
11 -0.176 -0.1164 -0.0817 -0.224 0.598
12 -0.179 -0.1185 -0.0808 -0.216 0.594
13 -0.180 -0.1224 -0.0812 -0.214 0.597
14 -0.181 -0.1241 -0.0829 -0.218 0.606
15 -0.181 -0.1209 -0.0808 -0.212 0.594
16 -0.178 -0.1270 -0.0813 -0.210 0.596
17 -0.177 -0.1326 -0.0822 -0.210 0.603
18 -0.178 -0.1246 -0.0790 -0.205 0.587
19 -0.181 -0.1185 -0.0768 -0.201 0.577
20 -0.186 -0.1226 -0.0776 -0.198 0.585
21 -0.183 -0.1260 -0.0764 -0.195 0.581
22 -0.187 -0.1196 -0.0746 -0.194 0.575
23 -0.190 -0.1196 -0.0748 -0.194 0.578
24 -0.189 -0.1249 -0.0774 -0.199 0.589
25 -0.185 -0.1172 -0.0726 -0.190 0.565
26 -0.180 -0.1046 -0.0672 -0.183 0.534
27 -0.182 -0.1211 -0.0759 -0.193 0.572
28 -0.188 -0.1192 -0.0778 -0.197 0.582
29 -0.196 -0.1232 -0.0777 -0.197 0.594
30 -0.198 -0.1372 -0.0838 -0.212 0.632
31 -0.191 -0.1268 -0.0785 -0.203 0.599
> 
> aidsUtilityDeriv( pNames, "xFood", coef = coef( estResultAIDSunr ),
+    data = Blanciforti86[ setWo1, ] )
     pFood1   pFood2    pFood3   pFood4   xFood
1  -0.00366 -0.00272 -0.002238 -0.00735 0.00301
2  -0.00377 -0.00288 -0.002284 -0.00776 0.00313
3  -0.00368 -0.00278 -0.002240 -0.00767 0.00312
4  -0.00333 -0.00248 -0.002047 -0.00678 0.00282
5  -0.00327 -0.00250 -0.002012 -0.00672 0.00276
6  -0.00345 -0.00258 -0.002025 -0.00658 0.00279
7  -0.00346 -0.00261 -0.002029 -0.00656 0.00287
8  -0.00363 -0.00272 -0.002027 -0.00662 0.00287
9  -0.00371 -0.00278 -0.002032 -0.00650 0.00285
10 -0.00350 -0.00264 -0.001931 -0.00641 0.00276
11 -0.00320 -0.00249 -0.001848 -0.00641 0.00265
12 -0.00335 -0.00257 -0.001835 -0.00649 0.00264
13 -0.00338 -0.00257 -0.001814 -0.00636 0.00259
14 -0.00335 -0.00254 -0.001796 -0.00621 0.00258
15 -0.00332 -0.00252 -0.001739 -0.00625 0.00252
16 -0.00330 -0.00251 -0.001730 -0.00612 0.00248
17 -0.00331 -0.00249 -0.001736 -0.00593 0.00244
18 -0.00320 -0.00241 -0.001669 -0.00591 0.00235
19 -0.00303 -0.00226 -0.001570 -0.00562 0.00220
20 -0.00313 -0.00227 -0.001551 -0.00544 0.00216
21 -0.00303 -0.00220 -0.001532 -0.00522 0.00207
22 -0.00288 -0.00206 -0.001458 -0.00496 0.00195
23 -0.00277 -0.00196 -0.001385 -0.00462 0.00185
24 -0.00271 -0.00192 -0.001353 -0.00444 0.00182
25 -0.00253 -0.00181 -0.001290 -0.00438 0.00170
26 -0.00208 -0.00153 -0.001101 -0.00401 0.00146
27 -0.00197 -0.00143 -0.000929 -0.00337 0.00132
28 -0.00184 -0.00132 -0.000845 -0.00305 0.00123
29 -0.00185 -0.00127 -0.000857 -0.00278 0.00117
30 -0.00180 -0.00121 -0.000873 -0.00247 0.00115
31 -0.00158 -0.00109 -0.000772 -0.00235 0.00102
> aidsUtilityDeriv( pNames, "xFood", coef = coef( estResultAIDSunr ),
+    data = Blanciforti86[ setWo1, ], rel = TRUE )
   pFood1  pFood2  pFood3 pFood4 xFood
1  -0.148 -0.0903 -0.0770 -0.274 0.589
2  -0.144 -0.0965 -0.0778 -0.271 0.589
3  -0.148 -0.0904 -0.0785 -0.276 0.593
4  -0.151 -0.0886 -0.0787 -0.278 0.596
5  -0.146 -0.0975 -0.0786 -0.272 0.593
6  -0.146 -0.0972 -0.0807 -0.277 0.600
7  -0.146 -0.0985 -0.0842 -0.284 0.613
8  -0.142 -0.1028 -0.0841 -0.280 0.610
9  -0.138 -0.1094 -0.0851 -0.278 0.612
10 -0.141 -0.1041 -0.0843 -0.279 0.610
11 -0.141 -0.1050 -0.0822 -0.273 0.601
12 -0.140 -0.1049 -0.0811 -0.269 0.595
13 -0.139 -0.1070 -0.0813 -0.268 0.595
14 -0.139 -0.1073 -0.0827 -0.271 0.600
15 -0.139 -0.1057 -0.0810 -0.266 0.592
16 -0.136 -0.1111 -0.0813 -0.264 0.593
17 -0.134 -0.1146 -0.0819 -0.264 0.595
18 -0.137 -0.1095 -0.0792 -0.260 0.585
19 -0.140 -0.1043 -0.0772 -0.257 0.579
20 -0.140 -0.1042 -0.0775 -0.257 0.579
21 -0.138 -0.1079 -0.0763 -0.253 0.576
22 -0.142 -0.1024 -0.0746 -0.252 0.571
23 -0.143 -0.1007 -0.0747 -0.253 0.572
24 -0.141 -0.1049 -0.0769 -0.255 0.580
25 -0.143 -0.1021 -0.0729 -0.247 0.565
26 -0.147 -0.0977 -0.0688 -0.239 0.550
27 -0.143 -0.1073 -0.0763 -0.246 0.572
28 -0.146 -0.1031 -0.0777 -0.250 0.578
29 -0.148 -0.1014 -0.0769 -0.251 0.579
30 -0.146 -0.1089 -0.0817 -0.262 0.602
31 -0.148 -0.1065 -0.0775 -0.251 0.584
> 
> aidsUtilityDeriv( pNames, "xFood", coef = coef( estResultAIDSNa ),
+    data = Blanciforti86[ setWo1, ] )
     pFood1   pFood2    pFood3   pFood4   xFood
1  -0.00455 -0.00301 -0.002288 -0.00588 0.00298
2  -0.00466 -0.00317 -0.002313 -0.00620 0.00308
3  -0.00452 -0.00303 -0.002276 -0.00618 0.00307
4  -0.00408 -0.00271 -0.002093 -0.00552 0.00279
5  -0.00396 -0.00272 -0.002044 -0.00545 0.00271
6  -0.00437 -0.00294 -0.002068 -0.00535 0.00280
7  -0.00440 -0.00301 -0.002078 -0.00543 0.00291
8  -0.00477 -0.00323 -0.002065 -0.00540 0.00293
9  -0.00499 -0.00337 -0.002069 -0.00529 0.00293
10 -0.00458 -0.00311 -0.001961 -0.00523 0.00281
11 -0.00397 -0.00277 -0.001859 -0.00524 0.00264
12 -0.00427 -0.00292 -0.001838 -0.00521 0.00264
13 -0.00437 -0.00296 -0.001817 -0.00509 0.00261
14 -0.00437 -0.00297 -0.001805 -0.00501 0.00261
15 -0.00430 -0.00290 -0.001735 -0.00498 0.00253
16 -0.00431 -0.00291 -0.001725 -0.00487 0.00250
17 -0.00437 -0.00295 -0.001738 -0.00473 0.00248
18 -0.00415 -0.00278 -0.001662 -0.00466 0.00236
19 -0.00390 -0.00258 -0.001563 -0.00440 0.00220
20 -0.00417 -0.00269 -0.001548 -0.00423 0.00219
21 -0.00403 -0.00259 -0.001532 -0.00404 0.00209
22 -0.00378 -0.00241 -0.001461 -0.00383 0.00197
23 -0.00367 -0.00232 -0.001393 -0.00357 0.00187
24 -0.00361 -0.00230 -0.001363 -0.00348 0.00186
25 -0.00326 -0.00208 -0.001291 -0.00338 0.00170
26 -0.00252 -0.00163 -0.001087 -0.00306 0.00141
27 -0.00250 -0.00162 -0.000916 -0.00265 0.00132
28 -0.00237 -0.00153 -0.000837 -0.00243 0.00124
29 -0.00247 -0.00153 -0.000864 -0.00221 0.00120
30 -0.00245 -0.00154 -0.000901 -0.00203 0.00122
31 -0.00204 -0.00130 -0.000786 -0.00191 0.00105
> aidsUtilityDeriv( pNames, "xFood", coef = coef( estResultAIDSNa ),
+    data = Blanciforti86[ setWo1, ], rel = TRUE )
   pFood1  pFood2  pFood3 pFood4 xFood
1  -0.185 -0.1003 -0.0789 -0.219 0.583
2  -0.179 -0.1065 -0.0790 -0.217 0.582
3  -0.183 -0.0989 -0.0799 -0.223 0.585
4  -0.185 -0.0969 -0.0806 -0.226 0.589
5  -0.177 -0.1063 -0.0801 -0.221 0.585
6  -0.184 -0.1108 -0.0823 -0.224 0.602
7  -0.185 -0.1132 -0.0860 -0.234 0.619
8  -0.186 -0.1213 -0.0853 -0.227 0.619
9  -0.184 -0.1318 -0.0860 -0.225 0.626
10 -0.184 -0.1223 -0.0853 -0.226 0.619
11 -0.175 -0.1171 -0.0828 -0.223 0.598
12 -0.179 -0.1192 -0.0812 -0.216 0.595
13 -0.179 -0.1233 -0.0813 -0.214 0.598
14 -0.181 -0.1248 -0.0829 -0.218 0.606
15 -0.180 -0.1217 -0.0807 -0.212 0.595
16 -0.177 -0.1289 -0.0810 -0.210 0.597
17 -0.177 -0.1350 -0.0817 -0.210 0.603
18 -0.178 -0.1263 -0.0788 -0.205 0.587
19 -0.181 -0.1192 -0.0768 -0.201 0.578
20 -0.186 -0.1228 -0.0771 -0.199 0.585
21 -0.183 -0.1271 -0.0761 -0.195 0.581
22 -0.186 -0.1196 -0.0747 -0.194 0.574
23 -0.189 -0.1189 -0.0748 -0.195 0.578
24 -0.188 -0.1249 -0.0771 -0.199 0.589
25 -0.184 -0.1173 -0.0730 -0.191 0.565
26 -0.179 -0.1047 -0.0684 -0.184 0.535
27 -0.182 -0.1222 -0.0752 -0.194 0.573
28 -0.188 -0.1189 -0.0768 -0.198 0.582
29 -0.196 -0.1217 -0.0770 -0.198 0.592
30 -0.197 -0.1359 -0.0833 -0.212 0.629
31 -0.190 -0.1263 -0.0784 -0.203 0.598
> 
> 
> ####### monotonicity ###################
> # AIDS
> monoAids <- aidsMono( pNames, "xFood", coef = coef( estResultAIDS ),
+       data = Blanciforti86[ set, ] )
> print( monoAids )

Checking the monotonicity condition of an Almost Ideal Demand System (AIDS):
Monotonicity is fulfilled at 32 out of 32 observations (100%)
> class( monoAids ) <- NULL
> print( monoAids )
$monotony
1947 1948 1949 1950 1951 1952 1953 1954 1955 1956 1957 1958 1959 1960 1961 1962 
TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE 
1963 1964 1965 1966 1967 1968 1969 1970 1971 1972 1973 1974 1975 1976 1977 1978 
TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE 

$nValidObs
[1] 32

$nMonoObs
[1] 32

$monoPercent
[1] 100

$priceIndex
[1] "TL"

> 
> # LA-AIDS with Tornqvist price index
> # with fitted expenditure shares in the price index
> monoLaT <- aidsMono( pNames, "xFood", coef = coef( estResultLaT ),
+    data = Blanciforti86[ set, ], priceIndex = "T",
+    basePrices = estResultLaT$basePrices,
+    baseShares = estResultLaT$baseShares )
> print( monoLaT )

Checking the monotonicity condition of an Linear Approximate Almost Ideal Demand System (LA-AIDS):
Monotonicity is fulfilled at 32 out of 32 observations (100%)
> class( monoLaT ) <- NULL
> print( monoLaT )
$monotony
1947 1948 1949 1950 1951 1952 1953 1954 1955 1956 1957 1958 1959 1960 1961 1962 
TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE 
1963 1964 1965 1966 1967 1968 1969 1970 1971 1972 1973 1974 1975 1976 1977 1978 
TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE 

$nValidObs
[1] 32

$nMonoObs
[1] 32

$monoPercent
[1] 100

$priceIndex
[1] "T"

> 
> # LA-AIDS with Tornqvist price index
> # with observed expenditure shares in the price index
> monoLaT2 <- aidsMono( pNames, "xFood", coef = coef( estResultLaT ),
+    data = Blanciforti86[ set, ], priceIndex = estResultLaT$lnp )
> print( monoLaT2 )

Checking the monotonicity condition of an Linear Approximate Almost Ideal Demand System (LA-AIDS):
Monotonicity is fulfilled at 32 out of 32 observations (100%)
> class( monoLaT2 ) <- NULL
> print( monoLaT2 )
$monotony
1947 1948 1949 1950 1951 1952 1953 1954 1955 1956 1957 1958 1959 1960 1961 1962 
TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE 
1963 1964 1965 1966 1967 1968 1969 1970 1971 1972 1973 1974 1975 1976 1977 1978 
TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE 

$nValidObs
[1] 32

$nMonoObs
[1] 32

$monoPercent
[1] 100

$priceIndex
[1] "numeric"

> 
> 
> ####### conscavity ###################
> # AIDS with fitted shares
> concavAids <- aidsConcav( pNames, "xFood", coef = coef( estResultAIDS ),
+    data = Blanciforti86[ set, ] )
> print( concavAids )

Checking the concavity condition of an Almost Ideal Demand System (AIDS):
Concavity is fulfilled at 0 out of 32 observations (0%)
> class( concavAids ) <- NULL
> print( concavAids )
$cMatrices
$cMatrices[[1]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1100 -0.07827  0.0316  0.1567
wFood2 -0.0783  0.00406  0.0208  0.0534
wFood3  0.0316  0.02084 -0.1003  0.0479
wFood4  0.1567  0.05337  0.0479 -0.2579

$cMatrices[[2]]
        pFood1  pFood2  pFood3  pFood4
wFood1 -0.1110 -0.0836  0.0326  0.1620
wFood2 -0.0836  0.0144  0.0191  0.0501
wFood3  0.0326  0.0191 -0.1022  0.0504
wFood4  0.1620  0.0501  0.0504 -0.2626

$cMatrices[[3]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1069 -0.08175  0.0313  0.1574
wFood2 -0.0817  0.00758  0.0206  0.0536
wFood3  0.0313  0.02059 -0.1023  0.0504
wFood4  0.1574  0.05358  0.0504 -0.2614

$cMatrices[[4]]
        pFood1  pFood2  pFood3  pFood4
wFood1 -0.1099 -0.0854  0.0326  0.1627
wFood2 -0.0854  0.0165  0.0190  0.0498
wFood3  0.0326  0.0190 -0.1032  0.0517
wFood4  0.1627  0.0498  0.0517 -0.2642

$cMatrices[[5]]
        pFood1  pFood2  pFood3  pFood4
wFood1 -0.1120 -0.0868  0.0333  0.1655
wFood2 -0.0868  0.0194  0.0185  0.0489
wFood3  0.0333  0.0185 -0.1036  0.0518
wFood4  0.1655  0.0489  0.0518 -0.2662

$cMatrices[[6]]
        pFood1  pFood2  pFood3  pFood4
wFood1 -0.1062 -0.0832  0.0312  0.1582
wFood2 -0.0832  0.0084  0.0206  0.0541
wFood3  0.0312  0.0206 -0.1029  0.0512
wFood4  0.1582  0.0541  0.0512 -0.2635

$cMatrices[[7]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1125 -0.08296  0.0328  0.1626
wFood2 -0.0830  0.00677  0.0212  0.0550
wFood3  0.0328  0.02122 -0.1035  0.0495
wFood4  0.1626  0.05497  0.0495 -0.2671

$cMatrices[[8]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1144 -0.08565  0.0336  0.1665
wFood2 -0.0856  0.00761  0.0216  0.0564
wFood3  0.0336  0.02162 -0.1055  0.0502
wFood4  0.1665  0.05641  0.0502 -0.2731

$cMatrices[[9]]
        pFood1    pFood2  pFood3  pFood4
wFood1 -0.1148 -0.081798  0.0333  0.1633
wFood2 -0.0818 -0.000212  0.0231  0.0589
wFood3  0.0333  0.023119 -0.1045  0.0481
wFood4  0.1633  0.058892  0.0481 -0.2702

$cMatrices[[10]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1141 -0.07908  0.0327  0.1605
wFood2 -0.0791 -0.00891  0.0251  0.0629
wFood3  0.0327  0.02507 -0.1042  0.0464
wFood4  0.1605  0.06291  0.0464 -0.2698

$cMatrices[[11]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1138 -0.08151  0.0331  0.1623
wFood2 -0.0815 -0.00124  0.0234  0.0594
wFood3  0.0331  0.02337 -0.1046  0.0482
wFood4  0.1623  0.05939  0.0482 -0.2698

$cMatrices[[12]]
        pFood1    pFood2  pFood3  pFood4
wFood1 -0.1061 -0.081858  0.0311  0.1569
wFood2 -0.0819  0.000227  0.0228  0.0588
wFood3  0.0311  0.022789 -0.1041  0.0503
wFood4  0.1569  0.058842  0.0503 -0.2660

$cMatrices[[13]]
        pFood1  pFood2  pFood3  pFood4
wFood1 -0.1078 -0.0789  0.0313  0.1553
wFood2 -0.0789 -0.0026  0.0231  0.0584
wFood3  0.0313  0.0231 -0.1030  0.0486
wFood4  0.1553  0.0584  0.0486 -0.2622

$cMatrices[[14]]
        pFood1  pFood2  pFood3  pFood4
wFood1 -0.1084 -0.0774  0.0313  0.1545
wFood2 -0.0774 -0.0061  0.0238  0.0597
wFood3  0.0313  0.0238 -0.1027  0.0476
wFood4  0.1545  0.0597  0.0476 -0.2617

$cMatrices[[15]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1102 -0.07837  0.0318  0.1567
wFood2 -0.0784 -0.00592  0.0240  0.0602
wFood3  0.0318  0.02404 -0.1034  0.0475
wFood4  0.1567  0.06025  0.0475 -0.2644

$cMatrices[[16]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1088 -0.07702  0.0315  0.1544
wFood2 -0.0770 -0.00503  0.0235  0.0585
wFood3  0.0315  0.02352 -0.1025  0.0475
wFood4  0.1544  0.05853  0.0475 -0.2604

$cMatrices[[17]]
        pFood1  pFood2  pFood3  pFood4
wFood1 -0.1070 -0.0752  0.0307  0.1515
wFood2 -0.0752 -0.0115  0.0250  0.0617
wFood3  0.0307  0.0250 -0.1022  0.0466
wFood4  0.1515  0.0617  0.0466 -0.2597

$cMatrices[[18]]
        pFood1 pFood2  pFood3  pFood4
wFood1 -0.1072 -0.074  0.0305  0.1507
wFood2 -0.0740 -0.016  0.0260  0.0640
wFood3  0.0305  0.026 -0.1021  0.0456
wFood4  0.1507  0.064  0.0456 -0.2603

$cMatrices[[19]]
        pFood1  pFood2  pFood3  pFood4
wFood1 -0.1062 -0.0735  0.0303  0.1494
wFood2 -0.0735 -0.0111  0.0245  0.0602
wFood3  0.0303  0.0245 -0.1011  0.0463
wFood4  0.1494  0.0602  0.0463 -0.2559

$cMatrices[[20]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1072 -0.07351  0.0307  0.1500
wFood2 -0.0735 -0.00612  0.0230  0.0566
wFood3  0.0307  0.02303 -0.1002  0.0465
wFood4  0.1500  0.05660  0.0465 -0.2530

$cMatrices[[21]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1112 -0.07172  0.0317  0.1513
wFood2 -0.0717 -0.00845  0.0235  0.0567
wFood3  0.0317  0.02349 -0.0998  0.0447
wFood4  0.1513  0.05668  0.0447 -0.2526

$cMatrices[[22]]
        pFood1  pFood2  pFood3  pFood4
wFood1 -0.1086 -0.0694  0.0305  0.1475
wFood2 -0.0694 -0.0136  0.0244  0.0586
wFood3  0.0305  0.0244 -0.0988  0.0440
wFood4  0.1475  0.0586  0.0440 -0.2500

$cMatrices[[23]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1099 -0.07024  0.0311  0.1491
wFood2 -0.0702 -0.00775  0.0228  0.0552
wFood3  0.0311  0.02283 -0.0983  0.0444
wFood4  0.1491  0.05516  0.0444 -0.2487

$cMatrices[[24]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1125 -0.07033  0.0318  0.1510
wFood2 -0.0703 -0.00655  0.0226  0.0543
wFood3  0.0318  0.02257 -0.0982  0.0439
wFood4  0.1510  0.05432  0.0439 -0.2492

$cMatrices[[25]]
        pFood1  pFood2  pFood3  pFood4
wFood1 -0.1128 -0.0709  0.0318  0.1519
wFood2 -0.0709 -0.0101  0.0237  0.0573
wFood3  0.0318  0.0237 -0.0993  0.0438
wFood4  0.1519  0.0573  0.0438 -0.2530

$cMatrices[[26]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1078 -0.06926  0.0304  0.1466
wFood2 -0.0693 -0.00743  0.0224  0.0543
wFood3  0.0304  0.02244 -0.0974  0.0445
wFood4  0.1466  0.05425  0.0445 -0.2454

$cMatrices[[27]]
        pFood1    pFood2  pFood3  pFood4
wFood1 -0.1000 -0.069424  0.0286  0.1409
wFood2 -0.0694 -0.000152  0.0202  0.0494
wFood3  0.0286  0.020174 -0.0956  0.0469
wFood4  0.1409  0.049402  0.0469 -0.2371

$cMatrices[[28]]
        pFood1  pFood2  pFood3  pFood4
wFood1 -0.1071 -0.0700  0.0305  0.1465
wFood2 -0.0700 -0.0101  0.0236  0.0565
wFood3  0.0305  0.0236 -0.0991  0.0450
wFood4  0.1465  0.0565  0.0450 -0.2480

$cMatrices[[29]]
        pFood1  pFood2  pFood3  pFood4
wFood1 -0.1123 -0.0724  0.0323  0.1523
wFood2 -0.0724 -0.0049  0.0228  0.0545
wFood3  0.0323  0.0228 -0.1001  0.0450
wFood4  0.1523  0.0545  0.0450 -0.2519

$cMatrices[[30]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1178 -0.07094  0.0334  0.1554
wFood2 -0.0709 -0.00637  0.0229  0.0544
wFood3  0.0334  0.02288 -0.0992  0.0429
wFood4  0.1554  0.05443  0.0429 -0.2527

$cMatrices[[31]]
        pFood1  pFood2  pFood3  pFood4
wFood1 -0.1222 -0.0731  0.0342  0.1612
wFood2 -0.0731 -0.0130  0.0252  0.0609
wFood3  0.0342  0.0252 -0.1013  0.0419
wFood4  0.1612  0.0609  0.0419 -0.2640

$cMatrices[[32]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1152 -0.07186  0.0324  0.1547
wFood2 -0.0719 -0.00986  0.0239  0.0579
wFood3  0.0324  0.02385 -0.0997  0.0435
wFood4  0.1547  0.05787  0.0435 -0.2560


$concavity
 [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[13] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[25] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE

$nValidObs
[1] 32

$nConcavObs
[1] 0

$concavPercent
[1] 0

> 
> # AIDS with observed shares
> concavAids2 <- aidsConcav( pNames, "xFood", coef = coef( estResultAIDS ),
+    data = Blanciforti86[ set, ], shareNames = wNames )
> print( concavAids2 )

Checking the concavity condition of an Almost Ideal Demand System (AIDS):
Concavity is fulfilled at 0 out of 32 observations (0%)
> class( concavAids2 ) <- NULL
> print( concavAids2 )
$cMatrices
$cMatrices[[1]]
        pFood1  pFood2  pFood3  pFood4
wFood1 -0.1024 -0.0872  0.0293  0.1606
wFood2 -0.0872  0.0153  0.0187  0.0534
wFood3  0.0293  0.0187 -0.1012  0.0533
wFood4  0.1606  0.0534  0.0533 -0.2669

$cMatrices[[2]]
        pFood1  pFood2  pFood3  pFood4
wFood1 -0.1062 -0.0892  0.0317  0.1638
wFood2 -0.0892  0.0219  0.0181  0.0493
wFood3  0.0317  0.0181 -0.1042  0.0544
wFood4  0.1638  0.0493  0.0544 -0.2674

$cMatrices[[3]]
        pFood1  pFood2  pFood3  pFood4
wFood1 -0.1035 -0.0866  0.0324  0.1578
wFood2 -0.0866  0.0146  0.0204  0.0516
wFood3  0.0324  0.0204 -0.1077  0.0549
wFood4  0.1578  0.0516  0.0549 -0.2643

$cMatrices[[4]]
        pFood1  pFood2  pFood3  pFood4
wFood1 -0.1111 -0.0855  0.0347  0.1621
wFood2 -0.0855  0.0179  0.0196  0.0482
wFood3  0.0347  0.0196 -0.1071  0.0529
wFood4  0.1621  0.0482  0.0529 -0.2629

$cMatrices[[5]]
        pFood1  pFood2  pFood3  pFood4
wFood1 -0.1084 -0.0860  0.0323  0.1619
wFood2 -0.0860  0.0145  0.0197  0.0517
wFood3  0.0323  0.0197 -0.1043  0.0522
wFood4  0.1619  0.0517  0.0522 -0.2662

$cMatrices[[6]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1088 -0.08148  0.0317  0.1586
wFood2 -0.0815  0.00748  0.0206  0.0534
wFood3  0.0317  0.02056 -0.1020  0.0498
wFood4  0.1586  0.05343  0.0498 -0.2618

$cMatrices[[7]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1152 -0.08283  0.0329  0.1651
wFood2 -0.0828  0.00922  0.0202  0.0534
wFood3  0.0329  0.02019 -0.1015  0.0484
wFood4  0.1651  0.05343  0.0484 -0.2669

$cMatrices[[8]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1211 -0.08158  0.0344  0.1686
wFood2 -0.0816  0.00589  0.0211  0.0548
wFood3  0.0344  0.02106 -0.1018  0.0464
wFood4  0.1686  0.05482  0.0464 -0.2695

$cMatrices[[9]]
        pFood1    pFood2  pFood3  pFood4
wFood1 -0.1159 -0.081476  0.0323  0.1651
wFood2 -0.0815  0.000317  0.0221  0.0591
wFood3  0.0323  0.022072 -0.1010  0.0467
wFood4  0.1651  0.059088  0.0467 -0.2709

$cMatrices[[10]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1133 -0.08250  0.0309  0.1649
wFood2 -0.0825 -0.00277  0.0226  0.0627
wFood3  0.0309  0.02261 -0.1004  0.0469
wFood4  0.1649  0.06265  0.0469 -0.2744

$cMatrices[[11]]
        pFood1  pFood2  pFood3  pFood4
wFood1 -0.1136 -0.0806  0.0333  0.1609
wFood2 -0.0806 -0.0033  0.0241  0.0598
wFood3  0.0333  0.0241 -0.1054  0.0480
wFood4  0.1609  0.0598  0.0480 -0.2688

$cMatrices[[12]]
        pFood1  pFood2  pFood3  pFood4
wFood1 -0.1107 -0.0779  0.0322  0.1565
wFood2 -0.0779 -0.0031  0.0232  0.0578
wFood3  0.0322  0.0232 -0.1029  0.0475
wFood4  0.1565  0.0578  0.0475 -0.2618

$cMatrices[[13]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1080 -0.07729  0.0326  0.1528
wFood2 -0.0773 -0.00544  0.0245  0.0582
wFood3  0.0326  0.02453 -0.1058  0.0486
wFood4  0.1528  0.05819  0.0486 -0.2596

$cMatrices[[14]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1049 -0.07746  0.0302  0.1521
wFood2 -0.0775 -0.00955  0.0247  0.0623
wFood3  0.0302  0.02470 -0.1029  0.0480
wFood4  0.1521  0.06230  0.0480 -0.2624

$cMatrices[[15]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1074 -0.07791  0.0305  0.1548
wFood2 -0.0779 -0.00963  0.0246  0.0629
wFood3  0.0305  0.02459 -0.1023  0.0472
wFood4  0.1548  0.06295  0.0472 -0.2650

$cMatrices[[16]]
        pFood1  pFood2  pFood3  pFood4
wFood1 -0.1051 -0.0758  0.0301  0.1508
wFood2 -0.0758 -0.0112  0.0249  0.0621
wFood3  0.0301  0.0249 -0.1021  0.0472
wFood4  0.1508  0.0621  0.0472 -0.2601

$cMatrices[[17]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1058 -0.07677  0.0303  0.1526
wFood2 -0.0768 -0.00954  0.0245  0.0620
wFood3  0.0303  0.02448 -0.1022  0.0476
wFood4  0.1526  0.06204  0.0476 -0.2619

$cMatrices[[18]]
        pFood1  pFood2  pFood3  pFood4
wFood1 -0.1068 -0.0761  0.0310  0.1519
wFood2 -0.0761 -0.0125  0.0257  0.0629
wFood3  0.0310  0.0257 -0.1037  0.0471
wFood4  0.1519  0.0629  0.0471 -0.2618

$cMatrices[[19]]
        pFood1  pFood2  pFood3  pFood4
wFood1 -0.1033 -0.0748  0.0303  0.1478
wFood2 -0.0748 -0.0117  0.0253  0.0612
wFood3  0.0303  0.0253 -0.1035  0.0478
wFood4  0.1478  0.0612  0.0478 -0.2568

$cMatrices[[20]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1062 -0.07262  0.0292  0.1496
wFood2 -0.0726 -0.00877  0.0228  0.0585
wFood3  0.0292  0.02284 -0.0975  0.0454
wFood4  0.1496  0.05854  0.0454 -0.2535

$cMatrices[[21]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1066 -0.07378  0.0312  0.1494
wFood2 -0.0738 -0.00942  0.0245  0.0589
wFood3  0.0312  0.02455 -0.1027  0.0471
wFood4  0.1494  0.05887  0.0471 -0.2550

$cMatrices[[22]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1053 -0.07354  0.0300  0.1491
wFood2 -0.0735 -0.00937  0.0239  0.0593
wFood3  0.0300  0.02386 -0.1005  0.0467
wFood4  0.1491  0.05927  0.0467 -0.2547

$cMatrices[[23]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1074 -0.07180  0.0292  0.1501
wFood2 -0.0718 -0.00757  0.0221  0.0572
wFood3  0.0292  0.02212 -0.0959  0.0446
wFood4  0.1501  0.05725  0.0446 -0.2520

$cMatrices[[24]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1104 -0.07193  0.0288  0.1533
wFood2 -0.0719 -0.00585  0.0210  0.0566
wFood3  0.0288  0.02096 -0.0930  0.0431
wFood4  0.1533  0.05661  0.0431 -0.2533

$cMatrices[[25]]
        pFood1  pFood2  pFood3  pFood4
wFood1 -0.1146 -0.0696  0.0337  0.1508
wFood2 -0.0696 -0.0106  0.0247  0.0557
wFood3  0.0337  0.0247 -0.1021  0.0439
wFood4  0.1508  0.0557  0.0439 -0.2501

$cMatrices[[26]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1109 -0.06928  0.0309  0.1493
wFood2 -0.0693 -0.00394  0.0212  0.0520
wFood3  0.0309  0.02124 -0.0958  0.0437
wFood4  0.1493  0.05199  0.0437 -0.2450

$cMatrices[[27]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1041 -0.06421  0.0286  0.1396
wFood2 -0.0642 -0.00477  0.0202  0.0487
wFood3  0.0286  0.02024 -0.0922  0.0434
wFood4  0.1396  0.04875  0.0434 -0.2317

$cMatrices[[28]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1109 -0.07145  0.0308  0.1515
wFood2 -0.0714 -0.00342  0.0214  0.0535
wFood3  0.0308  0.02140 -0.0966  0.0444
wFood4  0.1515  0.05347  0.0444 -0.2494

$cMatrices[[29]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1124 -0.07240  0.0342  0.1507
wFood2 -0.0724 -0.00472  0.0238  0.0533
wFood3  0.0342  0.02383 -0.1041  0.0461
wFood4  0.1507  0.05329  0.0461 -0.2501

$cMatrices[[30]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1182 -0.07026  0.0345  0.1536
wFood2 -0.0703 -0.00718  0.0237  0.0535
wFood3  0.0345  0.02369 -0.1014  0.0430
wFood4  0.1536  0.05355  0.0430 -0.2505

$cMatrices[[31]]
        pFood1  pFood2  pFood3  pFood4
wFood1 -0.1243 -0.0724  0.0355  0.1609
wFood2 -0.0724 -0.0121  0.0254  0.0589
wFood3  0.0355  0.0254 -0.1026  0.0416
wFood4  0.1609  0.0589  0.0416 -0.2617

$cMatrices[[32]]
        pFood1  pFood2  pFood3  pFood4
wFood1 -0.1188 -0.0659  0.0335  0.1512
wFood2 -0.0659 -0.0163  0.0252  0.0570
wFood3  0.0335  0.0252 -0.0993  0.0405
wFood4  0.1512  0.0570  0.0405 -0.2487


$concavity
 [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[13] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[25] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE

$nValidObs
[1] 32

$nConcavObs
[1] 0

$concavPercent
[1] 0

> 
> # LA-AIDS
> estResultLaSCoef <- coef( estResultLaS )
> estResultLaSCoef$alpha0 <- 1
> concavLaS <- aidsConcav( pNames, "xFood", coef = estResultLaSCoef,
+    data = Blanciforti86[ set, ] )
> print( concavLaS )

Checking the concavity condition of an Almost Ideal Demand System (AIDS):
Concavity is fulfilled at 0 out of 32 observations (0%)
> class( concavLaS ) <- NULL
> print( concavLaS )
$cMatrices
$cMatrices[[1]]
        pFood1  pFood2  pFood3  pFood4
wFood1  0.1790 -0.1267 -0.0298 -0.0225
wFood2 -0.1267  0.0435  0.0283  0.0550
wFood3 -0.0298  0.0283 -0.1488  0.1502
wFood4 -0.0225  0.0550  0.1502 -0.1827

$cMatrices[[2]]
        pFood1  pFood2  pFood3  pFood4
wFood1  0.1703 -0.1260 -0.0279 -0.0164
wFood2 -0.1260  0.0544  0.0253  0.0463
wFood3 -0.0279  0.0253 -0.1490  0.1516
wFood4 -0.0164  0.0463  0.1516 -0.1815

$cMatrices[[3]]
        pFood1  pFood2  pFood3  pFood4
wFood1  0.1791 -0.1269 -0.0298 -0.0224
wFood2 -0.1269  0.0460  0.0277  0.0532
wFood3 -0.0298  0.0277 -0.1492  0.1513
wFood4 -0.0224  0.0532  0.1513 -0.1820

$cMatrices[[4]]
        pFood1  pFood2  pFood3  pFood4
wFood1  0.1703 -0.1262 -0.0279 -0.0163
wFood2 -0.1262  0.0561  0.0249  0.0451
wFood3 -0.0279  0.0249 -0.1494  0.1524
wFood4 -0.0163  0.0451  0.1524 -0.1812

$cMatrices[[5]]
        pFood1  pFood2  pFood3  pFood4
wFood1  0.1689 -0.1264 -0.0275 -0.0150
wFood2 -0.1264  0.0599  0.0240  0.0425
wFood3 -0.0275  0.0240 -0.1499  0.1533
wFood4 -0.0150  0.0425  0.1533 -0.1809

$cMatrices[[6]]
        pFood1  pFood2  pFood3  pFood4
wFood1  0.1807 -0.1274 -0.0301 -0.0233
wFood2 -0.1274  0.0468  0.0276  0.0530
wFood3 -0.0301  0.0276 -0.1496  0.1521
wFood4 -0.0233  0.0530  0.1521 -0.1819

$cMatrices[[7]]
        pFood1  pFood2  pFood3  pFood4
wFood1  0.1911 -0.1302 -0.0321 -0.0288
wFood2 -0.1302  0.0472  0.0282  0.0548
wFood3 -0.0321  0.0282 -0.1524  0.1563
wFood4 -0.0288  0.0548  0.1563 -0.1823

$cMatrices[[8]]
        pFood1  pFood2  pFood3  pFood4
wFood1  0.2010 -0.1327 -0.0341 -0.0342
wFood2 -0.1327  0.0490  0.0283  0.0554
wFood3 -0.0341  0.0283 -0.1549  0.1606
wFood4 -0.0342  0.0554  0.1606 -0.1819

$cMatrices[[9]]
        pFood1  pFood2  pFood3  pFood4
wFood1  0.2111 -0.1344 -0.0362 -0.0405
wFood2 -0.1344  0.0408  0.0309  0.0626
wFood3 -0.0362  0.0309 -0.1555  0.1608
wFood4 -0.0405  0.0626  0.1608 -0.1830

$cMatrices[[10]]
        pFood1  pFood2  pFood3  pFood4
wFood1  0.2276 -0.1377 -0.0396 -0.0503
wFood2 -0.1377  0.0317  0.0341  0.0719
wFood3 -0.0396  0.0341 -0.1569  0.1623
wFood4 -0.0503  0.0719  0.1623 -0.1839

$cMatrices[[11]]
        pFood1  pFood2  pFood3  pFood4
wFood1  0.2125 -0.1346 -0.0365 -0.0414
wFood2 -0.1346  0.0394  0.0313  0.0638
wFood3 -0.0365  0.0313 -0.1555  0.1607
wFood4 -0.0414  0.0638  0.1607 -0.1831

$cMatrices[[12]]
        pFood1  pFood2  pFood3  pFood4
wFood1  0.2005 -0.1313 -0.0341 -0.0351
wFood2 -0.1313  0.0384  0.0308  0.0621
wFood3 -0.0341  0.0308 -0.1525  0.1558
wFood4 -0.0351  0.0621  0.1558 -0.1828

$cMatrices[[13]]
        pFood1  pFood2  pFood3  pFood4
wFood1  0.2007 -0.1311 -0.0342 -0.0355
wFood2 -0.1311  0.0357  0.0315  0.0639
wFood3 -0.0342  0.0315 -0.1523  0.1549
wFood4 -0.0355  0.0639  0.1549 -0.1833

$cMatrices[[14]]
        pFood1  pFood2  pFood3  pFood4
wFood1  0.2068 -0.1323 -0.0354 -0.0391
wFood2 -0.1323  0.0323  0.0327  0.0673
wFood3 -0.0354  0.0327 -0.1529  0.1556
wFood4 -0.0391  0.0673  0.1556 -0.1838

$cMatrices[[15]]
        pFood1  pFood2  pFood3  pFood4
wFood1  0.2117 -0.1337 -0.0364 -0.0416
wFood2 -0.1337  0.0331  0.0328  0.0677
wFood3 -0.0364  0.0328 -0.1541  0.1577
wFood4 -0.0416  0.0677  0.1577 -0.1838

$cMatrices[[16]]
        pFood1  pFood2  pFood3  pFood4
wFood1  0.2033 -0.1315 -0.0347 -0.0371
wFood2 -0.1315  0.0334  0.0323  0.0659
wFood3 -0.0347  0.0323 -0.1525  0.1550
wFood4 -0.0371  0.0659  0.1550 -0.1837

$cMatrices[[17]]
        pFood1  pFood2  pFood3  pFood4
wFood1  0.2143 -0.1336 -0.0370 -0.0437
wFood2 -0.1336  0.0262  0.0347  0.0727
wFood3 -0.0370  0.0347 -0.1531  0.1554
wFood4 -0.0437  0.0727  0.1554 -0.1844

$cMatrices[[18]]
        pFood1  pFood2  pFood3  pFood4
wFood1  0.2245 -0.1360 -0.0390 -0.0495
wFood2 -0.1360  0.0217  0.0364  0.0778
wFood3 -0.0390  0.0364 -0.1541  0.1567
wFood4 -0.0495  0.0778  0.1567 -0.1850

$cMatrices[[19]]
        pFood1  pFood2  pFood3  pFood4
wFood1  0.2067 -0.1316 -0.0355 -0.0396
wFood2 -0.1316  0.0262  0.0342  0.0712
wFood3 -0.0355  0.0342 -0.1516  0.1528
wFood4 -0.0396  0.0712  0.1528 -0.1843

$cMatrices[[20]]
        pFood1  pFood2  pFood3  pFood4
wFood1  0.1927 -0.1284 -0.0326 -0.0316
wFood2 -0.1284  0.0315  0.0321  0.0649
wFood3 -0.0326  0.0321 -0.1498  0.1504
wFood4 -0.0316  0.0649  0.1504 -0.1837

$cMatrices[[21]]
        pFood1  pFood2  pFood3  pFood4
wFood1  0.1985 -0.1300 -0.0338 -0.0347
wFood2 -0.1300  0.0303  0.0328  0.0669
wFood3 -0.0338  0.0328 -0.1511  0.1521
wFood4 -0.0347  0.0669  0.1521 -0.1843

$cMatrices[[22]]
        pFood1  pFood2  pFood3  pFood4
wFood1  0.2028 -0.1304 -0.0347 -0.0377
wFood2 -0.1304  0.0242  0.0345  0.0717
wFood3 -0.0347  0.0345 -0.1505  0.1507
wFood4 -0.0377  0.0717  0.1507 -0.1847

$cMatrices[[23]]
        pFood1  pFood2  pFood3  pFood4
wFood1  0.1894 -0.1276 -0.0320 -0.0298
wFood2 -0.1276  0.0306  0.0321  0.0649
wFood3 -0.0320  0.0321 -0.1490  0.1489
wFood4 -0.0298  0.0649  0.1489 -0.1840

$cMatrices[[24]]
        pFood1  pFood2  pFood3  pFood4
wFood1  0.1889 -0.1278 -0.0319 -0.0292
wFood2 -0.1278  0.0327  0.0316  0.0635
wFood3 -0.0319  0.0316 -0.1495  0.1497
wFood4 -0.0292  0.0635  0.1497 -0.1841

$cMatrices[[25]]
        pFood1  pFood2  pFood3  pFood4
wFood1  0.2017 -0.1309 -0.0344 -0.0364
wFood2 -0.1309  0.0293  0.0332  0.0684
wFood3 -0.0344  0.0332 -0.1515  0.1527
wFood4 -0.0364  0.0684  0.1527 -0.1847

$cMatrices[[26]]
        pFood1  pFood2  pFood3  pFood4
wFood1  0.1829 -0.1256 -0.0307 -0.0265
wFood2 -0.1256  0.0302  0.0317  0.0637
wFood3 -0.0307  0.0317 -0.1473  0.1463
wFood4 -0.0265  0.0637  0.1463 -0.1835

$cMatrices[[27]]
        pFood1  pFood2  pFood3  pFood4
wFood1  0.1570 -0.1185 -0.0257 -0.0128
wFood2 -0.1185  0.0351  0.0287  0.0547
wFood3 -0.0257  0.0287 -0.1417  0.1387
wFood4 -0.0128  0.0547  0.1387 -0.1806

$cMatrices[[28]]
       pFood1  pFood2  pFood3  pFood4
wFood1  0.194 -0.1282 -0.0330 -0.0330
wFood2 -0.128  0.0270  0.0333  0.0679
wFood3 -0.033  0.0333 -0.1495  0.1492
wFood4 -0.033  0.0679  0.1492 -0.1840

$cMatrices[[29]]
        pFood1  pFood2  pFood3  pFood4
wFood1  0.1925 -0.1288 -0.0326 -0.0311
wFood2 -0.1288  0.0341  0.0316  0.0631
wFood3 -0.0326  0.0316 -0.1510  0.1520
wFood4 -0.0311  0.0631  0.1520 -0.1840

$cMatrices[[30]]
        pFood1  pFood2  pFood3  pFood4
wFood1  0.1972 -0.1305 -0.0335 -0.0332
wFood2 -0.1305  0.0347  0.0318  0.0640
wFood3 -0.0335  0.0318 -0.1522  0.1538
wFood4 -0.0332  0.0640  0.1538 -0.1846

$cMatrices[[31]]
        pFood1  pFood2  pFood3  pFood4
wFood1  0.2295 -0.1385 -0.0399 -0.0511
wFood2 -0.1385  0.0299  0.0348  0.0738
wFood3 -0.0399  0.0348 -0.1573  0.1624
wFood4 -0.0511  0.0738  0.1624 -0.1850

$cMatrices[[32]]
        pFood1  pFood2  pFood3  pFood4
wFood1  0.2061 -0.1323 -0.0353 -0.0385
wFood2 -0.1323  0.0305  0.0332  0.0686
wFood3 -0.0353  0.0332 -0.1526  0.1547
wFood4 -0.0385  0.0686  0.1547 -0.1848


$concavity
 [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[13] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[25] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE

$nValidObs
[1] 32

$nConcavObs
[1] 0

$concavPercent
[1] 0

> 
> 
> ####### consistency ###################
> # with observed expenditure shares
> consist <- aidsConsist( pNames, "xFood", Blanciforti86[ set, ],
+    coef = estResultAIDS$coef, shareNames = wNames )
> print( consist )

Checking theoretical consistency of an Almost Ideal Demand System (AIDS):
The adding-up condition is fulfilled
The homogeneity condition is fulfilled
The symmetry condition is fulfilled
Monotonicity is fulfilled at 32 out of 32 observations (100%)
Concavity is fulfilled at 0 out of 32 observations (0%)
> class( consist ) <- NULL
> class( consist$mono ) <- NULL
> class( consist$concav ) <- NULL
> print( consist )
$addingUp
[1] TRUE

$homogeneity
[1] TRUE

$symmetry
[1] TRUE

$mono
$mono$monotony
1947 1948 1949 1950 1951 1952 1953 1954 1955 1956 1957 1958 1959 1960 1961 1962 
TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE 
1963 1964 1965 1966 1967 1968 1969 1970 1971 1972 1973 1974 1975 1976 1977 1978 
TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE 

$mono$nValidObs
[1] 32

$mono$nMonoObs
[1] 32

$mono$monoPercent
[1] 100

$mono$priceIndex
[1] "TL"


$concav
$concav$cMatrices
$concav$cMatrices[[1]]
        pFood1  pFood2  pFood3  pFood4
wFood1 -0.1024 -0.0872  0.0293  0.1606
wFood2 -0.0872  0.0153  0.0187  0.0534
wFood3  0.0293  0.0187 -0.1012  0.0533
wFood4  0.1606  0.0534  0.0533 -0.2669

$concav$cMatrices[[2]]
        pFood1  pFood2  pFood3  pFood4
wFood1 -0.1062 -0.0892  0.0317  0.1638
wFood2 -0.0892  0.0219  0.0181  0.0493
wFood3  0.0317  0.0181 -0.1042  0.0544
wFood4  0.1638  0.0493  0.0544 -0.2674

$concav$cMatrices[[3]]
        pFood1  pFood2  pFood3  pFood4
wFood1 -0.1035 -0.0866  0.0324  0.1578
wFood2 -0.0866  0.0146  0.0204  0.0516
wFood3  0.0324  0.0204 -0.1077  0.0549
wFood4  0.1578  0.0516  0.0549 -0.2643

$concav$cMatrices[[4]]
        pFood1  pFood2  pFood3  pFood4
wFood1 -0.1111 -0.0855  0.0347  0.1621
wFood2 -0.0855  0.0179  0.0196  0.0482
wFood3  0.0347  0.0196 -0.1071  0.0529
wFood4  0.1621  0.0482  0.0529 -0.2629

$concav$cMatrices[[5]]
        pFood1  pFood2  pFood3  pFood4
wFood1 -0.1084 -0.0860  0.0323  0.1619
wFood2 -0.0860  0.0145  0.0197  0.0517
wFood3  0.0323  0.0197 -0.1043  0.0522
wFood4  0.1619  0.0517  0.0522 -0.2662

$concav$cMatrices[[6]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1088 -0.08148  0.0317  0.1586
wFood2 -0.0815  0.00748  0.0206  0.0534
wFood3  0.0317  0.02056 -0.1020  0.0498
wFood4  0.1586  0.05343  0.0498 -0.2618

$concav$cMatrices[[7]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1152 -0.08283  0.0329  0.1651
wFood2 -0.0828  0.00922  0.0202  0.0534
wFood3  0.0329  0.02019 -0.1015  0.0484
wFood4  0.1651  0.05343  0.0484 -0.2669

$concav$cMatrices[[8]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1211 -0.08158  0.0344  0.1686
wFood2 -0.0816  0.00589  0.0211  0.0548
wFood3  0.0344  0.02106 -0.1018  0.0464
wFood4  0.1686  0.05482  0.0464 -0.2695

$concav$cMatrices[[9]]
        pFood1    pFood2  pFood3  pFood4
wFood1 -0.1159 -0.081476  0.0323  0.1651
wFood2 -0.0815  0.000317  0.0221  0.0591
wFood3  0.0323  0.022072 -0.1010  0.0467
wFood4  0.1651  0.059088  0.0467 -0.2709

$concav$cMatrices[[10]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1133 -0.08250  0.0309  0.1649
wFood2 -0.0825 -0.00277  0.0226  0.0627
wFood3  0.0309  0.02261 -0.1004  0.0469
wFood4  0.1649  0.06265  0.0469 -0.2744

$concav$cMatrices[[11]]
        pFood1  pFood2  pFood3  pFood4
wFood1 -0.1136 -0.0806  0.0333  0.1609
wFood2 -0.0806 -0.0033  0.0241  0.0598
wFood3  0.0333  0.0241 -0.1054  0.0480
wFood4  0.1609  0.0598  0.0480 -0.2688

$concav$cMatrices[[12]]
        pFood1  pFood2  pFood3  pFood4
wFood1 -0.1107 -0.0779  0.0322  0.1565
wFood2 -0.0779 -0.0031  0.0232  0.0578
wFood3  0.0322  0.0232 -0.1029  0.0475
wFood4  0.1565  0.0578  0.0475 -0.2618

$concav$cMatrices[[13]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1080 -0.07729  0.0326  0.1528
wFood2 -0.0773 -0.00544  0.0245  0.0582
wFood3  0.0326  0.02453 -0.1058  0.0486
wFood4  0.1528  0.05819  0.0486 -0.2596

$concav$cMatrices[[14]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1049 -0.07746  0.0302  0.1521
wFood2 -0.0775 -0.00955  0.0247  0.0623
wFood3  0.0302  0.02470 -0.1029  0.0480
wFood4  0.1521  0.06230  0.0480 -0.2624

$concav$cMatrices[[15]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1074 -0.07791  0.0305  0.1548
wFood2 -0.0779 -0.00963  0.0246  0.0629
wFood3  0.0305  0.02459 -0.1023  0.0472
wFood4  0.1548  0.06295  0.0472 -0.2650

$concav$cMatrices[[16]]
        pFood1  pFood2  pFood3  pFood4
wFood1 -0.1051 -0.0758  0.0301  0.1508
wFood2 -0.0758 -0.0112  0.0249  0.0621
wFood3  0.0301  0.0249 -0.1021  0.0472
wFood4  0.1508  0.0621  0.0472 -0.2601

$concav$cMatrices[[17]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1058 -0.07677  0.0303  0.1526
wFood2 -0.0768 -0.00954  0.0245  0.0620
wFood3  0.0303  0.02448 -0.1022  0.0476
wFood4  0.1526  0.06204  0.0476 -0.2619

$concav$cMatrices[[18]]
        pFood1  pFood2  pFood3  pFood4
wFood1 -0.1068 -0.0761  0.0310  0.1519
wFood2 -0.0761 -0.0125  0.0257  0.0629
wFood3  0.0310  0.0257 -0.1037  0.0471
wFood4  0.1519  0.0629  0.0471 -0.2618

$concav$cMatrices[[19]]
        pFood1  pFood2  pFood3  pFood4
wFood1 -0.1033 -0.0748  0.0303  0.1478
wFood2 -0.0748 -0.0117  0.0253  0.0612
wFood3  0.0303  0.0253 -0.1035  0.0478
wFood4  0.1478  0.0612  0.0478 -0.2568

$concav$cMatrices[[20]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1062 -0.07262  0.0292  0.1496
wFood2 -0.0726 -0.00877  0.0228  0.0585
wFood3  0.0292  0.02284 -0.0975  0.0454
wFood4  0.1496  0.05854  0.0454 -0.2535

$concav$cMatrices[[21]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1066 -0.07378  0.0312  0.1494
wFood2 -0.0738 -0.00942  0.0245  0.0589
wFood3  0.0312  0.02455 -0.1027  0.0471
wFood4  0.1494  0.05887  0.0471 -0.2550

$concav$cMatrices[[22]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1053 -0.07354  0.0300  0.1491
wFood2 -0.0735 -0.00937  0.0239  0.0593
wFood3  0.0300  0.02386 -0.1005  0.0467
wFood4  0.1491  0.05927  0.0467 -0.2547

$concav$cMatrices[[23]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1074 -0.07180  0.0292  0.1501
wFood2 -0.0718 -0.00757  0.0221  0.0572
wFood3  0.0292  0.02212 -0.0959  0.0446
wFood4  0.1501  0.05725  0.0446 -0.2520

$concav$cMatrices[[24]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1104 -0.07193  0.0288  0.1533
wFood2 -0.0719 -0.00585  0.0210  0.0566
wFood3  0.0288  0.02096 -0.0930  0.0431
wFood4  0.1533  0.05661  0.0431 -0.2533

$concav$cMatrices[[25]]
        pFood1  pFood2  pFood3  pFood4
wFood1 -0.1146 -0.0696  0.0337  0.1508
wFood2 -0.0696 -0.0106  0.0247  0.0557
wFood3  0.0337  0.0247 -0.1021  0.0439
wFood4  0.1508  0.0557  0.0439 -0.2501

$concav$cMatrices[[26]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1109 -0.06928  0.0309  0.1493
wFood2 -0.0693 -0.00394  0.0212  0.0520
wFood3  0.0309  0.02124 -0.0958  0.0437
wFood4  0.1493  0.05199  0.0437 -0.2450

$concav$cMatrices[[27]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1041 -0.06421  0.0286  0.1396
wFood2 -0.0642 -0.00477  0.0202  0.0487
wFood3  0.0286  0.02024 -0.0922  0.0434
wFood4  0.1396  0.04875  0.0434 -0.2317

$concav$cMatrices[[28]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1109 -0.07145  0.0308  0.1515
wFood2 -0.0714 -0.00342  0.0214  0.0535
wFood3  0.0308  0.02140 -0.0966  0.0444
wFood4  0.1515  0.05347  0.0444 -0.2494

$concav$cMatrices[[29]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1124 -0.07240  0.0342  0.1507
wFood2 -0.0724 -0.00472  0.0238  0.0533
wFood3  0.0342  0.02383 -0.1041  0.0461
wFood4  0.1507  0.05329  0.0461 -0.2501

$concav$cMatrices[[30]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1182 -0.07026  0.0345  0.1536
wFood2 -0.0703 -0.00718  0.0237  0.0535
wFood3  0.0345  0.02369 -0.1014  0.0430
wFood4  0.1536  0.05355  0.0430 -0.2505

$concav$cMatrices[[31]]
        pFood1  pFood2  pFood3  pFood4
wFood1 -0.1243 -0.0724  0.0355  0.1609
wFood2 -0.0724 -0.0121  0.0254  0.0589
wFood3  0.0355  0.0254 -0.1026  0.0416
wFood4  0.1609  0.0589  0.0416 -0.2617

$concav$cMatrices[[32]]
        pFood1  pFood2  pFood3  pFood4
wFood1 -0.1188 -0.0659  0.0335  0.1512
wFood2 -0.0659 -0.0163  0.0252  0.0570
wFood3  0.0335  0.0252 -0.0993  0.0405
wFood4  0.1512  0.0570  0.0405 -0.2487


$concav$concavity
 [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[13] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[25] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE

$concav$nValidObs
[1] 32

$concav$nConcavObs
[1] 0

$concav$concavPercent
[1] 0


> 
> # with fitted expenditure shares
> consistFitted <- aidsConsist( pNames, totExpName = "xFood",
+    data = Blanciforti86[ set, ], coef = estResultAIDS$coef )
> print( consistFitted )

Checking theoretical consistency of an Almost Ideal Demand System (AIDS):
The adding-up condition is fulfilled
The homogeneity condition is fulfilled
The symmetry condition is fulfilled
Monotonicity is fulfilled at 32 out of 32 observations (100%)
Concavity is fulfilled at 0 out of 32 observations (0%)
> class( consistFitted ) <- NULL
> class( consistFitted$mono ) <- NULL
> class( consistFitted$concav ) <- NULL
> print( consistFitted )
$addingUp
[1] TRUE

$homogeneity
[1] TRUE

$symmetry
[1] TRUE

$mono
$mono$monotony
1947 1948 1949 1950 1951 1952 1953 1954 1955 1956 1957 1958 1959 1960 1961 1962 
TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE 
1963 1964 1965 1966 1967 1968 1969 1970 1971 1972 1973 1974 1975 1976 1977 1978 
TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE 

$mono$nValidObs
[1] 32

$mono$nMonoObs
[1] 32

$mono$monoPercent
[1] 100

$mono$priceIndex
[1] "TL"


$concav
$concav$cMatrices
$concav$cMatrices[[1]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1100 -0.07827  0.0316  0.1567
wFood2 -0.0783  0.00406  0.0208  0.0534
wFood3  0.0316  0.02084 -0.1003  0.0479
wFood4  0.1567  0.05337  0.0479 -0.2579

$concav$cMatrices[[2]]
        pFood1  pFood2  pFood3  pFood4
wFood1 -0.1110 -0.0836  0.0326  0.1620
wFood2 -0.0836  0.0144  0.0191  0.0501
wFood3  0.0326  0.0191 -0.1022  0.0504
wFood4  0.1620  0.0501  0.0504 -0.2626

$concav$cMatrices[[3]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1069 -0.08175  0.0313  0.1574
wFood2 -0.0817  0.00758  0.0206  0.0536
wFood3  0.0313  0.02059 -0.1023  0.0504
wFood4  0.1574  0.05358  0.0504 -0.2614

$concav$cMatrices[[4]]
        pFood1  pFood2  pFood3  pFood4
wFood1 -0.1099 -0.0854  0.0326  0.1627
wFood2 -0.0854  0.0165  0.0190  0.0498
wFood3  0.0326  0.0190 -0.1032  0.0517
wFood4  0.1627  0.0498  0.0517 -0.2642

$concav$cMatrices[[5]]
        pFood1  pFood2  pFood3  pFood4
wFood1 -0.1120 -0.0868  0.0333  0.1655
wFood2 -0.0868  0.0194  0.0185  0.0489
wFood3  0.0333  0.0185 -0.1036  0.0518
wFood4  0.1655  0.0489  0.0518 -0.2662

$concav$cMatrices[[6]]
        pFood1  pFood2  pFood3  pFood4
wFood1 -0.1062 -0.0832  0.0312  0.1582
wFood2 -0.0832  0.0084  0.0206  0.0541
wFood3  0.0312  0.0206 -0.1029  0.0512
wFood4  0.1582  0.0541  0.0512 -0.2635

$concav$cMatrices[[7]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1125 -0.08296  0.0328  0.1626
wFood2 -0.0830  0.00677  0.0212  0.0550
wFood3  0.0328  0.02122 -0.1035  0.0495
wFood4  0.1626  0.05497  0.0495 -0.2671

$concav$cMatrices[[8]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1144 -0.08565  0.0336  0.1665
wFood2 -0.0856  0.00761  0.0216  0.0564
wFood3  0.0336  0.02162 -0.1055  0.0502
wFood4  0.1665  0.05641  0.0502 -0.2731

$concav$cMatrices[[9]]
        pFood1    pFood2  pFood3  pFood4
wFood1 -0.1148 -0.081798  0.0333  0.1633
wFood2 -0.0818 -0.000212  0.0231  0.0589
wFood3  0.0333  0.023119 -0.1045  0.0481
wFood4  0.1633  0.058892  0.0481 -0.2702

$concav$cMatrices[[10]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1141 -0.07908  0.0327  0.1605
wFood2 -0.0791 -0.00891  0.0251  0.0629
wFood3  0.0327  0.02507 -0.1042  0.0464
wFood4  0.1605  0.06291  0.0464 -0.2698

$concav$cMatrices[[11]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1138 -0.08151  0.0331  0.1623
wFood2 -0.0815 -0.00124  0.0234  0.0594
wFood3  0.0331  0.02337 -0.1046  0.0482
wFood4  0.1623  0.05939  0.0482 -0.2698

$concav$cMatrices[[12]]
        pFood1    pFood2  pFood3  pFood4
wFood1 -0.1061 -0.081858  0.0311  0.1569
wFood2 -0.0819  0.000227  0.0228  0.0588
wFood3  0.0311  0.022789 -0.1041  0.0503
wFood4  0.1569  0.058842  0.0503 -0.2660

$concav$cMatrices[[13]]
        pFood1  pFood2  pFood3  pFood4
wFood1 -0.1078 -0.0789  0.0313  0.1553
wFood2 -0.0789 -0.0026  0.0231  0.0584
wFood3  0.0313  0.0231 -0.1030  0.0486
wFood4  0.1553  0.0584  0.0486 -0.2622

$concav$cMatrices[[14]]
        pFood1  pFood2  pFood3  pFood4
wFood1 -0.1084 -0.0774  0.0313  0.1545
wFood2 -0.0774 -0.0061  0.0238  0.0597
wFood3  0.0313  0.0238 -0.1027  0.0476
wFood4  0.1545  0.0597  0.0476 -0.2617

$concav$cMatrices[[15]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1102 -0.07837  0.0318  0.1567
wFood2 -0.0784 -0.00592  0.0240  0.0602
wFood3  0.0318  0.02404 -0.1034  0.0475
wFood4  0.1567  0.06025  0.0475 -0.2644

$concav$cMatrices[[16]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1088 -0.07702  0.0315  0.1544
wFood2 -0.0770 -0.00503  0.0235  0.0585
wFood3  0.0315  0.02352 -0.1025  0.0475
wFood4  0.1544  0.05853  0.0475 -0.2604

$concav$cMatrices[[17]]
        pFood1  pFood2  pFood3  pFood4
wFood1 -0.1070 -0.0752  0.0307  0.1515
wFood2 -0.0752 -0.0115  0.0250  0.0617
wFood3  0.0307  0.0250 -0.1022  0.0466
wFood4  0.1515  0.0617  0.0466 -0.2597

$concav$cMatrices[[18]]
        pFood1 pFood2  pFood3  pFood4
wFood1 -0.1072 -0.074  0.0305  0.1507
wFood2 -0.0740 -0.016  0.0260  0.0640
wFood3  0.0305  0.026 -0.1021  0.0456
wFood4  0.1507  0.064  0.0456 -0.2603

$concav$cMatrices[[19]]
        pFood1  pFood2  pFood3  pFood4
wFood1 -0.1062 -0.0735  0.0303  0.1494
wFood2 -0.0735 -0.0111  0.0245  0.0602
wFood3  0.0303  0.0245 -0.1011  0.0463
wFood4  0.1494  0.0602  0.0463 -0.2559

$concav$cMatrices[[20]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1072 -0.07351  0.0307  0.1500
wFood2 -0.0735 -0.00612  0.0230  0.0566
wFood3  0.0307  0.02303 -0.1002  0.0465
wFood4  0.1500  0.05660  0.0465 -0.2530

$concav$cMatrices[[21]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1112 -0.07172  0.0317  0.1513
wFood2 -0.0717 -0.00845  0.0235  0.0567
wFood3  0.0317  0.02349 -0.0998  0.0447
wFood4  0.1513  0.05668  0.0447 -0.2526

$concav$cMatrices[[22]]
        pFood1  pFood2  pFood3  pFood4
wFood1 -0.1086 -0.0694  0.0305  0.1475
wFood2 -0.0694 -0.0136  0.0244  0.0586
wFood3  0.0305  0.0244 -0.0988  0.0440
wFood4  0.1475  0.0586  0.0440 -0.2500

$concav$cMatrices[[23]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1099 -0.07024  0.0311  0.1491
wFood2 -0.0702 -0.00775  0.0228  0.0552
wFood3  0.0311  0.02283 -0.0983  0.0444
wFood4  0.1491  0.05516  0.0444 -0.2487

$concav$cMatrices[[24]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1125 -0.07033  0.0318  0.1510
wFood2 -0.0703 -0.00655  0.0226  0.0543
wFood3  0.0318  0.02257 -0.0982  0.0439
wFood4  0.1510  0.05432  0.0439 -0.2492

$concav$cMatrices[[25]]
        pFood1  pFood2  pFood3  pFood4
wFood1 -0.1128 -0.0709  0.0318  0.1519
wFood2 -0.0709 -0.0101  0.0237  0.0573
wFood3  0.0318  0.0237 -0.0993  0.0438
wFood4  0.1519  0.0573  0.0438 -0.2530

$concav$cMatrices[[26]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1078 -0.06926  0.0304  0.1466
wFood2 -0.0693 -0.00743  0.0224  0.0543
wFood3  0.0304  0.02244 -0.0974  0.0445
wFood4  0.1466  0.05425  0.0445 -0.2454

$concav$cMatrices[[27]]
        pFood1    pFood2  pFood3  pFood4
wFood1 -0.1000 -0.069424  0.0286  0.1409
wFood2 -0.0694 -0.000152  0.0202  0.0494
wFood3  0.0286  0.020174 -0.0956  0.0469
wFood4  0.1409  0.049402  0.0469 -0.2371

$concav$cMatrices[[28]]
        pFood1  pFood2  pFood3  pFood4
wFood1 -0.1071 -0.0700  0.0305  0.1465
wFood2 -0.0700 -0.0101  0.0236  0.0565
wFood3  0.0305  0.0236 -0.0991  0.0450
wFood4  0.1465  0.0565  0.0450 -0.2480

$concav$cMatrices[[29]]
        pFood1  pFood2  pFood3  pFood4
wFood1 -0.1123 -0.0724  0.0323  0.1523
wFood2 -0.0724 -0.0049  0.0228  0.0545
wFood3  0.0323  0.0228 -0.1001  0.0450
wFood4  0.1523  0.0545  0.0450 -0.2519

$concav$cMatrices[[30]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1178 -0.07094  0.0334  0.1554
wFood2 -0.0709 -0.00637  0.0229  0.0544
wFood3  0.0334  0.02288 -0.0992  0.0429
wFood4  0.1554  0.05443  0.0429 -0.2527

$concav$cMatrices[[31]]
        pFood1  pFood2  pFood3  pFood4
wFood1 -0.1222 -0.0731  0.0342  0.1612
wFood2 -0.0731 -0.0130  0.0252  0.0609
wFood3  0.0342  0.0252 -0.1013  0.0419
wFood4  0.1612  0.0609  0.0419 -0.2640

$concav$cMatrices[[32]]
        pFood1   pFood2  pFood3  pFood4
wFood1 -0.1152 -0.07186  0.0324  0.1547
wFood2 -0.0719 -0.00986  0.0239  0.0579
wFood3  0.0324  0.02385 -0.0997  0.0435
wFood4  0.1547  0.05787  0.0435 -0.2560


$concav$concavity
 [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[13] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[25] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE

$concav$nValidObs
[1] 32

$concav$nConcavObs
[1] 0

$concav$concavPercent
[1] 0


> 
> aidsConsist( pNames, totExpName = "xFood",
+    data = Blanciforti86[ set, ], coef = coef( estResultLaS ),
+    priceIndex = "S" )

Checking theoretical consistency of an Linear Approximate Almost Ideal Demand System (LA-AIDS):
The adding-up condition is fulfilled
The homogeneity condition is fulfilled
The symmetry condition is fulfilled
Monotonicity is fulfilled at 32 out of 32 observations (100%)
> aidsConsist( pNames, totExpName = "xFood",
+    data = Blanciforti86[ set, ], coef = coef( estResultLaS ),
+    priceIndex = estResultLaS$lnp )

Checking theoretical consistency of an Linear Approximate Almost Ideal Demand System (LA-AIDS):
The adding-up condition is fulfilled
The homogeneity condition is fulfilled
The symmetry condition is fulfilled
Monotonicity is fulfilled at 32 out of 32 observations (100%)
> aidsConsist( pNames, totExpName = "xFood",
+    data = Blanciforti86[ set, ], coef = coef( estResultLaP ),
+    priceIndex = "P", basePrices = estResultLaP$basePrices )

Checking theoretical consistency of an Linear Approximate Almost Ideal Demand System (LA-AIDS):
The adding-up condition is fulfilled
The homogeneity condition is fulfilled
The symmetry condition is fulfilled
Monotonicity is fulfilled at 32 out of 32 observations (100%)
> aidsConsist( pNames, totExpName = "xFood",
+    data = Blanciforti86[ set, ], coef = coef( estResultLaP ),
+    priceIndex = estResultLaP$lnp )

Checking theoretical consistency of an Linear Approximate Almost Ideal Demand System (LA-AIDS):
The adding-up condition is fulfilled
The homogeneity condition is fulfilled
The symmetry condition is fulfilled
Monotonicity is fulfilled at 32 out of 32 observations (100%)
> aidsConsist( pNames, totExpName = "xFood",
+    data = Blanciforti86[ set, ], coef = coef( estResultLaL ),
+    priceIndex = "L", basePrices = estResultLaL$basePrices,
+    baseShares = estResultLaL$baseShares )

Checking theoretical consistency of an Linear Approximate Almost Ideal Demand System (LA-AIDS):
The adding-up condition is fulfilled
The homogeneity condition is fulfilled
The symmetry condition is fulfilled
Monotonicity is fulfilled at 32 out of 32 observations (100%)
Warning message:
In aidsPx(priceIndex, priceNames, data = data, coef = coef, base = list(prices = basePrices,  :
  the base expenditure shares specified by element 'shares' of argument 'base' do not sum up to 1 (deviation from 1 = 0.001)
> aidsConsist( pNames, totExpName = "xFood",
+    data = Blanciforti86[ set, ], coef = coef( estResultLaT ),
+    priceIndex = "T", basePrices = estResultLaT$basePrices,
+    baseShares = estResultLaT$baseShares )

Checking theoretical consistency of an Linear Approximate Almost Ideal Demand System (LA-AIDS):
The adding-up condition is fulfilled
The homogeneity condition is fulfilled
The symmetry condition is fulfilled
Monotonicity is fulfilled at 32 out of 32 observations (100%)
> aidsConsist( pNames, totExpName = "xFood",
+    data = Blanciforti86[ set, ], coef = coef( estResultLaT ),
+    priceIndex = "T", basePrices = estResultLaT$basePrices,
+    baseShares = estResultLaT$baseShares,
+    shareNames = wNames )

Checking theoretical consistency of an Linear Approximate Almost Ideal Demand System (LA-AIDS):
The adding-up condition is fulfilled
The homogeneity condition is fulfilled
The symmetry condition is fulfilled
Monotonicity is fulfilled at 32 out of 32 observations (100%)
> aidsConsist( pNames, totExpName = "xFood",
+    data = Blanciforti86[ set, ], coef = coef( estResultLA ),
+    priceIndex = "SL" )

Checking theoretical consistency of an Linear Approximate Almost Ideal Demand System (LA-AIDS):
The adding-up condition is fulfilled
The homogeneity condition is fulfilled
The symmetry condition is fulfilled
Monotonicity is fulfilled at 32 out of 32 observations (100%)
> aidsConsist( pNames, totExpName = "xFood",
+    data = Blanciforti86[ set, ], coef = coef( estResultLATX ),
+    priceIndex = "SL" )

Checking theoretical consistency of an Linear Approximate Almost Ideal Demand System (LA-AIDS):
The adding-up condition is fulfilled
The homogeneity condition is fulfilled
The symmetry condition is fulfilled
Monotonicity is fulfilled at 32 out of 32 observations (100%)
> aidsConsist( pNames, totExpName = "xFood",
+    data = Blanciforti86[ set, ], coef = coef( estResultLAhom ),
+    priceIndex = "SL" )

Checking theoretical consistency of an Linear Approximate Almost Ideal Demand System (LA-AIDS):
The adding-up condition is fulfilled
The homogeneity condition is fulfilled
The symmetry condition is NOT fulfilled
Monotonicity is fulfilled at 32 out of 32 observations (100%)
> aidsConsist( pNames, totExpName = "xFood",
+    data = Blanciforti86[ set, ], coef = coef( estResultLAhom ),
+    priceIndex = estResultLAhom$lnp, shareNames = wNames )

Checking theoretical consistency of an Linear Approximate Almost Ideal Demand System (LA-AIDS):
The adding-up condition is fulfilled
The homogeneity condition is fulfilled
The symmetry condition is NOT fulfilled
Monotonicity is fulfilled at 31 out of 31 observations (100%)
> aidsConsist( pNames, totExpName = "xFood",
+    data = Blanciforti86[ set, ], coef = coef( estResultLAhomTX ),
+    priceIndex = "SL" )

Checking theoretical consistency of an Linear Approximate Almost Ideal Demand System (LA-AIDS):
The adding-up condition is fulfilled
The homogeneity condition is fulfilled
The symmetry condition is NOT fulfilled
Monotonicity is fulfilled at 32 out of 32 observations (100%)
> aidsConsist( pNames, totExpName = "xFood",
+    data = Blanciforti86[ set, ], coef = coef( estResultLAunr ),
+    priceIndex = "SL" )

Checking theoretical consistency of an Linear Approximate Almost Ideal Demand System (LA-AIDS):
The adding-up condition is fulfilled
The homogeneity condition is NOT fulfilled
The symmetry condition is NOT fulfilled
Monotonicity is fulfilled at 32 out of 32 observations (100%)
> aidsConsist( pNames, totExpName = "xFood",
+    data = Blanciforti86[ set, ], coef = coef( estResultLAunrTX ),
+    priceIndex = "SL" )

Checking theoretical consistency of an Linear Approximate Almost Ideal Demand System (LA-AIDS):
The adding-up condition is fulfilled
The homogeneity condition is NOT fulfilled
The symmetry condition is NOT fulfilled
Monotonicity is fulfilled at 32 out of 32 observations (100%)
> aidsConsist( pNames, totExpName = "xFood",
+    data = Blanciforti86[ set, ], coef = coef( estResultAIDS ) )

Checking theoretical consistency of an Almost Ideal Demand System (AIDS):
The adding-up condition is fulfilled
The homogeneity condition is fulfilled
The symmetry condition is fulfilled
Monotonicity is fulfilled at 32 out of 32 observations (100%)
Concavity is fulfilled at 0 out of 32 observations (0%)
> aidsConsist( pNames, totExpName = "xFood",
+    data = Blanciforti86[ set, ], coef = coef( estResultAIDS ),
+    shareNames = wNames )

Checking theoretical consistency of an Almost Ideal Demand System (AIDS):
The adding-up condition is fulfilled
The homogeneity condition is fulfilled
The symmetry condition is fulfilled
Monotonicity is fulfilled at 32 out of 32 observations (100%)
Concavity is fulfilled at 0 out of 32 observations (0%)
> aidsConsist( pNames, totExpName = "xFood",
+    data = Blanciforti86[ set, ], coef = coef( estResultAIDSTX ) )

Checking theoretical consistency of an Almost Ideal Demand System (AIDS):
The adding-up condition is fulfilled
The homogeneity condition is fulfilled
The symmetry condition is fulfilled
Monotonicity is fulfilled at 32 out of 32 observations (100%)
Concavity is fulfilled at 0 out of 32 observations (0%)
> aidsConsist( pNames, totExpName = "xFood",
+    data = Blanciforti86[ set, ], coef = coef( estResultAIDShom ) )

Checking theoretical consistency of an Almost Ideal Demand System (AIDS):
The adding-up condition is fulfilled
The homogeneity condition is fulfilled
The symmetry condition is NOT fulfilled
Monotonicity is fulfilled at 32 out of 32 observations (100%)
> aidsConsist( pNames, totExpName = "xFood",
+    data = Blanciforti86[ set, ], coef = coef( estResultAIDShomTX ) )

Checking theoretical consistency of an Almost Ideal Demand System (AIDS):
The adding-up condition is fulfilled
The homogeneity condition is fulfilled
The symmetry condition is NOT fulfilled
Monotonicity is fulfilled at 32 out of 32 observations (100%)
> aidsConsist( pNames, totExpName = "xFood",
+    data = Blanciforti86[ set, ], coef = coef( estResultAIDSunr ) )

Checking theoretical consistency of an Almost Ideal Demand System (AIDS):
The adding-up condition is fulfilled
The homogeneity condition is NOT fulfilled
The symmetry condition is NOT fulfilled
Monotonicity is fulfilled at 32 out of 32 observations (100%)
> aidsConsist( pNames, totExpName = "xFood",
+    data = Blanciforti86[ set, ], coef = coef( estResultAIDSunrTX ) )

Checking theoretical consistency of an Almost Ideal Demand System (AIDS):
The adding-up condition is fulfilled
The homogeneity condition is NOT fulfilled
The symmetry condition is NOT fulfilled
Monotonicity is fulfilled at 32 out of 32 observations (100%)
> aidsConsist( pNames, totExpName = "xFood",
+    data = Blanciforti86[ set, ], coef = coef( estResultAIDSunrTX ),
+    shareNames = wNames )

Checking theoretical consistency of an Almost Ideal Demand System (AIDS):
The adding-up condition is fulfilled
The homogeneity condition is NOT fulfilled
The symmetry condition is NOT fulfilled
Monotonicity is fulfilled at 32 out of 32 observations (100%)
> 
> ## checkConsist
> # AIDS
> consistAids <- aidsConsist( pNames, totExpName = "xFood",
+    data = Blanciforti86[ setWo1, ], coef = coef( estResultAIDS ) )
> consistAids2 <- checkConsist( estResultAIDS )
> all.equal( consistAids, consistAids2 )
[1] TRUE
> 
> # AIDS with observedShares = TRUE
> consistAidsSh <- aidsConsist( pNames, totExpName = "xFood",
+    data = Blanciforti86[ setWo1, ], coef = coef( estResultAIDS ),
+    shareNames = wNames )
> consistAidsSh2 <- checkConsist( estResultAIDS, observedShares = TRUE )
> all.equal( consistAidsSh, consistAidsSh2 )
[1] TRUE
> 
> # LA-AIDS with Laspeyres index
> consistLaL <- aidsConsist( pNames, totExpName = "xFood",
+    data = Blanciforti86[ set, ], coef = coef( estResultLaL ),
+    priceIndex = "L", basePrices = estResultLaL$basePrices,
+    baseShares = estResultLaL$baseShares )
Warning message:
In aidsPx(priceIndex, priceNames, data = data, coef = coef, base = list(prices = basePrices,  :
  the base expenditure shares specified by element 'shares' of argument 'base' do not sum up to 1 (deviation from 1 = 0.001)
> consistLaL2 <- checkConsist( estResultLaL )
Warning message:
In aidsPx(priceIndex, priceNames, data = data, coef = coef, base = list(prices = basePrices,  :
  the base expenditure shares specified by element 'shares' of argument 'base' do not sum up to 1 (deviation from 1 = 0.001)
> all.equal( consistLaL, consistLaL2 )
[1] TRUE
> 
> # LA-AIDS with Laspeyres index and observedShares = TRUE
> consistLaLSh <- aidsConsist( pNames, totExpName = "xFood",
+    data = Blanciforti86[ set, ], coef = coef( estResultLaL ),
+    priceIndex = estResultLaL$lnp, shareNames = wNames )
> consistLaLSh2 <- checkConsist( estResultLaL, observedShares = TRUE )
> all.equal( consistLaLSh, consistLaLSh2 )
[1] TRUE
> 
> # LA-AIDS with Stone index with lagged shares
> consistLaSl <- aidsConsist( pNames, totExpName = "xFood",
+    data = Blanciforti86[ set, ], coef = coef( estResultLaSl ),
+    priceIndex = "SL" )
> consistLaSl2 <- checkConsist( estResultLaSl )
> all.equal( consistLaSl, consistLaSl2 )
[1] TRUE
> 
> # LA-AIDS with Stone index with lagged shares and observedShares = TRUE
> consistLaSlSh <- aidsConsist( pNames, totExpName = "xFood",
+    data = Blanciforti86[ set, ], coef = coef( estResultLaSl ),
+    priceIndex = estResultLaSl$lnp, shareNames = wNames )
> consistLaSlSh2 <- checkConsist( estResultLaSl, observedShares = TRUE )
> all.equal( consistLaSlSh, consistLaSlSh2 )
[1] TRUE
> 
> 
> ## replicating the LA-AIDS estimation of the SAS example
> # loading data set
> data( USMeatConsump )
> 
> # adding shifter variables for modeling seasonal effects
> USMeatConsump$co1 <- cos( 1 / 2 * 3.14159 * USMeatConsump$t )
> USMeatConsump$si1 <- sin( 1 / 2 * 3.14159 * USMeatConsump$t )
> 
> # Scaling prices by their means
> USMeatConsump$beef_pm <- USMeatConsump$beef_p / mean( USMeatConsump$beef_p )
> USMeatConsump$pork_pm <- USMeatConsump$pork_p / mean( USMeatConsump$pork_p )
> USMeatConsump$chick_pm <- USMeatConsump$chick_p / mean( USMeatConsump$chick_p )
> USMeatConsump$turkey_pm <- USMeatConsump$turkey_p / mean( USMeatConsump$turkey_p )
> 
> # Estimation of the model
> meatModel <- aidsEst( c( "beef_pm", "pork_pm", "chick_pm", "turkey_pm" ),
+    c( "beef_w", "pork_w", "chick_w", "turkey_w" ),
+    "meat_exp", shifterNames = c( "co1", "si1", "t" ),
+    method = "LA:S", data = USMeatConsump, maxiter=1000 )
Warning message:
In aidsEst(c("beef_pm", "pork_pm", "chick_pm", "turkey_pm"), c("beef_w",  :
  using price index specified in argument 'method', ignoring argument 'priceIndex'
> meatModel

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: Linear Approximation (LA) with Stone Index (S)
Coefficients:
alpha
  beef_w   pork_w  chick_w turkey_w 
   0.398    0.241    0.580   -0.218 
beta
  beef_w   pork_w  chick_w turkey_w 
 0.02342  0.00339 -0.05355  0.02674 
gamma
          beef_pm  pork_pm chick_pm turkey_pm
beef_w    0.04117 -0.00407  -0.0493   0.01215
pork_w   -0.00407  0.04473  -0.0307  -0.00993
chick_w  -0.04926 -0.03074   0.1014  -0.02139
turkey_w  0.01215 -0.00993  -0.0214   0.01916
delta
              co1       si1         t
beef_w   -0.01631 -0.002282 -0.001477
pork_w    0.00961  0.006454  0.000278
chick_w  -0.00567 -0.000836  0.000893
turkey_w  0.01237 -0.003336  0.000306
> summary( meatModel )

Demand analysis with the Almost Ideal Demand System (AIDS)
Estimation Method: Linear Approximation (LA) with Stone Index (S)
Estimated Coefficients:
           Estimate Std. Error t value Pr(>|t|)    
alpha 1    3.98e-01   3.99e-01    1.00   0.3189    
alpha 2    2.41e-01   2.86e-01    0.84   0.4005    
alpha 3    5.80e-01   1.76e-01    3.30   0.0011 ** 
alpha 4   -2.18e-01   2.93e-01   -0.75   0.4565    
beta 1     2.34e-02   4.41e-02    0.53   0.5955    
beta 2     3.39e-03   3.16e-02    0.11   0.9149    
beta 3    -5.35e-02   1.94e-02   -2.75   0.0063 ** 
beta 4     2.67e-02   3.25e-02    0.82   0.4108    
gamma 1 1  4.12e-02   1.26e-02    3.26   0.0012 ** 
gamma 1 2 -4.07e-03   8.08e-03   -0.50   0.6153    
gamma 1 3 -4.93e-02   5.38e-03   -9.15  < 2e-16 ***
gamma 1 4  1.22e-02   9.56e-03    1.27   0.2048    
gamma 2 1 -4.07e-03   8.08e-03   -0.50   0.6153    
gamma 2 2  4.47e-02   8.76e-03    5.10  6.2e-07 ***
gamma 2 3 -3.07e-02   5.99e-03   -5.13  5.4e-07 ***
gamma 2 4 -9.93e-03   7.50e-03   -1.32   0.1869    
gamma 3 1 -4.93e-02   5.38e-03   -9.15  < 2e-16 ***
gamma 3 2 -3.07e-02   5.99e-03   -5.13  5.4e-07 ***
gamma 3 3  1.01e-01   7.56e-03   13.40  < 2e-16 ***
gamma 3 4 -2.14e-02   6.96e-03   -3.07   0.0023 ** 
gamma 4 1  1.22e-02   9.56e-03    1.27   0.2048    
gamma 4 2 -9.93e-03   7.50e-03   -1.32   0.1869    
gamma 4 3 -2.14e-02   6.96e-03   -3.07   0.0023 ** 
gamma 4 4  1.92e-02   1.23e-02    1.55   0.1213    
delta 1 1 -1.63e-02   1.62e-03  -10.06  < 2e-16 ***
delta 1 2 -2.28e-03   1.56e-03   -1.46   0.1451    
delta 1 3 -1.48e-03   4.83e-05  -30.62  < 2e-16 ***
delta 2 1  9.61e-03   1.18e-03    8.14  1.3e-14 ***
delta 2 2  6.45e-03   1.13e-03    5.71  2.9e-08 ***
delta 2 3  2.78e-04   3.60e-05    7.74  1.9e-13 ***
delta 3 1 -5.67e-03   6.96e-04   -8.14  1.3e-14 ***
delta 3 2 -8.36e-04   6.60e-04   -1.27   0.2067    
delta 3 3  8.93e-04   2.62e-05   34.05  < 2e-16 ***
delta 4 1  1.24e-02   1.15e-03   10.80  < 2e-16 ***
delta 4 2 -3.34e-03   1.09e-03   -3.05   0.0025 ** 
delta 4 3  3.06e-04   4.61e-05    6.64  1.7e-10 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
R-squared Values of expenditure shares:
  beef_w   pork_w  chick_w turkey_w 
   0.954    0.778    0.978   -1.380 
R-squared Values of quantities:
  q_beef_w   q_pork_w  q_chick_w q_turkey_w 
    -1.011      0.253     -2.627     -0.944 
> 
> 
> ## log likelihood values
> logLik( estResultLA )
'log Lik.' 353 (df=18)
> logLik( estResultLATX )
'log Lik.' 353 (df=18)
> logLik( estResultLAhom )
'log Lik.' 355 (df=21)
> logLik( estResultLAhomTX )
'log Lik.' 355 (df=21)
> logLik( estResultLAunr )
'log Lik.' 365 (df=24)
> logLik( estResultLAunrTX )
'log Lik.' 365 (df=24)
> logLik( estResultLAtrend )
'log Lik.' 386 (df=21)
> logLik( estResultLAtrend2 )
'log Lik.' 397 (df=24)
> logLik( estResultAIDS )
'log Lik.' 352 (df=18)
> logLik( estResultAIDSTX )
'log Lik.' 352 (df=18)
> logLik( estResultAIDShom )
'log Lik.' 354 (df=21)
> logLik( estResultAIDShomTX )
'log Lik.' 354 (df=21)
> logLik( estResultAIDSunr )
'log Lik.' 365 (df=24)
> logLik( estResultAIDSunrTX )
'log Lik.' 365 (df=24)
> logLik( estResultLaSNa )
'log Lik.' 359 (df=18)
> logLik( estResultLaSlNa )
'log Lik.' 353 (df=18)
> logLik( estResultLaLsNa )
'log Lik.' 359 (df=18)
> logLik( estResultAIDSNa )
'log Lik.' 360 (df=18)
> logLik( meatModel )
'log Lik.' 1114 (df=27)
> 
> 
> ## LR tests
> lrtest( estResultLA, estResultLAhom, estResultLAunr, estResultLA )
Likelihood ratio test

Model 1: estResultLA (LA-AIDS, symmetry and homogeneity imposed)
Model 2: estResultLAhom (LA-AIDS, homogeneity imposed)
Model 3: estResultLAunr (LA-AIDS, unrestricted)
Model 4: estResultLA (LA-AIDS, symmetry and homogeneity imposed)
  #Df LogLik Df Chisq Pr(>Chisq)    
1  18    353                        
2  21    355  3   3.7    0.29551    
3  24    365  3  20.6    0.00013 ***
4  18    353 -6  24.3    0.00046 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> lrtest( estResultLATX, estResultLAhomTX, estResultLAunrTX, estResultLATX )
Likelihood ratio test

Model 1: estResultLATX (LA-AIDS, symmetry and homogeneity imposed)
Model 2: estResultLAhomTX (LA-AIDS, homogeneity imposed)
Model 3: estResultLAunrTX (LA-AIDS, unrestricted)
Model 4: estResultLATX (LA-AIDS, symmetry and homogeneity imposed)
  #Df LogLik Df Chisq Pr(>Chisq)    
1  18    353                        
2  21    355  3   3.7    0.29551    
3  24    365  3  20.6    0.00013 ***
4  18    353 -6  24.3    0.00046 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> lrtest( estResultLaLs, estResultLAtrend, estResultLAtrend2, estResultLaLs )
Likelihood ratio test

Model 1: estResultLaLs (LA-AIDS, symmetry and homogeneity imposed)
Model 2: estResultLAtrend (LA-AIDS, symmetry and homogeneity imposed, 1 demand shifter(s))
Model 3: estResultLAtrend2 (LA-AIDS, symmetry and homogeneity imposed, 2 demand shifter(s))
Model 4: estResultLaLs (LA-AIDS, symmetry and homogeneity imposed)
  #Df LogLik Df Chisq Pr(>Chisq)    
1  18    359                        
2  21    386  3  53.7    1.3e-11 ***
3  24    397  3  22.4    5.4e-05 ***
4  18    359 -6  76.1    2.3e-14 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> lrtest( estResultAIDSunr, estResultAIDShom, estResultAIDS, estResultAIDSunr )
Likelihood ratio test

Model 1: estResultAIDSunr (AIDS, unrestricted)
Model 2: estResultAIDShom (AIDS, homogeneity imposed)
Model 3: estResultAIDS (AIDS, symmetry and homogeneity imposed)
Model 4: estResultAIDSunr (AIDS, unrestricted)
  #Df LogLik Df Chisq Pr(>Chisq)    
1  24    365                        
2  21    354 -3 22.55      5e-05 ***
3  18    352 -3  3.65      3e-01    
4  24    365  6 26.20      2e-04 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> lrtest( estResultAIDSunrTX, estResultAIDShomTX, estResultAIDSTX,
+    estResultAIDSunrTX )
Likelihood ratio test

Model 1: estResultAIDSunrTX (AIDS, unrestricted)
Model 2: estResultAIDShomTX (AIDS, homogeneity imposed)
Model 3: estResultAIDSTX (AIDS, symmetry and homogeneity imposed)
Model 4: estResultAIDSunrTX (AIDS, unrestricted)
  #Df LogLik Df Chisq Pr(>Chisq)    
1  24    365                        
2  21    354 -3 22.55      5e-05 ***
3  18    352 -3  3.65      3e-01    
4  24    365  6 26.20      2e-04 ***
---
Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1
> 
> 
> ## comparing estimations results with different methods to impose restrictions
> # estResultLA vs. estResultLATX
> estResultLATX$call <- NULL
> estResultLATX$est$call <- NULL
> estResultLATX$est$restrict.regMat <- NULL
> estResultLA$call <- NULL
> estResultLA$est$call <- NULL
> estResultLA$est$restrict.matrix <- NULL
> estResultLA$est$restrict.rhs <- NULL
> print( all.equal( estResultLA, estResultLATX ) )
[1] TRUE
> 
> # estResultLAhom vs. estResultLAhomTX
> estResultLAhomTX$call <- NULL
> estResultLAhomTX$est$call <- NULL
> estResultLAhomTX$est$restrict.regMat <- NULL
> estResultLAhom$call <- NULL
> estResultLAhom$est$call <- NULL
> estResultLAhom$est$restrict.matrix <- NULL
> estResultLAhom$est$restrict.rhs <- NULL
> print( all.equal( estResultLAhom, estResultLAhomTX ) )
[1] TRUE
> 
> # estResultLAunr vs. estResultLAunrTX
> estResultLAunrTX$call <- NULL
> estResultLAunrTX$est$call <- NULL
> estResultLAunr$call <- NULL
> estResultLAunr$est$call <- NULL
> print( all.equal( estResultLAunr, estResultLAunrTX ) )
[1] TRUE
> 
> # estResultAIDS vs. estResultAIDSTX
> estResultAIDSTX$call <- NULL
> estResultAIDSTX$est$call <- NULL
> estResultAIDSTX$est$restrict.regMat <- NULL
> estResultAIDS$call <- NULL
> estResultAIDS$est$call <- NULL
> estResultAIDS$est$restrict.matrix <- NULL
> estResultAIDS$est$restrict.rhs <- NULL
> print( all.equal( estResultAIDS, estResultAIDSTX ) )
[1] TRUE
> 
> # estResultAIDShom vs. estResultAIDShomTX
> estResultAIDShomTX$call <- NULL
> estResultAIDShomTX$est$call <- NULL
> estResultAIDShomTX$est$restrict.regMat <- NULL
> estResultAIDShom$call <- NULL
> estResultAIDShom$est$call <- NULL
> estResultAIDShom$est$restrict.matrix <- NULL
> estResultAIDShom$est$restrict.rhs <- NULL
> print( all.equal( estResultAIDShom, estResultAIDShomTX ) )
[1] TRUE
> 
> # estResultAIDSunr vs. estResultAIDSunrTX
> estResultAIDSunrTX$call <- NULL
> estResultAIDSunrTX$est$call <- NULL
> estResultAIDSunr$call <- NULL
> estResultAIDSunr$est$call <- NULL
> print( all.equal( estResultAIDSunr, estResultAIDSunrTX ) )
[1] TRUE
> 
> proc.time()
   user  system elapsed 
  8.189   0.116   8.290 
